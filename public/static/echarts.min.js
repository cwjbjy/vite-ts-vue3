!(function (t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? e(exports)
    : 'function' == typeof define && define.amd
    ? define(['exports'], e)
    : e((t.echarts = {}));
})(this, function (t) {
  'use strict';
  function e(t) {
    var e = {},
      i = {},
      n = t.match(/Firefox\/([\d.]+)/),
      r = t.match(/MSIE\s([\d.]+)/) || t.match(/Trident\/.+?rv:(([\d.]+))/),
      a = t.match(/Edge\/([\d.]+)/),
      o = /micromessenger/i.test(t);
    return (
      n && ((i.firefox = !0), (i.version = n[1])),
      r && ((i.ie = !0), (i.version = r[1])),
      a && ((i.edge = !0), (i.version = a[1])),
      o && (i.weChat = !0),
      {
        browser: i,
        os: e,
        node: !1,
        canvasSupported: !!document.createElement('canvas').getContext,
        svgSupported: 'undefined' != typeof SVGRect,
        touchEventsSupported: 'ontouchstart' in window && !i.ie && !i.edge,
        pointerEventsSupported: 'onpointerdown' in window && (i.edge || (i.ie && i.version >= 11)),
        domSupported: 'undefined' != typeof document,
      }
    );
  }
  function i(t, e) {
    'createCanvas' === t && (Hg = null), (Gg[t] = e);
  }
  function n(t) {
    if (null == t || 'object' != typeof t) return t;
    var e = t,
      i = Og.call(t);
    if ('[object Array]' === i) {
      if (!R(t)) {
        e = [];
        for (var r = 0, a = t.length; a > r; r++) e[r] = n(t[r]);
      }
    } else if (Lg[i]) {
      if (!R(t)) {
        var o = t.constructor;
        if (t.constructor.from) e = o.from(t);
        else {
          e = new o(t.length);
          for (var r = 0, a = t.length; a > r; r++) e[r] = n(t[r]);
        }
      }
    } else if (!Pg[i] && !R(t) && !C(t)) {
      e = {};
      for (var s in t) t.hasOwnProperty(s) && (e[s] = n(t[s]));
    }
    return e;
  }
  function r(t, e, i) {
    if (!S(e) || !S(t)) return i ? n(e) : t;
    for (var a in e)
      if (e.hasOwnProperty(a)) {
        var o = t[a],
          s = e[a];
        !S(s) || !S(o) || x(s) || x(o) || C(s) || C(o) || M(s) || M(o) || R(s) || R(o)
          ? (!i && a in t) || (t[a] = n(e[a], !0))
          : r(o, s, i);
      }
    return t;
  }
  function a(t, e) {
    for (var i = t[0], n = 1, a = t.length; a > n; n++) i = r(i, t[n], e);
    return i;
  }
  function o(t, e) {
    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
    return t;
  }
  function s(t, e, i) {
    for (var n in e) e.hasOwnProperty(n) && (i ? null != e[n] : null == t[n]) && (t[n] = e[n]);
    return t;
  }
  function l() {
    return Hg || (Hg = Vg().getContext('2d')), Hg;
  }
  function u(t, e) {
    if (t) {
      if (t.indexOf) return t.indexOf(e);
      for (var i = 0, n = t.length; n > i; i++) if (t[i] === e) return i;
    }
    return -1;
  }
  function h(t, e) {
    function i() {}
    var n = t.prototype;
    (i.prototype = e.prototype), (t.prototype = new i());
    for (var r in n) n.hasOwnProperty(r) && (t.prototype[r] = n[r]);
    (t.prototype.constructor = t), (t.superClass = e);
  }
  function c(t, e, i) {
    (t = 'prototype' in t ? t.prototype : t), (e = 'prototype' in e ? e.prototype : e), s(t, e, i);
  }
  function d(t) {
    return t ? ('string' == typeof t ? !1 : 'number' == typeof t.length) : void 0;
  }
  function f(t, e, i) {
    if (t && e)
      if (t.forEach && t.forEach === Eg) t.forEach(e, i);
      else if (t.length === +t.length) for (var n = 0, r = t.length; r > n; n++) e.call(i, t[n], n, t);
      else for (var a in t) t.hasOwnProperty(a) && e.call(i, t[a], a, t);
  }
  function p(t, e, i) {
    if (t && e) {
      if (t.map && t.map === Ng) return t.map(e, i);
      for (var n = [], r = 0, a = t.length; a > r; r++) n.push(e.call(i, t[r], r, t));
      return n;
    }
  }
  function g(t, e, i, n) {
    if (t && e) {
      if (t.reduce && t.reduce === Fg) return t.reduce(e, i, n);
      for (var r = 0, a = t.length; a > r; r++) i = e.call(n, i, t[r], r, t);
      return i;
    }
  }
  function m(t, e, i) {
    if (t && e) {
      if (t.filter && t.filter === Rg) return t.filter(e, i);
      for (var n = [], r = 0, a = t.length; a > r; r++) e.call(i, t[r], r, t) && n.push(t[r]);
      return n;
    }
  }
  function v(t, e, i) {
    if (t && e) for (var n = 0, r = t.length; r > n; n++) if (e.call(i, t[n], n, t)) return t[n];
  }
  function y(t, e) {
    var i = Bg.call(arguments, 2);
    return function () {
      return t.apply(e, i.concat(Bg.call(arguments)));
    };
  }
  function _(t) {
    var e = Bg.call(arguments, 1);
    return function () {
      return t.apply(this, e.concat(Bg.call(arguments)));
    };
  }
  function x(t) {
    return '[object Array]' === Og.call(t);
  }
  function w(t) {
    return 'function' == typeof t;
  }
  function b(t) {
    return '[object String]' === Og.call(t);
  }
  function S(t) {
    var e = typeof t;
    return 'function' === e || (!!t && 'object' === e);
  }
  function M(t) {
    return !!Pg[Og.call(t)];
  }
  function I(t) {
    return !!Lg[Og.call(t)];
  }
  function C(t) {
    return 'object' == typeof t && 'number' == typeof t.nodeType && 'object' == typeof t.ownerDocument;
  }
  function T(t) {
    return t !== t;
  }
  function D() {
    for (var t = 0, e = arguments.length; e > t; t++) if (null != arguments[t]) return arguments[t];
  }
  function A(t, e) {
    return null != t ? t : e;
  }
  function k(t, e, i) {
    return null != t ? t : null != e ? e : i;
  }
  function P() {
    return Function.call.apply(Bg, arguments);
  }
  function L(t) {
    if ('number' == typeof t) return [t, t, t, t];
    var e = t.length;
    return 2 === e ? [t[0], t[1], t[0], t[1]] : 3 === e ? [t[0], t[1], t[2], t[1]] : t;
  }
  function O(t, e) {
    if (!t) throw new Error(e);
  }
  function z(t) {
    return null == t
      ? null
      : 'function' == typeof t.trim
      ? t.trim()
      : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  }
  function E(t) {
    t[Wg] = !0;
  }
  function R(t) {
    return t[Wg];
  }
  function B(t) {
    function e(t, e) {
      i ? n.set(t, e) : n.set(e, t);
    }
    var i = x(t);
    this.data = {};
    var n = this;
    t instanceof B ? t.each(e) : t && f(t, e);
  }
  function N(t) {
    return new B(t);
  }
  function F(t, e) {
    for (var i = new t.constructor(t.length + e.length), n = 0; n < t.length; n++) i[n] = t[n];
    var r = t.length;
    for (n = 0; n < e.length; n++) i[n + r] = e[n];
    return i;
  }
  function G() {}
  function V(t, e) {
    var i = new Xg(2);
    return null == t && (t = 0), null == e && (e = 0), (i[0] = t), (i[1] = e), i;
  }
  function H(t, e) {
    return (t[0] = e[0]), (t[1] = e[1]), t;
  }
  function W(t) {
    var e = new Xg(2);
    return (e[0] = t[0]), (e[1] = t[1]), e;
  }
  function U(t, e, i) {
    return (t[0] = e), (t[1] = i), t;
  }
  function X(t, e, i) {
    return (t[0] = e[0] + i[0]), (t[1] = e[1] + i[1]), t;
  }
  function Y(t, e, i, n) {
    return (t[0] = e[0] + i[0] * n), (t[1] = e[1] + i[1] * n), t;
  }
  function Z(t, e, i) {
    return (t[0] = e[0] - i[0]), (t[1] = e[1] - i[1]), t;
  }
  function j(t) {
    return Math.sqrt(q(t));
  }
  function q(t) {
    return t[0] * t[0] + t[1] * t[1];
  }
  function K(t, e, i) {
    return (t[0] = e[0] * i[0]), (t[1] = e[1] * i[1]), t;
  }
  function $(t, e, i) {
    return (t[0] = e[0] / i[0]), (t[1] = e[1] / i[1]), t;
  }
  function J(t, e) {
    return t[0] * e[0] + t[1] * e[1];
  }
  function Q(t, e, i) {
    return (t[0] = e[0] * i), (t[1] = e[1] * i), t;
  }
  function te(t, e) {
    var i = j(e);
    return 0 === i ? ((t[0] = 0), (t[1] = 0)) : ((t[0] = e[0] / i), (t[1] = e[1] / i)), t;
  }
  function ee(t, e) {
    return Math.sqrt((t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]));
  }
  function ie(t, e) {
    return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]);
  }
  function ne(t, e) {
    return (t[0] = -e[0]), (t[1] = -e[1]), t;
  }
  function re(t, e, i, n) {
    return (t[0] = e[0] + n * (i[0] - e[0])), (t[1] = e[1] + n * (i[1] - e[1])), t;
  }
  function ae(t, e, i) {
    var n = e[0],
      r = e[1];
    return (t[0] = i[0] * n + i[2] * r + i[4]), (t[1] = i[1] * n + i[3] * r + i[5]), t;
  }
  function oe(t, e, i) {
    return (t[0] = Math.min(e[0], i[0])), (t[1] = Math.min(e[1], i[1])), t;
  }
  function se(t, e, i) {
    return (t[0] = Math.max(e[0], i[0])), (t[1] = Math.max(e[1], i[1])), t;
  }
  function le() {
    this.on('mousedown', this._dragStart, this),
      this.on('mousemove', this._drag, this),
      this.on('mouseup', this._dragEnd, this),
      this.on('globalout', this._dragEnd, this);
  }
  function ue(t, e) {
    return { target: t, topTarget: e && e.topTarget };
  }
  function he(t, e) {
    var i = t._$eventProcessor;
    return null != e && i && i.normalizeQuery && (e = i.normalizeQuery(e)), e;
  }
  function ce(t, e, i, n, r, a) {
    var o = t._$handlers;
    if (('function' == typeof i && ((r = n), (n = i), (i = null)), !n || !e)) return t;
    (i = he(t, i)), o[e] || (o[e] = []);
    for (var s = 0; s < o[e].length; s++) if (o[e][s].h === n) return t;
    var l = { h: n, one: a, query: i, ctx: r || t, callAtLast: n.zrEventfulCallAtLast },
      u = o[e].length - 1,
      h = o[e][u];
    return h && h.callAtLast ? o[e].splice(u, 0, l) : o[e].push(l), t;
  }
  function de(t, e, i, n, r, a) {
    var o = n + '-' + r,
      s = t.length;
    if (a.hasOwnProperty(o)) return a[o];
    if (1 === e) {
      var l = Math.round(Math.log(((1 << s) - 1) & ~r) / Qg);
      return t[i][l];
    }
    for (var u = n | (1 << i), h = i + 1; n & (1 << h); ) h++;
    for (var c = 0, d = 0, f = 0; s > d; d++) {
      var p = 1 << d;
      p & r || ((c += (f % 2 ? -1 : 1) * t[i][d] * de(t, e - 1, h, u, r | p, a)), f++);
    }
    return (a[o] = c), c;
  }
  function fe(t, e) {
    var i = [
        [t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]],
        [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]],
        [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]],
        [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]],
        [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]],
        [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]],
        [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]],
        [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]],
      ],
      n = {},
      r = de(i, 8, 0, 0, 0, n);
    if (0 !== r) {
      for (var a = [], o = 0; 8 > o; o++)
        for (var s = 0; 8 > s; s++)
          null == a[s] && (a[s] = 0),
            (a[s] += ((((o + s) % 2 ? -1 : 1) * de(i, 7, 0 === o ? 1 : 0, 1 << o, 1 << s, n)) / r) * e[o]);
      return function (t, e, i) {
        var n = e * a[6] + i * a[7] + 1;
        (t[0] = (e * a[0] + i * a[1] + a[2]) / n), (t[1] = (e * a[3] + i * a[4] + a[5]) / n);
      };
    }
  }
  function pe(t, e, i, n) {
    return (
      (i = i || {}),
      n || !kg.canvasSupported
        ? ge(t, e, i)
        : kg.browser.firefox && null != e.layerX && e.layerX !== e.offsetX
        ? ((i.zrX = e.layerX), (i.zrY = e.layerY))
        : null != e.offsetX
        ? ((i.zrX = e.offsetX), (i.zrY = e.offsetY))
        : ge(t, e, i),
      i
    );
  }
  function ge(t, e, i) {
    if (t.getBoundingClientRect && kg.domSupported) {
      var n = e.clientX,
        r = e.clientY;
      if ('CANVAS' === t.nodeName.toUpperCase()) {
        var a = t.getBoundingClientRect();
        return (i.zrX = n - a.left), void (i.zrY = r - a.top);
      }
      var o = t[im] || (t[im] = {}),
        s = ve(me(t, o), o);
      if (s) return s(nm, n, r), (i.zrX = nm[0]), void (i.zrY = nm[1]);
    }
    i.zrX = i.zrY = 0;
  }
  function me(t, e) {
    var i = e.markers;
    if (i) return i;
    i = e.markers = [];
    for (var n = ['left', 'right'], r = ['top', 'bottom'], a = 0; 4 > a; a++) {
      var o = document.createElement('div'),
        s = o.style,
        l = a % 2,
        u = (a >> 1) % 2;
      (s.cssText = [
        'position:absolute',
        'visibility: hidden',
        'padding: 0',
        'margin: 0',
        'border-width: 0',
        'width:0',
        'height:0',
        n[l] + ':0',
        r[u] + ':0',
        n[1 - l] + ':auto',
        r[1 - u] + ':auto',
        '',
      ].join('!important;')),
        t.appendChild(o),
        i.push(o);
    }
    return i;
  }
  function ve(t, e) {
    for (var i = e.transformer, n = e.srcCoords, r = !0, a = [], o = [], s = 0; 4 > s; s++) {
      var l = t[s].getBoundingClientRect(),
        u = 2 * s,
        h = l.left,
        c = l.top;
      a.push(h, c), (r &= n && h === n[u] && c === n[u + 1]), o.push(t[s].offsetLeft, t[s].offsetTop);
    }
    return r ? i : ((e.srcCoords = a), (e.transformer = fe(a, o)));
  }
  function ye(t, e, i) {
    if (((e = e || window.event), null != e.zrX)) return e;
    var n = e.type,
      r = n && n.indexOf('touch') >= 0;
    if (r) {
      var a = 'touchend' !== n ? e.targetTouches[0] : e.changedTouches[0];
      a && pe(t, a, e, i);
    } else pe(t, e, e, i), (e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3);
    var o = e.button;
    return null == e.which && void 0 !== o && em.test(e.type) && (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), e;
  }
  function _e(t, e, i) {
    tm ? t.addEventListener(e, i) : t.attachEvent('on' + e, i);
  }
  function xe(t, e, i) {
    tm ? t.removeEventListener(e, i) : t.detachEvent('on' + e, i);
  }
  function we(t) {
    return 2 === t.which || 3 === t.which;
  }
  function be(t) {
    var e = t[1][0] - t[0][0],
      i = t[1][1] - t[0][1];
    return Math.sqrt(e * e + i * i);
  }
  function Se(t) {
    return [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2];
  }
  function Me(t, e, i) {
    return {
      type: t,
      event: i,
      target: e.target,
      topTarget: e.topTarget,
      cancelBubble: !1,
      offsetX: i.zrX,
      offsetY: i.zrY,
      gestureEvent: i.gestureEvent,
      pinchX: i.pinchX,
      pinchY: i.pinchY,
      pinchScale: i.pinchScale,
      wheelDelta: i.zrDelta,
      zrByTouch: i.zrByTouch,
      which: i.which,
      stop: Ie,
    };
  }
  function Ie() {
    rm(this.event);
  }
  function Ce() {}
  function Te(t, e, i) {
    if (t[t.rectHover ? 'rectContain' : 'contain'](e, i)) {
      for (var n, r = t; r; ) {
        if (r.clipPath && !r.clipPath.contain(e, i)) return !1;
        r.silent && (n = !0), (r = r.parent);
      }
      return n ? sm : !0;
    }
    return !1;
  }
  function De() {
    var t = new hm(6);
    return Ae(t), t;
  }
  function Ae(t) {
    return (t[0] = 1), (t[1] = 0), (t[2] = 0), (t[3] = 1), (t[4] = 0), (t[5] = 0), t;
  }
  function ke(t, e) {
    return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), (t[3] = e[3]), (t[4] = e[4]), (t[5] = e[5]), t;
  }
  function Pe(t, e, i) {
    var n = e[0] * i[0] + e[2] * i[1],
      r = e[1] * i[0] + e[3] * i[1],
      a = e[0] * i[2] + e[2] * i[3],
      o = e[1] * i[2] + e[3] * i[3],
      s = e[0] * i[4] + e[2] * i[5] + e[4],
      l = e[1] * i[4] + e[3] * i[5] + e[5];
    return (t[0] = n), (t[1] = r), (t[2] = a), (t[3] = o), (t[4] = s), (t[5] = l), t;
  }
  function Le(t, e, i) {
    return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), (t[3] = e[3]), (t[4] = e[4] + i[0]), (t[5] = e[5] + i[1]), t;
  }
  function Oe(t, e, i) {
    var n = e[0],
      r = e[2],
      a = e[4],
      o = e[1],
      s = e[3],
      l = e[5],
      u = Math.sin(i),
      h = Math.cos(i);
    return (
      (t[0] = n * h + o * u),
      (t[1] = -n * u + o * h),
      (t[2] = r * h + s * u),
      (t[3] = -r * u + h * s),
      (t[4] = h * a + u * l),
      (t[5] = h * l - u * a),
      t
    );
  }
  function ze(t, e, i) {
    var n = i[0],
      r = i[1];
    return (
      (t[0] = e[0] * n),
      (t[1] = e[1] * r),
      (t[2] = e[2] * n),
      (t[3] = e[3] * r),
      (t[4] = e[4] * n),
      (t[5] = e[5] * r),
      t
    );
  }
  function Ee(t, e) {
    var i = e[0],
      n = e[2],
      r = e[4],
      a = e[1],
      o = e[3],
      s = e[5],
      l = i * o - a * n;
    return l
      ? ((l = 1 / l),
        (t[0] = o * l),
        (t[1] = -a * l),
        (t[2] = -n * l),
        (t[3] = i * l),
        (t[4] = (n * s - o * r) * l),
        (t[5] = (a * r - i * s) * l),
        t)
      : null;
  }
  function Re(t) {
    var e = De();
    return ke(e, t), e;
  }
  function Be(t) {
    return t > fm || -fm > t;
  }
  function Ne(t) {
    (this._target = t.target),
      (this._life = t.life || 1e3),
      (this._delay = t.delay || 0),
      (this._initialized = !1),
      (this.loop = null == t.loop ? !1 : t.loop),
      (this.gap = t.gap || 0),
      (this.easing = t.easing || 'Linear'),
      (this.onframe = t.onframe),
      (this.ondestroy = t.ondestroy),
      (this.onrestart = t.onrestart),
      (this._pausedTime = 0),
      (this._paused = !1);
  }
  function Fe(t) {
    return (t = Math.round(t)), 0 > t ? 0 : t > 255 ? 255 : t;
  }
  function Ge(t) {
    return (t = Math.round(t)), 0 > t ? 0 : t > 360 ? 360 : t;
  }
  function Ve(t) {
    return 0 > t ? 0 : t > 1 ? 1 : t;
  }
  function He(t) {
    return Fe(t.length && '%' === t.charAt(t.length - 1) ? (parseFloat(t) / 100) * 255 : parseInt(t, 10));
  }
  function We(t) {
    return Ve(t.length && '%' === t.charAt(t.length - 1) ? parseFloat(t) / 100 : parseFloat(t));
  }
  function Ue(t, e, i) {
    return (
      0 > i ? (i += 1) : i > 1 && (i -= 1),
      1 > 6 * i ? t + (e - t) * i * 6 : 1 > 2 * i ? e : 2 > 3 * i ? t + (e - t) * (2 / 3 - i) * 6 : t
    );
  }
  function Xe(t, e, i) {
    return t + (e - t) * i;
  }
  function Ye(t, e, i, n, r) {
    return (t[0] = e), (t[1] = i), (t[2] = n), (t[3] = r), t;
  }
  function Ze(t, e) {
    return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), (t[3] = e[3]), t;
  }
  function je(t, e) {
    Tm && Ze(Tm, e), (Tm = Cm.put(t, Tm || e.slice()));
  }
  function qe(t, e) {
    if (t) {
      e = e || [];
      var i = Cm.get(t);
      if (i) return Ze(e, i);
      t += '';
      var n = t.replace(/ /g, '').toLowerCase();
      if (n in Im) return Ze(e, Im[n]), je(t, e), e;
      if ('#' !== n.charAt(0)) {
        var r = n.indexOf('('),
          a = n.indexOf(')');
        if (-1 !== r && a + 1 === n.length) {
          var o = n.substr(0, r),
            s = n.substr(r + 1, a - (r + 1)).split(','),
            l = 1;
          switch (o) {
            case 'rgba':
              if (4 !== s.length) return void Ye(e, 0, 0, 0, 1);
              l = We(s.pop());
            case 'rgb':
              return 3 !== s.length ? void Ye(e, 0, 0, 0, 1) : (Ye(e, He(s[0]), He(s[1]), He(s[2]), l), je(t, e), e);
            case 'hsla':
              return 4 !== s.length ? void Ye(e, 0, 0, 0, 1) : ((s[3] = We(s[3])), Ke(s, e), je(t, e), e);
            case 'hsl':
              return 3 !== s.length ? void Ye(e, 0, 0, 0, 1) : (Ke(s, e), je(t, e), e);
            default:
              return;
          }
        }
        Ye(e, 0, 0, 0, 1);
      } else {
        if (4 === n.length) {
          var u = parseInt(n.substr(1), 16);
          return u >= 0 && 4095 >= u
            ? (Ye(
                e,
                ((3840 & u) >> 4) | ((3840 & u) >> 8),
                (240 & u) | ((240 & u) >> 4),
                (15 & u) | ((15 & u) << 4),
                1,
              ),
              je(t, e),
              e)
            : void Ye(e, 0, 0, 0, 1);
        }
        if (7 === n.length) {
          var u = parseInt(n.substr(1), 16);
          return u >= 0 && 16777215 >= u
            ? (Ye(e, (16711680 & u) >> 16, (65280 & u) >> 8, 255 & u, 1), je(t, e), e)
            : void Ye(e, 0, 0, 0, 1);
        }
      }
    }
  }
  function Ke(t, e) {
    var i = (((parseFloat(t[0]) % 360) + 360) % 360) / 360,
      n = We(t[1]),
      r = We(t[2]),
      a = 0.5 >= r ? r * (n + 1) : r + n - r * n,
      o = 2 * r - a;
    return (
      (e = e || []),
      Ye(e, Fe(255 * Ue(o, a, i + 1 / 3)), Fe(255 * Ue(o, a, i)), Fe(255 * Ue(o, a, i - 1 / 3)), 1),
      4 === t.length && (e[3] = t[3]),
      e
    );
  }
  function $e(t) {
    if (t) {
      var e,
        i,
        n = t[0] / 255,
        r = t[1] / 255,
        a = t[2] / 255,
        o = Math.min(n, r, a),
        s = Math.max(n, r, a),
        l = s - o,
        u = (s + o) / 2;
      if (0 === l) (e = 0), (i = 0);
      else {
        i = 0.5 > u ? l / (s + o) : l / (2 - s - o);
        var h = ((s - n) / 6 + l / 2) / l,
          c = ((s - r) / 6 + l / 2) / l,
          d = ((s - a) / 6 + l / 2) / l;
        n === s ? (e = d - c) : r === s ? (e = 1 / 3 + h - d) : a === s && (e = 2 / 3 + c - h),
          0 > e && (e += 1),
          e > 1 && (e -= 1);
      }
      var f = [360 * e, i, u];
      return null != t[3] && f.push(t[3]), f;
    }
  }
  function Je(t, e) {
    var i = qe(t);
    if (i) {
      for (var n = 0; 3 > n; n++)
        (i[n] = 0 > e ? (i[n] * (1 - e)) | 0 : ((255 - i[n]) * e + i[n]) | 0),
          i[n] > 255 ? (i[n] = 255) : t[n] < 0 && (i[n] = 0);
      return ri(i, 4 === i.length ? 'rgba' : 'rgb');
    }
  }
  function Qe(t) {
    var e = qe(t);
    return e ? ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2]).toString(16).slice(1) : void 0;
  }
  function ti(t, e, i) {
    if (e && e.length && t >= 0 && 1 >= t) {
      i = i || [];
      var n = t * (e.length - 1),
        r = Math.floor(n),
        a = Math.ceil(n),
        o = e[r],
        s = e[a],
        l = n - r;
      return (
        (i[0] = Fe(Xe(o[0], s[0], l))),
        (i[1] = Fe(Xe(o[1], s[1], l))),
        (i[2] = Fe(Xe(o[2], s[2], l))),
        (i[3] = Ve(Xe(o[3], s[3], l))),
        i
      );
    }
  }
  function ei(t, e, i) {
    if (e && e.length && t >= 0 && 1 >= t) {
      var n = t * (e.length - 1),
        r = Math.floor(n),
        a = Math.ceil(n),
        o = qe(e[r]),
        s = qe(e[a]),
        l = n - r,
        u = ri([Fe(Xe(o[0], s[0], l)), Fe(Xe(o[1], s[1], l)), Fe(Xe(o[2], s[2], l)), Ve(Xe(o[3], s[3], l))], 'rgba');
      return i ? { color: u, leftIndex: r, rightIndex: a, value: n } : u;
    }
  }
  function ii(t, e, i, n) {
    return (
      (t = qe(t)),
      t
        ? ((t = $e(t)),
          null != e && (t[0] = Ge(e)),
          null != i && (t[1] = We(i)),
          null != n && (t[2] = We(n)),
          ri(Ke(t), 'rgba'))
        : void 0
    );
  }
  function ni(t, e) {
    return (t = qe(t)), t && null != e ? ((t[3] = Ve(e)), ri(t, 'rgba')) : void 0;
  }
  function ri(t, e) {
    if (t && t.length) {
      var i = t[0] + ',' + t[1] + ',' + t[2];
      return ('rgba' === e || 'hsva' === e || 'hsla' === e) && (i += ',' + t[3]), e + '(' + i + ')';
    }
  }
  function ai(t, e) {
    return t[e];
  }
  function oi(t, e, i) {
    t[e] = i;
  }
  function si(t, e, i) {
    return (e - t) * i + t;
  }
  function li(t, e, i) {
    return i > 0.5 ? e : t;
  }
  function ui(t, e, i, n, r) {
    var a = t.length;
    if (1 === r) for (var o = 0; a > o; o++) n[o] = si(t[o], e[o], i);
    else
      for (var s = a && t[0].length, o = 0; a > o; o++) for (var l = 0; s > l; l++) n[o][l] = si(t[o][l], e[o][l], i);
  }
  function hi(t, e, i) {
    var n = t.length,
      r = e.length;
    if (n !== r) {
      var a = n > r;
      if (a) t.length = r;
      else for (var o = n; r > o; o++) t.push(1 === i ? e[o] : Pm.call(e[o]));
    }
    for (var s = t[0] && t[0].length, o = 0; o < t.length; o++)
      if (1 === i) isNaN(t[o]) && (t[o] = e[o]);
      else for (var l = 0; s > l; l++) isNaN(t[o][l]) && (t[o][l] = e[o][l]);
  }
  function ci(t, e, i) {
    if (t === e) return !0;
    var n = t.length;
    if (n !== e.length) return !1;
    if (1 === i) {
      for (var r = 0; n > r; r++) if (t[r] !== e[r]) return !1;
    } else for (var a = t[0].length, r = 0; n > r; r++) for (var o = 0; a > o; o++) if (t[r][o] !== e[r][o]) return !1;
    return !0;
  }
  function di(t, e, i, n, r, a, o, s, l) {
    var u = t.length;
    if (1 === l) for (var h = 0; u > h; h++) s[h] = fi(t[h], e[h], i[h], n[h], r, a, o);
    else
      for (var c = t[0].length, h = 0; u > h; h++)
        for (var d = 0; c > d; d++) s[h][d] = fi(t[h][d], e[h][d], i[h][d], n[h][d], r, a, o);
  }
  function fi(t, e, i, n, r, a, o) {
    var s = 0.5 * (i - t),
      l = 0.5 * (n - e);
    return (2 * (e - i) + s + l) * o + (-3 * (e - i) - 2 * s - l) * a + s * r + e;
  }
  function pi(t) {
    if (d(t)) {
      var e = t.length;
      if (d(t[0])) {
        for (var i = [], n = 0; e > n; n++) i.push(Pm.call(t[n]));
        return i;
      }
      return Pm.call(t);
    }
    return t;
  }
  function gi(t) {
    return (t[0] = Math.floor(t[0])), (t[1] = Math.floor(t[1])), (t[2] = Math.floor(t[2])), 'rgba(' + t.join(',') + ')';
  }
  function mi(t) {
    var e = t[t.length - 1].value;
    return d(e && e[0]) ? 2 : 1;
  }
  function vi(t, e, i, n, r, a) {
    var o = t._getter,
      s = t._setter,
      l = 'spline' === e,
      u = n.length;
    if (u) {
      var h,
        c = n[0].value,
        f = d(c),
        p = !1,
        g = !1,
        m = f ? mi(n) : 0;
      n.sort(function (t, e) {
        return t.time - e.time;
      }),
        (h = n[u - 1].time);
      for (var v = [], y = [], _ = n[0].value, x = !0, w = 0; u > w; w++) {
        v.push(n[w].time / h);
        var b = n[w].value;
        if (((f && ci(b, _, m)) || (!f && b === _) || (x = !1), (_ = b), 'string' == typeof b)) {
          var S = qe(b);
          S ? ((b = S), (p = !0)) : (g = !0);
        }
        y.push(b);
      }
      if (a || !x) {
        for (var M = y[u - 1], w = 0; u - 1 > w; w++)
          f ? hi(y[w], M, m) : !isNaN(y[w]) || isNaN(M) || g || p || (y[w] = M);
        f && hi(o(t._target, r), M, m);
        var I,
          C,
          T,
          D,
          A,
          k,
          P = 0,
          L = 0;
        if (p) var O = [0, 0, 0, 0];
        var z = function (t, e) {
            var i;
            if (0 > e) i = 0;
            else if (L > e) {
              for (I = Math.min(P + 1, u - 1), i = I; i >= 0 && !(v[i] <= e); i--);
              i = Math.min(i, u - 2);
            } else {
              for (i = P; u > i && !(v[i] > e); i++);
              i = Math.min(i - 1, u - 2);
            }
            (P = i), (L = e);
            var n = v[i + 1] - v[i];
            if (0 !== n)
              if (((C = (e - v[i]) / n), l))
                if (
                  ((D = y[i]),
                  (T = y[0 === i ? i : i - 1]),
                  (A = y[i > u - 2 ? u - 1 : i + 1]),
                  (k = y[i > u - 3 ? u - 1 : i + 2]),
                  f)
                )
                  di(T, D, A, k, C, C * C, C * C * C, o(t, r), m);
                else {
                  var a;
                  if (p) (a = di(T, D, A, k, C, C * C, C * C * C, O, 1)), (a = gi(O));
                  else {
                    if (g) return li(D, A, C);
                    a = fi(T, D, A, k, C, C * C, C * C * C);
                  }
                  s(t, r, a);
                }
              else if (f) ui(y[i], y[i + 1], C, o(t, r), m);
              else {
                var a;
                if (p) ui(y[i], y[i + 1], C, O, 1), (a = gi(O));
                else {
                  if (g) return li(y[i], y[i + 1], C);
                  a = si(y[i], y[i + 1], C);
                }
                s(t, r, a);
              }
          },
          E = new Ne({ target: t._target, life: h, loop: t._loop, delay: t._delay, onframe: z, ondestroy: i });
        return e && 'spline' !== e && (E.easing = e), E;
      }
    }
  }
  function yi(t, e, i, n, r, a, o, s) {
    function l() {
      h--, h || (a && a());
    }
    b(n)
      ? ((a = r), (r = n), (n = 0))
      : w(r)
      ? ((a = r), (r = 'linear'), (n = 0))
      : w(n)
      ? ((a = n), (n = 0))
      : w(i)
      ? ((a = i), (i = 500))
      : i || (i = 500),
      t.stopAnimation(),
      _i(t, '', t, e, i, n, s);
    var u = t.animators.slice(),
      h = u.length;
    h || (a && a());
    for (var c = 0; c < u.length; c++) u[c].done(l).start(r, o);
  }
  function _i(t, e, i, n, r, a, o) {
    var s = {},
      l = 0;
    for (var u in n)
      n.hasOwnProperty(u) &&
        (null != i[u]
          ? S(n[u]) && !d(n[u])
            ? _i(t, e ? e + '.' + u : u, i[u], n[u], r, a, o)
            : (o ? ((s[u] = i[u]), xi(t, e, u, n[u])) : (s[u] = n[u]), l++)
          : null == n[u] || o || xi(t, e, u, n[u]));
    l > 0 &&
      t
        .animate(e, !1)
        .when(null == r ? 500 : r, s)
        .delay(a || 0);
  }
  function xi(t, e, i, n) {
    if (e) {
      var r = {};
      (r[e] = {}), (r[e][i] = n), t.attr(r);
    } else t.attr(i, n);
  }
  function wi(t, e, i, n) {
    0 > i && ((t += i), (i = -i)),
      0 > n && ((e += n), (n = -n)),
      (this.x = t),
      (this.y = e),
      (this.width = i),
      (this.height = n);
  }
  function bi(t) {
    for (var e = 0; t >= Um; ) (e |= 1 & t), (t >>= 1);
    return t + e;
  }
  function Si(t, e, i, n) {
    var r = e + 1;
    if (r === i) return 1;
    if (n(t[r++], t[e]) < 0) {
      for (; i > r && n(t[r], t[r - 1]) < 0; ) r++;
      Mi(t, e, r);
    } else for (; i > r && n(t[r], t[r - 1]) >= 0; ) r++;
    return r - e;
  }
  function Mi(t, e, i) {
    for (i--; i > e; ) {
      var n = t[e];
      (t[e++] = t[i]), (t[i--] = n);
    }
  }
  function Ii(t, e, i, n, r) {
    for (n === e && n++; i > n; n++) {
      for (var a, o = t[n], s = e, l = n; l > s; ) (a = (s + l) >>> 1), r(o, t[a]) < 0 ? (l = a) : (s = a + 1);
      var u = n - s;
      switch (u) {
        case 3:
          t[s + 3] = t[s + 2];
        case 2:
          t[s + 2] = t[s + 1];
        case 1:
          t[s + 1] = t[s];
          break;
        default:
          for (; u > 0; ) (t[s + u] = t[s + u - 1]), u--;
      }
      t[s] = o;
    }
  }
  function Ci(t, e, i, n, r, a) {
    var o = 0,
      s = 0,
      l = 1;
    if (a(t, e[i + r]) > 0) {
      for (s = n - r; s > l && a(t, e[i + r + l]) > 0; ) (o = l), (l = (l << 1) + 1), 0 >= l && (l = s);
      l > s && (l = s), (o += r), (l += r);
    } else {
      for (s = r + 1; s > l && a(t, e[i + r - l]) <= 0; ) (o = l), (l = (l << 1) + 1), 0 >= l && (l = s);
      l > s && (l = s);
      var u = o;
      (o = r - l), (l = r - u);
    }
    for (o++; l > o; ) {
      var h = o + ((l - o) >>> 1);
      a(t, e[i + h]) > 0 ? (o = h + 1) : (l = h);
    }
    return l;
  }
  function Ti(t, e, i, n, r, a) {
    var o = 0,
      s = 0,
      l = 1;
    if (a(t, e[i + r]) < 0) {
      for (s = r + 1; s > l && a(t, e[i + r - l]) < 0; ) (o = l), (l = (l << 1) + 1), 0 >= l && (l = s);
      l > s && (l = s);
      var u = o;
      (o = r - l), (l = r - u);
    } else {
      for (s = n - r; s > l && a(t, e[i + r + l]) >= 0; ) (o = l), (l = (l << 1) + 1), 0 >= l && (l = s);
      l > s && (l = s), (o += r), (l += r);
    }
    for (o++; l > o; ) {
      var h = o + ((l - o) >>> 1);
      a(t, e[i + h]) < 0 ? (l = h) : (o = h + 1);
    }
    return l;
  }
  function Di(t, e) {
    function i(t, e) {
      (l[c] = t), (u[c] = e), (c += 1);
    }
    function n() {
      for (; c > 1; ) {
        var t = c - 2;
        if ((t >= 1 && u[t - 1] <= u[t] + u[t + 1]) || (t >= 2 && u[t - 2] <= u[t] + u[t - 1]))
          u[t - 1] < u[t + 1] && t--;
        else if (u[t] > u[t + 1]) break;
        a(t);
      }
    }
    function r() {
      for (; c > 1; ) {
        var t = c - 2;
        t > 0 && u[t - 1] < u[t + 1] && t--, a(t);
      }
    }
    function a(i) {
      var n = l[i],
        r = u[i],
        a = l[i + 1],
        h = u[i + 1];
      (u[i] = r + h), i === c - 3 && ((l[i + 1] = l[i + 2]), (u[i + 1] = u[i + 2])), c--;
      var d = Ti(t[a], t, n, r, 0, e);
      (n += d),
        (r -= d),
        0 !== r && ((h = Ci(t[n + r - 1], t, a, h, h - 1, e)), 0 !== h && (h >= r ? o(n, r, a, h) : s(n, r, a, h)));
    }
    function o(i, n, r, a) {
      var o = 0;
      for (o = 0; n > o; o++) d[o] = t[i + o];
      var s = 0,
        l = r,
        u = i;
      if (((t[u++] = t[l++]), 0 !== --a)) {
        if (1 === n) {
          for (o = 0; a > o; o++) t[u + o] = t[l + o];
          return void (t[u + a] = d[s]);
        }
        for (var c, f, p, g = h; ; ) {
          (c = 0), (f = 0), (p = !1);
          do
            if (e(t[l], d[s]) < 0) {
              if (((t[u++] = t[l++]), f++, (c = 0), 0 === --a)) {
                p = !0;
                break;
              }
            } else if (((t[u++] = d[s++]), c++, (f = 0), 1 === --n)) {
              p = !0;
              break;
            }
          while (g > (c | f));
          if (p) break;
          do {
            if (((c = Ti(t[l], d, s, n, 0, e)), 0 !== c)) {
              for (o = 0; c > o; o++) t[u + o] = d[s + o];
              if (((u += c), (s += c), (n -= c), 1 >= n)) {
                p = !0;
                break;
              }
            }
            if (((t[u++] = t[l++]), 0 === --a)) {
              p = !0;
              break;
            }
            if (((f = Ci(d[s], t, l, a, 0, e)), 0 !== f)) {
              for (o = 0; f > o; o++) t[u + o] = t[l + o];
              if (((u += f), (l += f), (a -= f), 0 === a)) {
                p = !0;
                break;
              }
            }
            if (((t[u++] = d[s++]), 1 === --n)) {
              p = !0;
              break;
            }
            g--;
          } while (c >= Xm || f >= Xm);
          if (p) break;
          0 > g && (g = 0), (g += 2);
        }
        if (((h = g), 1 > h && (h = 1), 1 === n)) {
          for (o = 0; a > o; o++) t[u + o] = t[l + o];
          t[u + a] = d[s];
        } else {
          if (0 === n) throw new Error();
          for (o = 0; n > o; o++) t[u + o] = d[s + o];
        }
      } else for (o = 0; n > o; o++) t[u + o] = d[s + o];
    }
    function s(i, n, r, a) {
      var o = 0;
      for (o = 0; a > o; o++) d[o] = t[r + o];
      var s = i + n - 1,
        l = a - 1,
        u = r + a - 1,
        c = 0,
        f = 0;
      if (((t[u--] = t[s--]), 0 !== --n)) {
        if (1 === a) {
          for (u -= n, s -= n, f = u + 1, c = s + 1, o = n - 1; o >= 0; o--) t[f + o] = t[c + o];
          return void (t[u] = d[l]);
        }
        for (var p = h; ; ) {
          var g = 0,
            m = 0,
            v = !1;
          do
            if (e(d[l], t[s]) < 0) {
              if (((t[u--] = t[s--]), g++, (m = 0), 0 === --n)) {
                v = !0;
                break;
              }
            } else if (((t[u--] = d[l--]), m++, (g = 0), 1 === --a)) {
              v = !0;
              break;
            }
          while (p > (g | m));
          if (v) break;
          do {
            if (((g = n - Ti(d[l], t, i, n, n - 1, e)), 0 !== g)) {
              for (u -= g, s -= g, n -= g, f = u + 1, c = s + 1, o = g - 1; o >= 0; o--) t[f + o] = t[c + o];
              if (0 === n) {
                v = !0;
                break;
              }
            }
            if (((t[u--] = d[l--]), 1 === --a)) {
              v = !0;
              break;
            }
            if (((m = a - Ci(t[s], d, 0, a, a - 1, e)), 0 !== m)) {
              for (u -= m, l -= m, a -= m, f = u + 1, c = l + 1, o = 0; m > o; o++) t[f + o] = d[c + o];
              if (1 >= a) {
                v = !0;
                break;
              }
            }
            if (((t[u--] = t[s--]), 0 === --n)) {
              v = !0;
              break;
            }
            p--;
          } while (g >= Xm || m >= Xm);
          if (v) break;
          0 > p && (p = 0), (p += 2);
        }
        if (((h = p), 1 > h && (h = 1), 1 === a)) {
          for (u -= n, s -= n, f = u + 1, c = s + 1, o = n - 1; o >= 0; o--) t[f + o] = t[c + o];
          t[u] = d[l];
        } else {
          if (0 === a) throw new Error();
          for (c = u - (a - 1), o = 0; a > o; o++) t[c + o] = d[o];
        }
      } else for (c = u - (a - 1), o = 0; a > o; o++) t[c + o] = d[o];
    }
    var l,
      u,
      h = Xm,
      c = 0,
      d = [];
    (l = []), (u = []), (this.mergeRuns = n), (this.forceMergeRuns = r), (this.pushRun = i);
  }
  function Ai(t, e, i, n) {
    i || (i = 0), n || (n = t.length);
    var r = n - i;
    if (!(2 > r)) {
      var a = 0;
      if (Um > r) return (a = Si(t, i, n, e)), void Ii(t, i, n, i + a, e);
      var o = new Di(t, e),
        s = bi(r);
      do {
        if (((a = Si(t, i, n, e)), s > a)) {
          var l = r;
          l > s && (l = s), Ii(t, i, i + l, i + a, e), (a = l);
        }
        o.pushRun(i, a), o.mergeRuns(), (r -= a), (i += a);
      } while (0 !== r);
      o.forceMergeRuns();
    }
  }
  function ki(t, e) {
    return t.zlevel === e.zlevel ? (t.z === e.z ? t.z2 - e.z2 : t.z - e.z) : t.zlevel - e.zlevel;
  }
  function Pi(t, e, i) {
    var n = null == e.x ? 0 : e.x,
      r = null == e.x2 ? 1 : e.x2,
      a = null == e.y ? 0 : e.y,
      o = null == e.y2 ? 0 : e.y2;
    e.global || ((n = n * i.width + i.x), (r = r * i.width + i.x), (a = a * i.height + i.y), (o = o * i.height + i.y)),
      (n = isNaN(n) ? 0 : n),
      (r = isNaN(r) ? 1 : r),
      (a = isNaN(a) ? 0 : a),
      (o = isNaN(o) ? 0 : o);
    var s = t.createLinearGradient(n, a, r, o);
    return s;
  }
  function Li(t, e, i) {
    var n = i.width,
      r = i.height,
      a = Math.min(n, r),
      o = null == e.x ? 0.5 : e.x,
      s = null == e.y ? 0.5 : e.y,
      l = null == e.r ? 0.5 : e.r;
    e.global || ((o = o * n + i.x), (s = s * r + i.y), (l *= a));
    var u = t.createRadialGradient(o, s, 0, o, s, l);
    return u;
  }
  function Oi() {
    return !1;
  }
  function zi(t, e, i) {
    var n = Vg(),
      r = e.getWidth(),
      a = e.getHeight(),
      o = n.style;
    return (
      o &&
        ((o.position = 'absolute'),
        (o.left = 0),
        (o.top = 0),
        (o.width = r + 'px'),
        (o.height = a + 'px'),
        n.setAttribute('data-zr-dom-id', t)),
      (n.width = r * i),
      (n.height = a * i),
      n
    );
  }
  function Ei(t) {
    if ('string' == typeof t) {
      var e = av.get(t);
      return e && e.image;
    }
    return t;
  }
  function Ri(t, e, i, n, r) {
    if (t) {
      if ('string' == typeof t) {
        if ((e && e.__zrImageSrc === t) || !i) return e;
        var a = av.get(t),
          o = { hostEl: i, cb: n, cbPayload: r };
        return (
          a
            ? ((e = a.image), !Ni(e) && a.pending.push(o))
            : ((e = new Image()),
              (e.onload = e.onerror = Bi),
              av.put(t, (e.__cachedImgObj = { image: e, pending: [o] })),
              (e.src = e.__zrImageSrc = t)),
          e
        );
      }
      return t;
    }
    return e;
  }
  function Bi() {
    var t = this.__cachedImgObj;
    this.onload = this.onerror = this.__cachedImgObj = null;
    for (var e = 0; e < t.pending.length; e++) {
      var i = t.pending[e],
        n = i.cb;
      n && n(this, i.cbPayload), i.hostEl.dirty();
    }
    t.pending.length = 0;
  }
  function Ni(t) {
    return t && t.width && t.height;
  }
  function Fi(t, e) {
    e = e || hv;
    var i = t + ':' + e;
    if (ov[i]) return ov[i];
    for (var n = (t + '').split('\n'), r = 0, a = 0, o = n.length; o > a; a++) r = Math.max($i(n[a], e).width, r);
    return sv > lv && ((sv = 0), (ov = {})), sv++, (ov[i] = r), r;
  }
  function Gi(t, e, i, n, r, a, o, s) {
    return o ? Hi(t, e, i, n, r, a, o, s) : Vi(t, e, i, n, r, a, s);
  }
  function Vi(t, e, i, n, r, a, o) {
    var s = Ji(t, e, r, a, o),
      l = Fi(t, e);
    r && (l += r[1] + r[3]);
    var u = s.outerHeight,
      h = Wi(0, l, i),
      c = Ui(0, u, n),
      d = new wi(h, c, l, u);
    return (d.lineHeight = s.lineHeight), d;
  }
  function Hi(t, e, i, n, r, a, o, s) {
    var l = Qi(t, { rich: o, truncate: s, font: e, textAlign: i, textPadding: r, textLineHeight: a }),
      u = l.outerWidth,
      h = l.outerHeight,
      c = Wi(0, u, i),
      d = Ui(0, h, n);
    return new wi(c, d, u, h);
  }
  function Wi(t, e, i) {
    return 'right' === i ? (t -= e) : 'center' === i && (t -= e / 2), t;
  }
  function Ui(t, e, i) {
    return 'middle' === i ? (t -= e / 2) : 'bottom' === i && (t -= e), t;
  }
  function Xi(t, e, i) {
    var n = e.textPosition,
      r = e.textDistance,
      a = i.x,
      o = i.y,
      s = i.height,
      l = i.width,
      u = s / 2,
      h = 'left',
      c = 'top';
    switch (n) {
      case 'left':
        (a -= r), (o += u), (h = 'right'), (c = 'middle');
        break;
      case 'right':
        (a += r + l), (o += u), (c = 'middle');
        break;
      case 'top':
        (a += l / 2), (o -= r), (h = 'center'), (c = 'bottom');
        break;
      case 'bottom':
        (a += l / 2), (o += s + r), (h = 'center');
        break;
      case 'inside':
        (a += l / 2), (o += u), (h = 'center'), (c = 'middle');
        break;
      case 'insideLeft':
        (a += r), (o += u), (c = 'middle');
        break;
      case 'insideRight':
        (a += l - r), (o += u), (h = 'right'), (c = 'middle');
        break;
      case 'insideTop':
        (a += l / 2), (o += r), (h = 'center');
        break;
      case 'insideBottom':
        (a += l / 2), (o += s - r), (h = 'center'), (c = 'bottom');
        break;
      case 'insideTopLeft':
        (a += r), (o += r);
        break;
      case 'insideTopRight':
        (a += l - r), (o += r), (h = 'right');
        break;
      case 'insideBottomLeft':
        (a += r), (o += s - r), (c = 'bottom');
        break;
      case 'insideBottomRight':
        (a += l - r), (o += s - r), (h = 'right'), (c = 'bottom');
    }
    return (t = t || {}), (t.x = a), (t.y = o), (t.textAlign = h), (t.textVerticalAlign = c), t;
  }
  function Yi(t, e, i, n, r) {
    if (!e) return '';
    var a = (t + '').split('\n');
    r = Zi(e, i, n, r);
    for (var o = 0, s = a.length; s > o; o++) a[o] = ji(a[o], r);
    return a.join('\n');
  }
  function Zi(t, e, i, n) {
    (n = o({}, n)), (n.font = e);
    var i = A(i, '...');
    n.maxIterations = A(n.maxIterations, 2);
    var r = (n.minChar = A(n.minChar, 0));
    n.cnCharWidth = Fi('国', e);
    var a = (n.ascCharWidth = Fi('a', e));
    n.placeholder = A(n.placeholder, '');
    for (var s = (t = Math.max(0, t - 1)), l = 0; r > l && s >= a; l++) s -= a;
    var u = Fi(i, e);
    return (
      u > s && ((i = ''), (u = 0)),
      (s = t - u),
      (n.ellipsis = i),
      (n.ellipsisWidth = u),
      (n.contentWidth = s),
      (n.containerWidth = t),
      n
    );
  }
  function ji(t, e) {
    var i = e.containerWidth,
      n = e.font,
      r = e.contentWidth;
    if (!i) return '';
    var a = Fi(t, n);
    if (i >= a) return t;
    for (var o = 0; ; o++) {
      if (r >= a || o >= e.maxIterations) {
        t += e.ellipsis;
        break;
      }
      var s = 0 === o ? qi(t, r, e.ascCharWidth, e.cnCharWidth) : a > 0 ? Math.floor((t.length * r) / a) : 0;
      (t = t.substr(0, s)), (a = Fi(t, n));
    }
    return '' === t && (t = e.placeholder), t;
  }
  function qi(t, e, i, n) {
    for (var r = 0, a = 0, o = t.length; o > a && e > r; a++) {
      var s = t.charCodeAt(a);
      r += s >= 0 && 127 >= s ? i : n;
    }
    return a;
  }
  function Ki(t) {
    return Fi('国', t);
  }
  function $i(t, e) {
    return cv.measureText(t, e);
  }
  function Ji(t, e, i, n, r) {
    null != t && (t += '');
    var a = A(n, Ki(e)),
      o = t ? t.split('\n') : [],
      s = o.length * a,
      l = s;
    if ((i && (l += i[0] + i[2]), t && r)) {
      var u = r.outerHeight,
        h = r.outerWidth;
      if (null != u && l > u) (t = ''), (o = []);
      else if (null != h)
        for (
          var c = Zi(h - (i ? i[1] + i[3] : 0), e, r.ellipsis, { minChar: r.minChar, placeholder: r.placeholder }),
            d = 0,
            f = o.length;
          f > d;
          d++
        )
          o[d] = ji(o[d], c);
    }
    return { lines: o, height: s, outerHeight: l, lineHeight: a };
  }
  function Qi(t, e) {
    var i = { lines: [], width: 0, height: 0 };
    if ((null != t && (t += ''), !t)) return i;
    for (var n, r = (uv.lastIndex = 0); null != (n = uv.exec(t)); ) {
      var a = n.index;
      a > r && tn(i, t.substring(r, a)), tn(i, n[2], n[1]), (r = uv.lastIndex);
    }
    r < t.length && tn(i, t.substring(r, t.length));
    var o = i.lines,
      s = 0,
      l = 0,
      u = [],
      h = e.textPadding,
      c = e.truncate,
      d = c && c.outerWidth,
      f = c && c.outerHeight;
    h && (null != d && (d -= h[1] + h[3]), null != f && (f -= h[0] + h[2]));
    for (var p = 0; p < o.length; p++) {
      for (var g = o[p], m = 0, v = 0, y = 0; y < g.tokens.length; y++) {
        var _ = g.tokens[y],
          x = (_.styleName && e.rich[_.styleName]) || {},
          w = (_.textPadding = x.textPadding),
          b = (_.font = x.font || e.font),
          S = (_.textHeight = A(x.textHeight, Ki(b)));
        if (
          (w && (S += w[0] + w[2]),
          (_.height = S),
          (_.lineHeight = k(x.textLineHeight, e.textLineHeight, S)),
          (_.textAlign = (x && x.textAlign) || e.textAlign),
          (_.textVerticalAlign = (x && x.textVerticalAlign) || 'middle'),
          null != f && s + _.lineHeight > f)
        )
          return { lines: [], width: 0, height: 0 };
        _.textWidth = Fi(_.text, b);
        var M = x.textWidth,
          I = null == M || 'auto' === M;
        if ('string' == typeof M && '%' === M.charAt(M.length - 1)) (_.percentWidth = M), u.push(_), (M = 0);
        else {
          if (I) {
            M = _.textWidth;
            var C = x.textBackgroundColor,
              T = C && C.image;
            T && ((T = Ei(T)), Ni(T) && (M = Math.max(M, (T.width * S) / T.height)));
          }
          var D = w ? w[1] + w[3] : 0;
          M += D;
          var P = null != d ? d - v : null;
          null != P &&
            M > P &&
            (!I || D > P
              ? ((_.text = ''), (_.textWidth = M = 0))
              : ((_.text = Yi(_.text, P - D, b, c.ellipsis, { minChar: c.minChar })),
                (_.textWidth = Fi(_.text, b)),
                (M = _.textWidth + D)));
        }
        (v += _.width = M), x && (m = Math.max(m, _.lineHeight));
      }
      (g.width = v), (g.lineHeight = m), (s += m), (l = Math.max(l, v));
    }
    (i.outerWidth = i.width = A(e.textWidth, l)),
      (i.outerHeight = i.height = A(e.textHeight, s)),
      h && ((i.outerWidth += h[1] + h[3]), (i.outerHeight += h[0] + h[2]));
    for (var p = 0; p < u.length; p++) {
      var _ = u[p],
        L = _.percentWidth;
      _.width = (parseInt(L, 10) / 100) * l;
    }
    return i;
  }
  function tn(t, e, i) {
    for (var n = '' === e, r = e.split('\n'), a = t.lines, o = 0; o < r.length; o++) {
      var s = r[o],
        l = { styleName: i, text: s, isLineHolder: !s && !n };
      if (o) a.push({ tokens: [l] });
      else {
        var u = (a[a.length - 1] || (a[0] = { tokens: [] })).tokens,
          h = u.length;
        1 === h && u[0].isLineHolder ? (u[0] = l) : (s || !h || n) && u.push(l);
      }
    }
  }
  function en(t) {
    var e =
      (t.fontSize || t.fontFamily) &&
      [t.fontStyle, t.fontWeight, (t.fontSize || 12) + 'px', t.fontFamily || 'sans-serif'].join(' ');
    return (e && z(e)) || t.textFont || t.font;
  }
  function nn(t, e) {
    var i,
      n,
      r,
      a,
      o = e.x,
      s = e.y,
      l = e.width,
      u = e.height,
      h = e.r;
    0 > l && ((o += l), (l = -l)),
      0 > u && ((s += u), (u = -u)),
      'number' == typeof h
        ? (i = n = r = a = h)
        : h instanceof Array
        ? 1 === h.length
          ? (i = n = r = a = h[0])
          : 2 === h.length
          ? ((i = r = h[0]), (n = a = h[1]))
          : 3 === h.length
          ? ((i = h[0]), (n = a = h[1]), (r = h[2]))
          : ((i = h[0]), (n = h[1]), (r = h[2]), (a = h[3]))
        : (i = n = r = a = 0);
    var c;
    i + n > l && ((c = i + n), (i *= l / c), (n *= l / c)),
      r + a > l && ((c = r + a), (r *= l / c), (a *= l / c)),
      n + r > u && ((c = n + r), (n *= u / c), (r *= u / c)),
      i + a > u && ((c = i + a), (i *= u / c), (a *= u / c)),
      t.moveTo(o + i, s),
      t.lineTo(o + l - n, s),
      0 !== n && t.arc(o + l - n, s + n, n, -Math.PI / 2, 0),
      t.lineTo(o + l, s + u - r),
      0 !== r && t.arc(o + l - r, s + u - r, r, 0, Math.PI / 2),
      t.lineTo(o + a, s + u),
      0 !== a && t.arc(o + a, s + u - a, a, Math.PI / 2, Math.PI),
      t.lineTo(o, s + i),
      0 !== i && t.arc(o + i, s + i, i, Math.PI, 1.5 * Math.PI);
  }
  function rn(t) {
    return an(t), f(t.rich, an), t;
  }
  function an(t) {
    if (t) {
      t.font = en(t);
      var e = t.textAlign;
      'middle' === e && (e = 'center'), (t.textAlign = null == e || fv[e] ? e : 'left');
      var i = t.textVerticalAlign || t.textBaseline;
      'center' === i && (i = 'middle'), (t.textVerticalAlign = null == i || pv[i] ? i : 'top');
      var n = t.textPadding;
      n && (t.textPadding = L(t.textPadding));
    }
  }
  function on(t, e, i, n, r, a) {
    n.rich ? ln(t, e, i, n, r, a) : sn(t, e, i, n, r, a);
  }
  function sn(t, e, i, n, r, a) {
    var o,
      s = dn(n),
      l = !1,
      u = e.__attrCachedBy === qm.PLAIN_TEXT;
    a !== Km
      ? (a && ((o = a.style), (l = !s && u && o)), (e.__attrCachedBy = s ? qm.NONE : qm.PLAIN_TEXT))
      : u && (e.__attrCachedBy = qm.NONE);
    var h = n.font || dv;
    (l && h === (o.font || dv)) || (e.font = h);
    var c = t.__computedFont;
    t.__styleFont !== h && ((t.__styleFont = h), (c = t.__computedFont = e.font));
    var d = n.textPadding,
      f = n.textLineHeight,
      p = t.__textCotentBlock;
    (!p || t.__dirtyText) && (p = t.__textCotentBlock = Ji(i, c, d, f, n.truncate));
    var g = p.outerHeight,
      m = p.lines,
      v = p.lineHeight,
      y = gn(vv, t, n, r),
      _ = y.baseX,
      x = y.baseY,
      w = y.textAlign || 'left',
      b = y.textVerticalAlign;
    hn(e, n, r, _, x);
    var S = Ui(x, g, b),
      M = _,
      I = S;
    if (s || d) {
      var C = Fi(i, c),
        T = C;
      d && (T += d[1] + d[3]);
      var D = Wi(_, T, w);
      s && fn(t, e, n, D, S, T, g), d && ((M = xn(_, w, d)), (I += d[0]));
    }
    (e.textAlign = w), (e.textBaseline = 'middle'), (e.globalAlpha = n.opacity || 1);
    for (var A = 0; A < gv.length; A++) {
      var k = gv[A],
        P = k[0],
        L = k[1],
        O = n[P];
      (l && O === o[P]) || (e[L] = jm(e, L, O || k[2]));
    }
    I += v / 2;
    var z = n.textStrokeWidth,
      E = l ? o.textStrokeWidth : null,
      R = !l || z !== E,
      B = !l || R || n.textStroke !== o.textStroke,
      N = vn(n.textStroke, z),
      F = yn(n.textFill);
    if (
      (N && (R && (e.lineWidth = z), B && (e.strokeStyle = N)),
      F && ((l && n.textFill === o.textFill) || (e.fillStyle = F)),
      1 === m.length)
    )
      N && e.strokeText(m[0], M, I), F && e.fillText(m[0], M, I);
    else for (var A = 0; A < m.length; A++) N && e.strokeText(m[A], M, I), F && e.fillText(m[A], M, I), (I += v);
  }
  function ln(t, e, i, n, r, a) {
    a !== Km && (e.__attrCachedBy = qm.NONE);
    var o = t.__textCotentBlock;
    (!o || t.__dirtyText) && (o = t.__textCotentBlock = Qi(i, n)), un(t, e, o, n, r);
  }
  function un(t, e, i, n, r) {
    var a = i.width,
      o = i.outerWidth,
      s = i.outerHeight,
      l = n.textPadding,
      u = gn(vv, t, n, r),
      h = u.baseX,
      c = u.baseY,
      d = u.textAlign,
      f = u.textVerticalAlign;
    hn(e, n, r, h, c);
    var p = Wi(h, o, d),
      g = Ui(c, s, f),
      m = p,
      v = g;
    l && ((m += l[3]), (v += l[0]));
    var y = m + a;
    dn(n) && fn(t, e, n, p, g, o, s);
    for (var _ = 0; _ < i.lines.length; _++) {
      for (
        var x,
          w = i.lines[_],
          b = w.tokens,
          S = b.length,
          M = w.lineHeight,
          I = w.width,
          C = 0,
          T = m,
          D = y,
          A = S - 1;
        S > C && ((x = b[C]), !x.textAlign || 'left' === x.textAlign);

      )
        cn(t, e, x, n, M, v, T, 'left'), (I -= x.width), (T += x.width), C++;
      for (; A >= 0 && ((x = b[A]), 'right' === x.textAlign); )
        cn(t, e, x, n, M, v, D, 'right'), (I -= x.width), (D -= x.width), A--;
      for (T += (a - (T - m) - (y - D) - I) / 2; A >= C; )
        (x = b[C]), cn(t, e, x, n, M, v, T + x.width / 2, 'center'), (T += x.width), C++;
      v += M;
    }
  }
  function hn(t, e, i, n, r) {
    if (i && e.textRotation) {
      var a = e.textOrigin;
      'center' === a ? ((n = i.width / 2 + i.x), (r = i.height / 2 + i.y)) : a && ((n = a[0] + i.x), (r = a[1] + i.y)),
        t.translate(n, r),
        t.rotate(-e.textRotation),
        t.translate(-n, -r);
    }
  }
  function cn(t, e, i, n, r, a, o, s) {
    var l = n.rich[i.styleName] || {};
    l.text = i.text;
    var u = i.textVerticalAlign,
      h = a + r / 2;
    'top' === u ? (h = a + i.height / 2) : 'bottom' === u && (h = a + r - i.height / 2),
      !i.isLineHolder &&
        dn(l) &&
        fn(
          t,
          e,
          l,
          'right' === s ? o - i.width : 'center' === s ? o - i.width / 2 : o,
          h - i.height / 2,
          i.width,
          i.height,
        );
    var c = i.textPadding;
    c && ((o = xn(o, s, c)), (h -= i.height / 2 - c[2] - i.textHeight / 2)),
      mn(e, 'shadowBlur', k(l.textShadowBlur, n.textShadowBlur, 0)),
      mn(e, 'shadowColor', l.textShadowColor || n.textShadowColor || 'transparent'),
      mn(e, 'shadowOffsetX', k(l.textShadowOffsetX, n.textShadowOffsetX, 0)),
      mn(e, 'shadowOffsetY', k(l.textShadowOffsetY, n.textShadowOffsetY, 0)),
      mn(e, 'textAlign', s),
      mn(e, 'textBaseline', 'middle'),
      mn(e, 'font', i.font || dv);
    var d = vn(l.textStroke || n.textStroke, p),
      f = yn(l.textFill || n.textFill),
      p = A(l.textStrokeWidth, n.textStrokeWidth);
    d && (mn(e, 'lineWidth', p), mn(e, 'strokeStyle', d), e.strokeText(i.text, o, h)),
      f && (mn(e, 'fillStyle', f), e.fillText(i.text, o, h));
  }
  function dn(t) {
    return !!(t.textBackgroundColor || (t.textBorderWidth && t.textBorderColor));
  }
  function fn(t, e, i, n, r, a, o) {
    var s = i.textBackgroundColor,
      l = i.textBorderWidth,
      u = i.textBorderColor,
      h = b(s);
    if (
      (mn(e, 'shadowBlur', i.textBoxShadowBlur || 0),
      mn(e, 'shadowColor', i.textBoxShadowColor || 'transparent'),
      mn(e, 'shadowOffsetX', i.textBoxShadowOffsetX || 0),
      mn(e, 'shadowOffsetY', i.textBoxShadowOffsetY || 0),
      h || (l && u))
    ) {
      e.beginPath();
      var c = i.textBorderRadius;
      c ? nn(e, { x: n, y: r, width: a, height: o, r: c }) : e.rect(n, r, a, o), e.closePath();
    }
    if (h)
      if ((mn(e, 'fillStyle', s), null != i.fillOpacity)) {
        var d = e.globalAlpha;
        (e.globalAlpha = i.fillOpacity * i.opacity), e.fill(), (e.globalAlpha = d);
      } else e.fill();
    else if (S(s)) {
      var f = s.image;
      (f = Ri(f, null, t, pn, s)), f && Ni(f) && e.drawImage(f, n, r, a, o);
    }
    if (l && u)
      if ((mn(e, 'lineWidth', l), mn(e, 'strokeStyle', u), null != i.strokeOpacity)) {
        var d = e.globalAlpha;
        (e.globalAlpha = i.strokeOpacity * i.opacity), e.stroke(), (e.globalAlpha = d);
      } else e.stroke();
  }
  function pn(t, e) {
    e.image = t;
  }
  function gn(t, e, i, n) {
    var r = i.x || 0,
      a = i.y || 0,
      o = i.textAlign,
      s = i.textVerticalAlign;
    if (n) {
      var l = i.textPosition;
      if (l instanceof Array) (r = n.x + _n(l[0], n.width)), (a = n.y + _n(l[1], n.height));
      else {
        var u = e && e.calculateTextPosition ? e.calculateTextPosition(mv, i, n) : Xi(mv, i, n);
        (r = u.x), (a = u.y), (o = o || u.textAlign), (s = s || u.textVerticalAlign);
      }
      var h = i.textOffset;
      h && ((r += h[0]), (a += h[1]));
    }
    return (t = t || {}), (t.baseX = r), (t.baseY = a), (t.textAlign = o), (t.textVerticalAlign = s), t;
  }
  function mn(t, e, i) {
    return (t[e] = jm(t, e, i)), t[e];
  }
  function vn(t, e) {
    return null == t || 0 >= e || 'transparent' === t || 'none' === t ? null : t.image || t.colorStops ? '#000' : t;
  }
  function yn(t) {
    return null == t || 'none' === t ? null : t.image || t.colorStops ? '#000' : t;
  }
  function _n(t, e) {
    return 'string' == typeof t ? (t.lastIndexOf('%') >= 0 ? (parseFloat(t) / 100) * e : parseFloat(t)) : t;
  }
  function xn(t, e, i) {
    return 'right' === e ? t - i[1] : 'center' === e ? t + i[3] / 2 - i[1] / 2 : t + i[3];
  }
  function wn(t, e) {
    return null != t && (t || e.textBackgroundColor || (e.textBorderWidth && e.textBorderColor) || e.textPadding);
  }
  function bn(t) {
    (t = t || {}), Fm.call(this, t);
    for (var e in t) t.hasOwnProperty(e) && 'style' !== e && (this[e] = t[e]);
    (this.style = new Jm(t.style, this)), (this._rect = null), (this.__clipPaths = null);
  }
  function Sn(t) {
    bn.call(this, t);
  }
  function Mn(t) {
    return parseInt(t, 10);
  }
  function In(t) {
    return t ? (t.__builtin__ ? !0 : 'function' != typeof t.resize || 'function' != typeof t.refresh ? !1 : !0) : !1;
  }
  function Cn(t, e, i) {
    return (
      Mv.copy(t.getBoundingRect()),
      t.transform && Mv.applyTransform(t.transform),
      (Iv.width = e),
      (Iv.height = i),
      !Mv.intersect(Iv)
    );
  }
  function Tn(t, e) {
    if (t === e) return !1;
    if (!t || !e || t.length !== e.length) return !0;
    for (var i = 0; i < t.length; i++) if (t[i] !== e[i]) return !0;
    return !1;
  }
  function Dn(t, e) {
    for (var i = 0; i < t.length; i++) {
      var n = t[i];
      n.setTransform(e), e.beginPath(), n.buildPath(e, n.shape), e.clip(), n.restoreTransform(e);
    }
  }
  function An(t, e) {
    var i = document.createElement('div');
    return (
      (i.style.cssText =
        [
          'position:relative',
          'overflow:hidden',
          'width:' + t + 'px',
          'height:' + e + 'px',
          'padding:0',
          'margin:0',
          'border-width:0',
        ].join(';') + ';'),
      i
    );
  }
  function kn(t) {
    return 'mousewheel' === t && kg.browser.firefox ? 'DOMMouseScroll' : t;
  }
  function Pn(t) {
    (t._touching = !0),
      clearTimeout(t._touchTimer),
      (t._touchTimer = setTimeout(function () {
        t._touching = !1;
      }, 700));
  }
  function Ln(t) {
    var e = t.pointerType;
    return 'pen' === e || 'touch' === e;
  }
  function On(t) {
    function e(t, e) {
      return function () {
        return e._touching ? void 0 : t.apply(e, arguments);
      };
    }
    f(kv, function (e) {
      t._handlers[e] = y(Ov[e], t);
    }),
      f(Lv, function (e) {
        t._handlers[e] = y(Ov[e], t);
      }),
      f(Av, function (i) {
        t._handlers[i] = e(Ov[i], t);
      });
  }
  function zn(t) {
    function e(e, i) {
      f(
        e,
        function (e) {
          _e(t, kn(e), i._handlers[e]);
        },
        i,
      );
    }
    Jg.call(this),
      (this.dom = t),
      (this._touching = !1),
      this._touchTimer,
      (this._handlers = {}),
      On(this),
      kg.pointerEventsSupported ? e(Lv, this) : (kg.touchEventsSupported && e(kv, this), e(Av, this));
  }
  function En(t, e) {
    var i = new Fv(Dg(), t, e);
    return (Bv[i.id] = i), i;
  }
  function Rn(t) {
    if (t) t.dispose();
    else {
      for (var e in Bv) Bv.hasOwnProperty(e) && Bv[e].dispose();
      Bv = {};
    }
    return this;
  }
  function Bn(t) {
    return Bv[t];
  }
  function Nn(t, e) {
    Rv[t] = e;
  }
  function Fn(t) {
    delete Bv[t];
  }
  function Gn(t) {
    return t instanceof Array ? t : null == t ? [] : [t];
  }
  function Vn(t, e, i) {
    if (t) {
      (t[e] = t[e] || {}), (t.emphasis = t.emphasis || {}), (t.emphasis[e] = t.emphasis[e] || {});
      for (var n = 0, r = i.length; r > n; n++) {
        var a = i[n];
        !t.emphasis[e].hasOwnProperty(a) && t[e].hasOwnProperty(a) && (t.emphasis[e][a] = t[e][a]);
      }
    }
  }
  function Hn(t) {
    return !Hv(t) || Wv(t) || t instanceof Date ? t : t.value;
  }
  function Wn(t) {
    return Hv(t) && !(t instanceof Array);
  }
  function Un(t, e) {
    e = (e || []).slice();
    var i = p(t || [], function (t) {
      return { exist: t };
    });
    return (
      Vv(e, function (t, n) {
        if (Hv(t)) {
          for (var r = 0; r < i.length; r++)
            if (!i[r].option && null != t.id && i[r].exist.id === t.id + '')
              return (i[r].option = t), void (e[n] = null);
          for (var r = 0; r < i.length; r++) {
            var a = i[r].exist;
            if (
              !(
                i[r].option ||
                (null != a.id && null != t.id) ||
                null == t.name ||
                Zn(t) ||
                Zn(a) ||
                a.name !== t.name + ''
              )
            )
              return (i[r].option = t), void (e[n] = null);
          }
        }
      }),
      Vv(e, function (t) {
        if (Hv(t)) {
          for (var e = 0; e < i.length; e++) {
            var n = i[e].exist;
            if (!i[e].option && !Zn(n) && null == t.id) {
              i[e].option = t;
              break;
            }
          }
          e >= i.length && i.push({ option: t });
        }
      }),
      i
    );
  }
  function Xn(t) {
    var e = N();
    Vv(t, function (t) {
      var i = t.exist;
      i && e.set(i.id, t);
    }),
      Vv(t, function (t) {
        var i = t.option;
        O(!i || null == i.id || !e.get(i.id) || e.get(i.id) === t, 'id duplicates: ' + (i && i.id)),
          i && null != i.id && e.set(i.id, t),
          !t.keyInfo && (t.keyInfo = {});
      }),
      Vv(t, function (t, i) {
        var n = t.exist,
          r = t.option,
          a = t.keyInfo;
        if (Hv(r)) {
          if (((a.name = null != r.name ? r.name + '' : n ? n.name : Uv + i), n)) a.id = n.id;
          else if (null != r.id) a.id = r.id + '';
          else {
            var o = 0;
            do a.id = '\x00' + a.name + '\x00' + o++;
            while (e.get(a.id));
          }
          e.set(a.id, t);
        }
      });
  }
  function Yn(t) {
    var e = t.name;
    return !(!e || !e.indexOf(Uv));
  }
  function Zn(t) {
    return Hv(t) && t.id && 0 === (t.id + '').indexOf('\x00_ec_\x00');
  }
  function jn(t, e) {
    return null != e.dataIndexInside
      ? e.dataIndexInside
      : null != e.dataIndex
      ? x(e.dataIndex)
        ? p(e.dataIndex, function (e) {
            return t.indexOfRawIndex(e);
          })
        : t.indexOfRawIndex(e.dataIndex)
      : null != e.name
      ? x(e.name)
        ? p(e.name, function (e) {
            return t.indexOfName(e);
          })
        : t.indexOfName(e.name)
      : void 0;
  }
  function qn() {
    var t = '__\x00ec_inner_' + Yv++ + '_' + Math.random().toFixed(5);
    return function (e) {
      return e[t] || (e[t] = {});
    };
  }
  function Kn(t, e, i) {
    if (b(e)) {
      var n = {};
      (n[e + 'Index'] = 0), (e = n);
    }
    var r = i && i.defaultMainType;
    !r || $n(e, r + 'Index') || $n(e, r + 'Id') || $n(e, r + 'Name') || (e[r + 'Index'] = 0);
    var a = {};
    return (
      Vv(e, function (n, r) {
        var n = e[r];
        if ('dataIndex' === r || 'dataIndexInside' === r) return void (a[r] = n);
        var o = r.match(/^(\w+)(Index|Id|Name)$/) || [],
          s = o[1],
          l = (o[2] || '').toLowerCase();
        if (
          !(
            !s ||
            !l ||
            null == n ||
            ('index' === l && 'none' === n) ||
            (i && i.includeMainTypes && u(i.includeMainTypes, s) < 0)
          )
        ) {
          var h = { mainType: s };
          ('index' !== l || 'all' !== n) && (h[l] = n);
          var c = t.queryComponents(h);
          (a[s + 'Models'] = c), (a[s + 'Model'] = c[0]);
        }
      }),
      a
    );
  }
  function $n(t, e) {
    return t && t.hasOwnProperty(e);
  }
  function Jn(t, e, i) {
    t.setAttribute ? t.setAttribute(e, i) : (t[e] = i);
  }
  function Qn(t, e) {
    return t.getAttribute ? t.getAttribute(e) : t[e];
  }
  function tr(t) {
    return 'auto' === t ? (kg.domSupported ? 'html' : 'richText') : t || 'html';
  }
  function er(t) {
    var e = { main: '', sub: '' };
    return t && ((t = t.split(Zv)), (e.main = t[0] || ''), (e.sub = t[1] || '')), e;
  }
  function ir(t) {
    O(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(t), 'componentType "' + t + '" illegal');
  }
  function nr(t, e) {
    (t.$constructor = t),
      (t.extend = function (t) {
        Cg &&
          f(e, function (e) {
            t[e] || console.warn('Method `' + e + '` should be implemented' + (t.type ? ' in ' + t.type : '') + '.');
          });
        var i = this,
          n = function () {
            t.$constructor ? t.$constructor.apply(this, arguments) : i.apply(this, arguments);
          };
        return (
          o(n.prototype, t),
          (n.extend = this.extend),
          (n.superCall = ar),
          (n.superApply = or),
          h(n, this),
          (n.superClass = i),
          n
        );
      });
  }
  function rr(t) {
    var e = ['__\x00is_clz', qv++, Math.random().toFixed(3)].join('_');
    (t.prototype[e] = !0),
      Cg && O(!t.isInstance, 'The method "is" can not be defined.'),
      (t.isInstance = function (t) {
        return !(!t || !t[e]);
      });
  }
  function ar(t, e) {
    var i = P(arguments, 2);
    return this.superClass.prototype[e].apply(t, i);
  }
  function or(t, e, i) {
    return this.superClass.prototype[e].apply(t, i);
  }
  function sr(t, e) {
    function i(t) {
      var e = n[t.main];
      return (e && e[jv]) || ((e = n[t.main] = {}), (e[jv] = !0)), e;
    }
    e = e || {};
    var n = {};
    if (
      ((t.registerClass = function (t, e) {
        if (e)
          if ((ir(e), (e = er(e)), e.sub)) {
            if (e.sub !== jv) {
              var r = i(e);
              r[e.sub] = t;
            }
          } else Cg && n[e.main] && console.warn(e.main + ' exists.'), (n[e.main] = t);
        return t;
      }),
      (t.getClass = function (t, e, i) {
        var r = n[t];
        if ((r && r[jv] && (r = e ? r[e] : null), i && !r))
          throw new Error(
            e ? 'Component ' + t + '.' + (e || '') + ' not exists. Load it first.' : t + '.type should be specified.',
          );
        return r;
      }),
      (t.getClassesByMainType = function (t) {
        t = er(t);
        var e = [],
          i = n[t.main];
        return (
          i && i[jv]
            ? f(i, function (t, i) {
                i !== jv && e.push(t);
              })
            : e.push(i),
          e
        );
      }),
      (t.hasClass = function (t) {
        return (t = er(t)), !!n[t.main];
      }),
      (t.getAllClassMainTypes = function () {
        var t = [];
        return (
          f(n, function (e, i) {
            t.push(i);
          }),
          t
        );
      }),
      (t.hasSubTypes = function (t) {
        t = er(t);
        var e = n[t.main];
        return e && e[jv];
      }),
      (t.parseClassType = er),
      e.registerWhenExtend)
    ) {
      var r = t.extend;
      r &&
        (t.extend = function (e) {
          var i = r.call(this, e);
          return t.registerClass(i, e.type);
        });
    }
    return t;
  }
  function lr(t) {
    return t > -ny && ny > t;
  }
  function ur(t) {
    return t > ny || -ny > t;
  }
  function hr(t, e, i, n, r) {
    var a = 1 - r;
    return a * a * (a * t + 3 * r * e) + r * r * (r * n + 3 * a * i);
  }
  function cr(t, e, i, n, r) {
    var a = 1 - r;
    return 3 * (((e - t) * a + 2 * (i - e) * r) * a + (n - i) * r * r);
  }
  function dr(t, e, i, n, r, a) {
    var o = n + 3 * (e - i) - t,
      s = 3 * (i - 2 * e + t),
      l = 3 * (e - t),
      u = t - r,
      h = s * s - 3 * o * l,
      c = s * l - 9 * o * u,
      d = l * l - 3 * s * u,
      f = 0;
    if (lr(h) && lr(c))
      if (lr(s)) a[0] = 0;
      else {
        var p = -l / s;
        p >= 0 && 1 >= p && (a[f++] = p);
      }
    else {
      var g = c * c - 4 * h * d;
      if (lr(g)) {
        var m = c / h,
          p = -s / o + m,
          v = -m / 2;
        p >= 0 && 1 >= p && (a[f++] = p), v >= 0 && 1 >= v && (a[f++] = v);
      } else if (g > 0) {
        var y = iy(g),
          _ = h * s + 1.5 * o * (-c + y),
          x = h * s + 1.5 * o * (-c - y);
        (_ = 0 > _ ? -ey(-_, oy) : ey(_, oy)), (x = 0 > x ? -ey(-x, oy) : ey(x, oy));
        var p = (-s - (_ + x)) / (3 * o);
        p >= 0 && 1 >= p && (a[f++] = p);
      } else {
        var w = (2 * h * s - 3 * o * c) / (2 * iy(h * h * h)),
          b = Math.acos(w) / 3,
          S = iy(h),
          M = Math.cos(b),
          p = (-s - 2 * S * M) / (3 * o),
          v = (-s + S * (M + ay * Math.sin(b))) / (3 * o),
          I = (-s + S * (M - ay * Math.sin(b))) / (3 * o);
        p >= 0 && 1 >= p && (a[f++] = p), v >= 0 && 1 >= v && (a[f++] = v), I >= 0 && 1 >= I && (a[f++] = I);
      }
    }
    return f;
  }
  function fr(t, e, i, n, r) {
    var a = 6 * i - 12 * e + 6 * t,
      o = 9 * e + 3 * n - 3 * t - 9 * i,
      s = 3 * e - 3 * t,
      l = 0;
    if (lr(o)) {
      if (ur(a)) {
        var u = -s / a;
        u >= 0 && 1 >= u && (r[l++] = u);
      }
    } else {
      var h = a * a - 4 * o * s;
      if (lr(h)) r[0] = -a / (2 * o);
      else if (h > 0) {
        var c = iy(h),
          u = (-a + c) / (2 * o),
          d = (-a - c) / (2 * o);
        u >= 0 && 1 >= u && (r[l++] = u), d >= 0 && 1 >= d && (r[l++] = d);
      }
    }
    return l;
  }
  function pr(t, e, i, n, r, a) {
    var o = (e - t) * r + t,
      s = (i - e) * r + e,
      l = (n - i) * r + i,
      u = (s - o) * r + o,
      h = (l - s) * r + s,
      c = (h - u) * r + u;
    (a[0] = t), (a[1] = o), (a[2] = u), (a[3] = c), (a[4] = c), (a[5] = h), (a[6] = l), (a[7] = n);
  }
  function gr(t, e, i, n, r, a, o, s, l, u, h) {
    var c,
      d,
      f,
      p,
      g,
      m = 0.005,
      v = 1 / 0;
    (sy[0] = l), (sy[1] = u);
    for (var y = 0; 1 > y; y += 0.05)
      (ly[0] = hr(t, i, r, o, y)), (ly[1] = hr(e, n, a, s, y)), (p = qg(sy, ly)), v > p && ((c = y), (v = p));
    v = 1 / 0;
    for (var _ = 0; 32 > _ && !(ry > m); _++)
      (d = c - m),
        (f = c + m),
        (ly[0] = hr(t, i, r, o, d)),
        (ly[1] = hr(e, n, a, s, d)),
        (p = qg(ly, sy)),
        d >= 0 && v > p
          ? ((c = d), (v = p))
          : ((uy[0] = hr(t, i, r, o, f)),
            (uy[1] = hr(e, n, a, s, f)),
            (g = qg(uy, sy)),
            1 >= f && v > g ? ((c = f), (v = g)) : (m *= 0.5));
    return h && ((h[0] = hr(t, i, r, o, c)), (h[1] = hr(e, n, a, s, c))), iy(v);
  }
  function mr(t, e, i, n) {
    var r = 1 - n;
    return r * (r * t + 2 * n * e) + n * n * i;
  }
  function vr(t, e, i, n) {
    return 2 * ((1 - n) * (e - t) + n * (i - e));
  }
  function yr(t, e, i, n, r) {
    var a = t - 2 * e + i,
      o = 2 * (e - t),
      s = t - n,
      l = 0;
    if (lr(a)) {
      if (ur(o)) {
        var u = -s / o;
        u >= 0 && 1 >= u && (r[l++] = u);
      }
    } else {
      var h = o * o - 4 * a * s;
      if (lr(h)) {
        var u = -o / (2 * a);
        u >= 0 && 1 >= u && (r[l++] = u);
      } else if (h > 0) {
        var c = iy(h),
          u = (-o + c) / (2 * a),
          d = (-o - c) / (2 * a);
        u >= 0 && 1 >= u && (r[l++] = u), d >= 0 && 1 >= d && (r[l++] = d);
      }
    }
    return l;
  }
  function _r(t, e, i) {
    var n = t + i - 2 * e;
    return 0 === n ? 0.5 : (t - e) / n;
  }
  function xr(t, e, i, n, r) {
    var a = (e - t) * n + t,
      o = (i - e) * n + e,
      s = (o - a) * n + a;
    (r[0] = t), (r[1] = a), (r[2] = s), (r[3] = s), (r[4] = o), (r[5] = i);
  }
  function wr(t, e, i, n, r, a, o, s, l) {
    var u,
      h = 0.005,
      c = 1 / 0;
    (sy[0] = o), (sy[1] = s);
    for (var d = 0; 1 > d; d += 0.05) {
      (ly[0] = mr(t, i, r, d)), (ly[1] = mr(e, n, a, d));
      var f = qg(sy, ly);
      c > f && ((u = d), (c = f));
    }
    c = 1 / 0;
    for (var p = 0; 32 > p && !(ry > h); p++) {
      var g = u - h,
        m = u + h;
      (ly[0] = mr(t, i, r, g)), (ly[1] = mr(e, n, a, g));
      var f = qg(ly, sy);
      if (g >= 0 && c > f) (u = g), (c = f);
      else {
        (uy[0] = mr(t, i, r, m)), (uy[1] = mr(e, n, a, m));
        var v = qg(uy, sy);
        1 >= m && c > v ? ((u = m), (c = v)) : (h *= 0.5);
      }
    }
    return l && ((l[0] = mr(t, i, r, u)), (l[1] = mr(e, n, a, u))), iy(c);
  }
  function br(t, e, i) {
    if (0 !== t.length) {
      var n,
        r = t[0],
        a = r[0],
        o = r[0],
        s = r[1],
        l = r[1];
      for (n = 1; n < t.length; n++)
        (r = t[n]), (a = hy(a, r[0])), (o = cy(o, r[0])), (s = hy(s, r[1])), (l = cy(l, r[1]));
      (e[0] = a), (e[1] = s), (i[0] = o), (i[1] = l);
    }
  }
  function Sr(t, e, i, n, r, a) {
    (r[0] = hy(t, i)), (r[1] = hy(e, n)), (a[0] = cy(t, i)), (a[1] = cy(e, n));
  }
  function Mr(t, e, i, n, r, a, o, s, l, u) {
    var h,
      c = fr,
      d = hr,
      f = c(t, i, r, o, yy);
    for (l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0, h = 0; f > h; h++) {
      var p = d(t, i, r, o, yy[h]);
      (l[0] = hy(p, l[0])), (u[0] = cy(p, u[0]));
    }
    for (f = c(e, n, a, s, _y), h = 0; f > h; h++) {
      var g = d(e, n, a, s, _y[h]);
      (l[1] = hy(g, l[1])), (u[1] = cy(g, u[1]));
    }
    (l[0] = hy(t, l[0])),
      (u[0] = cy(t, u[0])),
      (l[0] = hy(o, l[0])),
      (u[0] = cy(o, u[0])),
      (l[1] = hy(e, l[1])),
      (u[1] = cy(e, u[1])),
      (l[1] = hy(s, l[1])),
      (u[1] = cy(s, u[1]));
  }
  function Ir(t, e, i, n, r, a, o, s) {
    var l = _r,
      u = mr,
      h = cy(hy(l(t, i, r), 1), 0),
      c = cy(hy(l(e, n, a), 1), 0),
      d = u(t, i, r, h),
      f = u(e, n, a, c);
    (o[0] = hy(t, r, d)), (o[1] = hy(e, a, f)), (s[0] = cy(t, r, d)), (s[1] = cy(e, a, f));
  }
  function Cr(t, e, i, n, r, a, o, s, l) {
    var u = oe,
      h = se,
      c = Math.abs(r - a);
    if (1e-4 > c % py && c > 1e-4) return (s[0] = t - i), (s[1] = e - n), (l[0] = t + i), void (l[1] = e + n);
    if (
      ((gy[0] = fy(r) * i + t),
      (gy[1] = dy(r) * n + e),
      (my[0] = fy(a) * i + t),
      (my[1] = dy(a) * n + e),
      u(s, gy, my),
      h(l, gy, my),
      (r %= py),
      0 > r && (r += py),
      (a %= py),
      0 > a && (a += py),
      r > a && !o ? (a += py) : a > r && o && (r += py),
      o)
    ) {
      var d = a;
      (a = r), (r = d);
    }
    for (var f = 0; a > f; f += Math.PI / 2)
      f > r && ((vy[0] = fy(f) * i + t), (vy[1] = dy(f) * n + e), u(s, vy, s), h(l, vy, l));
  }
  function Tr(t, e, i, n, r, a, o) {
    if (0 === r) return !1;
    var s = r,
      l = 0,
      u = t;
    if ((o > e + s && o > n + s) || (e - s > o && n - s > o) || (a > t + s && a > i + s) || (t - s > a && i - s > a))
      return !1;
    if (t === i) return Math.abs(a - t) <= s / 2;
    (l = (e - n) / (t - i)), (u = (t * n - i * e) / (t - i));
    var h = l * a - o + u,
      c = (h * h) / (l * l + 1);
    return ((s / 2) * s) / 2 >= c;
  }
  function Dr(t, e, i, n, r, a, o, s, l, u, h) {
    if (0 === l) return !1;
    var c = l;
    if (
      (h > e + c && h > n + c && h > a + c && h > s + c) ||
      (e - c > h && n - c > h && a - c > h && s - c > h) ||
      (u > t + c && u > i + c && u > r + c && u > o + c) ||
      (t - c > u && i - c > u && r - c > u && o - c > u)
    )
      return !1;
    var d = gr(t, e, i, n, r, a, o, s, u, h, null);
    return c / 2 >= d;
  }
  function Ar(t, e, i, n, r, a, o, s, l) {
    if (0 === o) return !1;
    var u = o;
    if (
      (l > e + u && l > n + u && l > a + u) ||
      (e - u > l && n - u > l && a - u > l) ||
      (s > t + u && s > i + u && s > r + u) ||
      (t - u > s && i - u > s && r - u > s)
    )
      return !1;
    var h = wr(t, e, i, n, r, a, s, l, null);
    return u / 2 >= h;
  }
  function kr(t) {
    return (t %= Oy), 0 > t && (t += Oy), t;
  }
  function Pr(t, e, i, n, r, a, o, s, l) {
    if (0 === o) return !1;
    var u = o;
    (s -= t), (l -= e);
    var h = Math.sqrt(s * s + l * l);
    if (h - u > i || i > h + u) return !1;
    if (Math.abs(n - r) % zy < 1e-4) return !0;
    if (a) {
      var c = n;
      (n = kr(r)), (r = kr(c));
    } else (n = kr(n)), (r = kr(r));
    n > r && (r += zy);
    var d = Math.atan2(l, s);
    return 0 > d && (d += zy), (d >= n && r >= d) || (d + zy >= n && r >= d + zy);
  }
  function Lr(t, e, i, n, r, a) {
    if ((a > e && a > n) || (e > a && n > a)) return 0;
    if (n === e) return 0;
    var o = e > n ? 1 : -1,
      s = (a - e) / (n - e);
    (1 === s || 0 === s) && (o = e > n ? 0.5 : -0.5);
    var l = s * (i - t) + t;
    return l === r ? 1 / 0 : l > r ? o : 0;
  }
  function Or(t, e) {
    return Math.abs(t - e) < By;
  }
  function zr() {
    var t = Fy[0];
    (Fy[0] = Fy[1]), (Fy[1] = t);
  }
  function Er(t, e, i, n, r, a, o, s, l, u) {
    if ((u > e && u > n && u > a && u > s) || (e > u && n > u && a > u && s > u)) return 0;
    var h = dr(e, n, a, s, u, Ny);
    if (0 === h) return 0;
    for (var c, d, f = 0, p = -1, g = 0; h > g; g++) {
      var m = Ny[g],
        v = 0 === m || 1 === m ? 0.5 : 1,
        y = hr(t, i, r, o, m);
      l > y ||
        (0 > p &&
          ((p = fr(e, n, a, s, Fy)),
          Fy[1] < Fy[0] && p > 1 && zr(),
          (c = hr(e, n, a, s, Fy[0])),
          p > 1 && (d = hr(e, n, a, s, Fy[1]))),
        (f +=
          2 === p
            ? m < Fy[0]
              ? e > c
                ? v
                : -v
              : m < Fy[1]
              ? c > d
                ? v
                : -v
              : d > s
              ? v
              : -v
            : m < Fy[0]
            ? e > c
              ? v
              : -v
            : c > s
            ? v
            : -v));
    }
    return f;
  }
  function Rr(t, e, i, n, r, a, o, s) {
    if ((s > e && s > n && s > a) || (e > s && n > s && a > s)) return 0;
    var l = yr(e, n, a, s, Ny);
    if (0 === l) return 0;
    var u = _r(e, n, a);
    if (u >= 0 && 1 >= u) {
      for (var h = 0, c = mr(e, n, a, u), d = 0; l > d; d++) {
        var f = 0 === Ny[d] || 1 === Ny[d] ? 0.5 : 1,
          p = mr(t, i, r, Ny[d]);
        o > p || (h += Ny[d] < u ? (e > c ? f : -f) : c > a ? f : -f);
      }
      return h;
    }
    var f = 0 === Ny[0] || 1 === Ny[0] ? 0.5 : 1,
      p = mr(t, i, r, Ny[0]);
    return o > p ? 0 : e > a ? f : -f;
  }
  function Br(t, e, i, n, r, a, o, s) {
    if (((s -= e), s > i || -i > s)) return 0;
    var l = Math.sqrt(i * i - s * s);
    (Ny[0] = -l), (Ny[1] = l);
    var u = Math.abs(n - r);
    if (1e-4 > u) return 0;
    if (1e-4 > u % Ry) {
      (n = 0), (r = Ry);
      var h = a ? 1 : -1;
      return o >= Ny[0] + t && o <= Ny[1] + t ? h : 0;
    }
    if (a) {
      var l = n;
      (n = kr(r)), (r = kr(l));
    } else (n = kr(n)), (r = kr(r));
    n > r && (r += Ry);
    for (var c = 0, d = 0; 2 > d; d++) {
      var f = Ny[d];
      if (f + t > o) {
        var p = Math.atan2(s, f),
          h = a ? 1 : -1;
        0 > p && (p = Ry + p),
          ((p >= n && r >= p) || (p + Ry >= n && r >= p + Ry)) &&
            (p > Math.PI / 2 && p < 1.5 * Math.PI && (h = -h), (c += h));
      }
    }
    return c;
  }
  function Nr(t, e, i, n, r) {
    for (var a = 0, o = 0, s = 0, l = 0, u = 0, h = 0; h < t.length; ) {
      var c = t[h++];
      switch (
        (c === Ey.M && h > 1 && (i || (a += Lr(o, s, l, u, n, r))),
        1 === h && ((o = t[h]), (s = t[h + 1]), (l = o), (u = s)),
        c)
      ) {
        case Ey.M:
          (l = t[h++]), (u = t[h++]), (o = l), (s = u);
          break;
        case Ey.L:
          if (i) {
            if (Tr(o, s, t[h], t[h + 1], e, n, r)) return !0;
          } else a += Lr(o, s, t[h], t[h + 1], n, r) || 0;
          (o = t[h++]), (s = t[h++]);
          break;
        case Ey.C:
          if (i) {
            if (Dr(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], e, n, r)) return !0;
          } else a += Er(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], n, r) || 0;
          (o = t[h++]), (s = t[h++]);
          break;
        case Ey.Q:
          if (i) {
            if (Ar(o, s, t[h++], t[h++], t[h], t[h + 1], e, n, r)) return !0;
          } else a += Rr(o, s, t[h++], t[h++], t[h], t[h + 1], n, r) || 0;
          (o = t[h++]), (s = t[h++]);
          break;
        case Ey.A:
          var d = t[h++],
            f = t[h++],
            p = t[h++],
            g = t[h++],
            m = t[h++],
            v = t[h++];
          h += 1;
          var y = 1 - t[h++],
            _ = Math.cos(m) * p + d,
            x = Math.sin(m) * g + f;
          h > 1 ? (a += Lr(o, s, _, x, n, r)) : ((l = _), (u = x));
          var w = ((n - d) * g) / p + d;
          if (i) {
            if (Pr(d, f, g, m, m + v, y, e, w, r)) return !0;
          } else a += Br(d, f, g, m, m + v, y, w, r);
          (o = Math.cos(m + v) * p + d), (s = Math.sin(m + v) * g + f);
          break;
        case Ey.R:
          (l = o = t[h++]), (u = s = t[h++]);
          var b = t[h++],
            S = t[h++],
            _ = l + b,
            x = u + S;
          if (i) {
            if (
              Tr(l, u, _, u, e, n, r) ||
              Tr(_, u, _, x, e, n, r) ||
              Tr(_, x, l, x, e, n, r) ||
              Tr(l, x, l, u, e, n, r)
            )
              return !0;
          } else (a += Lr(_, u, _, x, n, r)), (a += Lr(l, x, l, u, n, r));
          break;
        case Ey.Z:
          if (i) {
            if (Tr(o, s, l, u, e, n, r)) return !0;
          } else a += Lr(o, s, l, u, n, r);
          (o = l), (s = u);
      }
    }
    return i || Or(s, u) || (a += Lr(o, s, l, u, n, r) || 0), 0 !== a;
  }
  function Fr(t, e, i) {
    return Nr(t, 0, !1, e, i);
  }
  function Gr(t, e, i, n) {
    return Nr(t, e, !0, i, n);
  }
  function Vr(t) {
    bn.call(this, t), (this.path = null);
  }
  function Hr(t, e, i, n, r, a, o, s, l, u, h) {
    var c = l * ($y / 180),
      d = (Ky(c) * (t - i)) / 2 + (qy(c) * (e - n)) / 2,
      f = (-1 * qy(c) * (t - i)) / 2 + (Ky(c) * (e - n)) / 2,
      p = (d * d) / (o * o) + (f * f) / (s * s);
    p > 1 && ((o *= jy(p)), (s *= jy(p)));
    var g =
        (r === a ? -1 : 1) * jy((o * o * s * s - o * o * f * f - s * s * d * d) / (o * o * f * f + s * s * d * d)) || 0,
      m = (g * o * f) / s,
      v = (g * -s * d) / o,
      y = (t + i) / 2 + Ky(c) * m - qy(c) * v,
      _ = (e + n) / 2 + qy(c) * m + Ky(c) * v,
      x = t_([1, 0], [(d - m) / o, (f - v) / s]),
      w = [(d - m) / o, (f - v) / s],
      b = [(-1 * d - m) / o, (-1 * f - v) / s],
      S = t_(w, b);
    Qy(w, b) <= -1 && (S = $y),
      Qy(w, b) >= 1 && (S = 0),
      0 === a && S > 0 && (S -= 2 * $y),
      1 === a && 0 > S && (S += 2 * $y),
      h.addData(u, y, _, o, s, x, S, c, a);
  }
  function Wr(t) {
    if (!t) return new Ly();
    for (var e, i = 0, n = 0, r = i, a = n, o = new Ly(), s = Ly.CMD, l = t.match(e_), u = 0; u < l.length; u++) {
      for (var h, c = l[u], d = c.charAt(0), f = c.match(i_) || [], p = f.length, g = 0; p > g; g++)
        f[g] = parseFloat(f[g]);
      for (var m = 0; p > m; ) {
        var v,
          y,
          _,
          x,
          w,
          b,
          S,
          M = i,
          I = n;
        switch (d) {
          case 'l':
            (i += f[m++]), (n += f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'L':
            (i = f[m++]), (n = f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'm':
            (i += f[m++]), (n += f[m++]), (h = s.M), o.addData(h, i, n), (r = i), (a = n), (d = 'l');
            break;
          case 'M':
            (i = f[m++]), (n = f[m++]), (h = s.M), o.addData(h, i, n), (r = i), (a = n), (d = 'L');
            break;
          case 'h':
            (i += f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'H':
            (i = f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'v':
            (n += f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'V':
            (n = f[m++]), (h = s.L), o.addData(h, i, n);
            break;
          case 'C':
            (h = s.C), o.addData(h, f[m++], f[m++], f[m++], f[m++], f[m++], f[m++]), (i = f[m - 2]), (n = f[m - 1]);
            break;
          case 'c':
            (h = s.C),
              o.addData(h, f[m++] + i, f[m++] + n, f[m++] + i, f[m++] + n, f[m++] + i, f[m++] + n),
              (i += f[m - 2]),
              (n += f[m - 1]);
            break;
          case 'S':
            (v = i), (y = n);
            var C = o.len(),
              T = o.data;
            e === s.C && ((v += i - T[C - 4]), (y += n - T[C - 3])),
              (h = s.C),
              (M = f[m++]),
              (I = f[m++]),
              (i = f[m++]),
              (n = f[m++]),
              o.addData(h, v, y, M, I, i, n);
            break;
          case 's':
            (v = i), (y = n);
            var C = o.len(),
              T = o.data;
            e === s.C && ((v += i - T[C - 4]), (y += n - T[C - 3])),
              (h = s.C),
              (M = i + f[m++]),
              (I = n + f[m++]),
              (i += f[m++]),
              (n += f[m++]),
              o.addData(h, v, y, M, I, i, n);
            break;
          case 'Q':
            (M = f[m++]), (I = f[m++]), (i = f[m++]), (n = f[m++]), (h = s.Q), o.addData(h, M, I, i, n);
            break;
          case 'q':
            (M = f[m++] + i), (I = f[m++] + n), (i += f[m++]), (n += f[m++]), (h = s.Q), o.addData(h, M, I, i, n);
            break;
          case 'T':
            (v = i), (y = n);
            var C = o.len(),
              T = o.data;
            e === s.Q && ((v += i - T[C - 4]), (y += n - T[C - 3])),
              (i = f[m++]),
              (n = f[m++]),
              (h = s.Q),
              o.addData(h, v, y, i, n);
            break;
          case 't':
            (v = i), (y = n);
            var C = o.len(),
              T = o.data;
            e === s.Q && ((v += i - T[C - 4]), (y += n - T[C - 3])),
              (i += f[m++]),
              (n += f[m++]),
              (h = s.Q),
              o.addData(h, v, y, i, n);
            break;
          case 'A':
            (_ = f[m++]),
              (x = f[m++]),
              (w = f[m++]),
              (b = f[m++]),
              (S = f[m++]),
              (M = i),
              (I = n),
              (i = f[m++]),
              (n = f[m++]),
              (h = s.A),
              Hr(M, I, i, n, b, S, _, x, w, h, o);
            break;
          case 'a':
            (_ = f[m++]),
              (x = f[m++]),
              (w = f[m++]),
              (b = f[m++]),
              (S = f[m++]),
              (M = i),
              (I = n),
              (i += f[m++]),
              (n += f[m++]),
              (h = s.A),
              Hr(M, I, i, n, b, S, _, x, w, h, o);
        }
      }
      ('z' === d || 'Z' === d) && ((h = s.Z), o.addData(h), (i = r), (n = a)), (e = h);
    }
    return o.toStatic(), o;
  }
  function Ur(t, e) {
    var i = Wr(t);
    return (
      (e = e || {}),
      (e.buildPath = function (t) {
        if (t.setData) {
          t.setData(i.data);
          var e = t.getContext();
          e && t.rebuildPath(e);
        } else {
          var e = t;
          i.rebuildPath(e);
        }
      }),
      (e.applyTransform = function (t) {
        Zy(i, t), this.dirty(!0);
      }),
      e
    );
  }
  function Xr(t, e) {
    return new Vr(Ur(t, e));
  }
  function Yr(t, e) {
    return Vr.extend(Ur(t, e));
  }
  function Zr(t, e) {
    for (var i = [], n = t.length, r = 0; n > r; r++) {
      var a = t[r];
      a.path || a.createPathProxy(), a.__dirtyPath && a.buildPath(a.path, a.shape, !0), i.push(a.path);
    }
    var o = new Vr(e);
    return (
      o.createPathProxy(),
      (o.buildPath = function (t) {
        t.appendPath(i);
        var e = t.getContext();
        e && t.rebuildPath(e);
      }),
      o
    );
  }
  function jr(t, e, i, n, r, a, o) {
    var s = 0.5 * (i - t),
      l = 0.5 * (n - e);
    return (2 * (e - i) + s + l) * o + (-3 * (e - i) - 2 * s - l) * a + s * r + e;
  }
  function qr(t, e, i) {
    var n = e.points,
      r = e.smooth;
    if (n && n.length >= 2) {
      if (r && 'spline' !== r) {
        var a = h_(n, r, i, e.smoothConstraint);
        t.moveTo(n[0][0], n[0][1]);
        for (var o = n.length, s = 0; (i ? o : o - 1) > s; s++) {
          var l = a[2 * s],
            u = a[2 * s + 1],
            h = n[(s + 1) % o];
          t.bezierCurveTo(l[0], l[1], u[0], u[1], h[0], h[1]);
        }
      } else {
        'spline' === r && (n = u_(n, i)), t.moveTo(n[0][0], n[0][1]);
        for (var s = 1, c = n.length; c > s; s++) t.lineTo(n[s][0], n[s][1]);
      }
      i && t.closePath();
    }
  }
  function Kr(t, e, i) {
    var n = i && i.lineWidth;
    if (e && n) {
      var r = e.x1,
        a = e.x2,
        o = e.y1,
        s = e.y2;
      f_(2 * r) === f_(2 * a) ? (t.x1 = t.x2 = Jr(r, n, !0)) : ((t.x1 = r), (t.x2 = a)),
        f_(2 * o) === f_(2 * s) ? (t.y1 = t.y2 = Jr(o, n, !0)) : ((t.y1 = o), (t.y2 = s));
    }
  }
  function $r(t, e, i) {
    var n = i && i.lineWidth;
    if (e && n) {
      var r = e.x,
        a = e.y,
        o = e.width,
        s = e.height;
      (t.x = Jr(r, n, !0)),
        (t.y = Jr(a, n, !0)),
        (t.width = Math.max(Jr(r + o, n, !1) - t.x, 0 === o ? 0 : 1)),
        (t.height = Math.max(Jr(a + s, n, !1) - t.y, 0 === s ? 0 : 1));
    }
  }
  function Jr(t, e, i) {
    var n = f_(2 * t);
    return (n + f_(e)) % 2 === 0 ? n / 2 : (n + (i ? 1 : -1)) / 2;
  }
  function Qr(t, e, i) {
    var n = t.cpx2,
      r = t.cpy2;
    return null === n || null === r
      ? [(i ? cr : hr)(t.x1, t.cpx1, t.cpx2, t.x2, e), (i ? cr : hr)(t.y1, t.cpy1, t.cpy2, t.y2, e)]
      : [(i ? vr : mr)(t.x1, t.cpx1, t.x2, e), (i ? vr : mr)(t.y1, t.cpy1, t.y2, e)];
  }
  function ta(t) {
    bn.call(this, t),
      (this._displayables = []),
      (this._temporaryDisplayables = []),
      (this._cursor = 0),
      (this.notClear = !0);
  }
  function ea(t) {
    return Vr.extend(t);
  }
  function ia(t, e) {
    return Yr(t, e);
  }
  function na(t, e) {
    E_[t] = e;
  }
  function ra(t) {
    return E_.hasOwnProperty(t) ? E_[t] : void 0;
  }
  function aa(t, e, i, n) {
    var r = Xr(t, e);
    return i && ('center' === n && (i = sa(i, r.getBoundingRect())), la(r, i)), r;
  }
  function oa(t, e, i) {
    var n = new Sn({
      style: { image: t, x: e.x, y: e.y, width: e.width, height: e.height },
      onload: function (t) {
        if ('center' === i) {
          var r = { width: t.width, height: t.height };
          n.setStyle(sa(e, r));
        }
      },
    });
    return n;
  }
  function sa(t, e) {
    var i,
      n = e.width / e.height,
      r = t.height * n;
    r <= t.width ? (i = t.height) : ((r = t.width), (i = r / n));
    var a = t.x + t.width / 2,
      o = t.y + t.height / 2;
    return { x: a - r / 2, y: o - i / 2, width: r, height: i };
  }
  function la(t, e) {
    if (t.applyTransform) {
      var i = t.getBoundingRect(),
        n = i.calculateTransform(e);
      t.applyTransform(n);
    }
  }
  function ua(t) {
    return Kr(t.shape, t.shape, t.style), t;
  }
  function ha(t) {
    return $r(t.shape, t.shape, t.style), t;
  }
  function ca(t) {
    return null != t && 'none' !== t;
  }
  function da(t) {
    if ('string' != typeof t) return t;
    var e = N_.get(t);
    return e || ((e = Je(t, -0.1)), 1e4 > F_ && (N_.set(t, e), F_++)), e;
  }
  function fa(t) {
    if (t.__hoverStlDirty) {
      t.__hoverStlDirty = !1;
      var e = t.__hoverStl;
      if (!e) return void (t.__cachedNormalStl = t.__cachedNormalZ2 = null);
      var i = (t.__cachedNormalStl = {});
      t.__cachedNormalZ2 = t.z2;
      var n = t.style;
      for (var r in e) null != e[r] && (i[r] = n[r]);
      (i.fill = n.fill), (i.stroke = n.stroke);
    }
  }
  function pa(t) {
    var e = t.__hoverStl;
    if (e && !t.__highlighted) {
      var i = t.__zr,
        n = t.useHoverLayer && i && 'canvas' === i.painter.type;
      if (((t.__highlighted = n ? 'layer' : 'plain'), !(t.isGroup || (!i && t.useHoverLayer)))) {
        var r = t,
          a = t.style;
        n && ((r = i.addHover(t)), (a = r.style)),
          Ba(a),
          n || fa(r),
          a.extendFrom(e),
          ga(a, e, 'fill'),
          ga(a, e, 'stroke'),
          Ra(a),
          n || (t.dirty(!1), (t.z2 += A_));
      }
    }
  }
  function ga(t, e, i) {
    !ca(e[i]) && ca(t[i]) && (t[i] = da(t[i]));
  }
  function ma(t) {
    var e = t.__highlighted;
    if (e && ((t.__highlighted = !1), !t.isGroup))
      if ('layer' === e) t.__zr && t.__zr.removeHover(t);
      else {
        var i = t.style,
          n = t.__cachedNormalStl;
        n && (Ba(i), t.setStyle(n), Ra(i));
        var r = t.__cachedNormalZ2;
        null != r && t.z2 - r === A_ && (t.z2 = r);
      }
  }
  function va(t, e, i) {
    var n,
      r = L_,
      a = L_;
    t.__highlighted && ((r = P_), (n = !0)),
      e(t, i),
      t.__highlighted && ((a = P_), (n = !0)),
      t.isGroup &&
        t.traverse(function (t) {
          !t.isGroup && e(t, i);
        }),
      n && t.__highDownOnUpdate && t.__highDownOnUpdate(r, a);
  }
  function ya(t, e) {
    (e = t.__hoverStl = e !== !1 && (t.hoverStyle || e || {})),
      (t.__hoverStlDirty = !0),
      t.__highlighted && ((t.__cachedNormalStl = null), ma(t), pa(t));
  }
  function _a(t) {
    !Sa(this, t) && !this.__highByOuter && va(this, pa);
  }
  function xa(t) {
    !Sa(this, t) && !this.__highByOuter && va(this, ma);
  }
  function wa(t) {
    (this.__highByOuter |= 1 << (t || 0)), va(this, pa);
  }
  function ba(t) {
    !(this.__highByOuter &= ~(1 << (t || 0))) && va(this, ma);
  }
  function Sa(t, e) {
    return t.__highDownSilentOnTouch && e.zrByTouch;
  }
  function Ma(t, e) {
    Ia(t, !0), va(t, ya, e);
  }
  function Ia(t, e) {
    var i = e === !1;
    if (
      ((t.__highDownSilentOnTouch = t.highDownSilentOnTouch),
      (t.__highDownOnUpdate = t.highDownOnUpdate),
      !i || t.__highDownDispatcher)
    ) {
      var n = i ? 'off' : 'on';
      t[n]('mouseover', _a)[n]('mouseout', xa),
        t[n]('emphasis', wa)[n]('normal', ba),
        (t.__highByOuter = t.__highByOuter || 0),
        (t.__highDownDispatcher = !i);
    }
  }
  function Ca(t) {
    return !(!t || !t.__highDownDispatcher);
  }
  function Ta(t) {
    var e = z_[t];
    return null == e && 32 >= O_ && (e = z_[t] = O_++), e;
  }
  function Da(t, e, i, n, r, a, o) {
    r = r || D_;
    var s,
      l = r.labelFetcher,
      u = r.labelDataIndex,
      h = r.labelDimIndex,
      c = i.getShallow('show'),
      d = n.getShallow('show');
    (c || d) &&
      (l && (s = l.getFormattedLabel(u, 'normal', null, h)),
      null == s && (s = w(r.defaultText) ? r.defaultText(u, r) : r.defaultText));
    var f = c ? s : null,
      p = d ? A(l ? l.getFormattedLabel(u, 'emphasis', null, h) : null, s) : null;
    (null != f || null != p) && (ka(t, i, a, r), ka(e, n, o, r, !0)), (t.text = f), (e.text = p);
  }
  function Aa(t, e, i) {
    var n = t.style;
    e && (Ba(n), t.setStyle(e), Ra(n)), (n = t.__hoverStl), i && n && (Ba(n), o(n, i), Ra(n));
  }
  function ka(t, e, i, n, r) {
    return La(t, e, n, r), i && o(t, i), t;
  }
  function Pa(t, e, i) {
    var n,
      r = { isRectText: !0 };
    i === !1 ? (n = !0) : (r.autoColor = i), La(t, e, r, n);
  }
  function La(t, e, i, n) {
    if (((i = i || D_), i.isRectText)) {
      var r;
      i.getTextPosition
        ? (r = i.getTextPosition(e, n))
        : ((r = e.getShallow('position') || (n ? null : 'inside')), 'outside' === r && (r = 'top')),
        (t.textPosition = r),
        (t.textOffset = e.getShallow('offset'));
      var a = e.getShallow('rotate');
      null != a && (a *= Math.PI / 180),
        (t.textRotation = a),
        (t.textDistance = A(e.getShallow('distance'), n ? null : 5));
    }
    var o,
      s = e.ecModel,
      l = s && s.option.textStyle,
      u = Oa(e);
    if (u) {
      o = {};
      for (var h in u)
        if (u.hasOwnProperty(h)) {
          var c = e.getModel(['rich', h]);
          za((o[h] = {}), c, l, i, n);
        }
    }
    return (t.rich = o), za(t, e, l, i, n, !0), i.forceRich && !i.textStyle && (i.textStyle = {}), t;
  }
  function Oa(t) {
    for (var e; t && t !== t.ecModel; ) {
      var i = (t.option || D_).rich;
      if (i) {
        e = e || {};
        for (var n in i) i.hasOwnProperty(n) && (e[n] = 1);
      }
      t = t.parentModel;
    }
    return e;
  }
  function za(t, e, i, n, r, a) {
    (i = (!r && i) || D_),
      (t.textFill = Ea(e.getShallow('color'), n) || i.color),
      (t.textStroke = Ea(e.getShallow('textBorderColor'), n) || i.textBorderColor),
      (t.textStrokeWidth = A(e.getShallow('textBorderWidth'), i.textBorderWidth)),
      r || (a && ((t.insideRollbackOpt = n), Ra(t)), null == t.textFill && (t.textFill = n.autoColor)),
      (t.fontStyle = e.getShallow('fontStyle') || i.fontStyle),
      (t.fontWeight = e.getShallow('fontWeight') || i.fontWeight),
      (t.fontSize = e.getShallow('fontSize') || i.fontSize),
      (t.fontFamily = e.getShallow('fontFamily') || i.fontFamily),
      (t.textAlign = e.getShallow('align')),
      (t.textVerticalAlign = e.getShallow('verticalAlign') || e.getShallow('baseline')),
      (t.textLineHeight = e.getShallow('lineHeight')),
      (t.textWidth = e.getShallow('width')),
      (t.textHeight = e.getShallow('height')),
      (t.textTag = e.getShallow('tag')),
      (a && n.disableBox) ||
        ((t.textBackgroundColor = Ea(e.getShallow('backgroundColor'), n)),
        (t.textPadding = e.getShallow('padding')),
        (t.textBorderColor = Ea(e.getShallow('borderColor'), n)),
        (t.textBorderWidth = e.getShallow('borderWidth')),
        (t.textBorderRadius = e.getShallow('borderRadius')),
        (t.textBoxShadowColor = e.getShallow('shadowColor')),
        (t.textBoxShadowBlur = e.getShallow('shadowBlur')),
        (t.textBoxShadowOffsetX = e.getShallow('shadowOffsetX')),
        (t.textBoxShadowOffsetY = e.getShallow('shadowOffsetY'))),
      (t.textShadowColor = e.getShallow('textShadowColor') || i.textShadowColor),
      (t.textShadowBlur = e.getShallow('textShadowBlur') || i.textShadowBlur),
      (t.textShadowOffsetX = e.getShallow('textShadowOffsetX') || i.textShadowOffsetX),
      (t.textShadowOffsetY = e.getShallow('textShadowOffsetY') || i.textShadowOffsetY);
  }
  function Ea(t, e) {
    return 'auto' !== t ? t : e && e.autoColor ? e.autoColor : null;
  }
  function Ra(t) {
    var e,
      i = t.textPosition,
      n = t.insideRollbackOpt;
    if (n && null == t.textFill) {
      var r = n.autoColor,
        a = n.isRectText,
        o = n.useInsideStyle,
        s = o !== !1 && (o === !0 || (a && i && 'string' == typeof i && i.indexOf('inside') >= 0)),
        l = !s && null != r;
      (s || l) && (e = { textFill: t.textFill, textStroke: t.textStroke, textStrokeWidth: t.textStrokeWidth }),
        s &&
          ((t.textFill = '#fff'),
          null == t.textStroke && ((t.textStroke = r), null == t.textStrokeWidth && (t.textStrokeWidth = 2))),
        l && (t.textFill = r);
    }
    t.insideRollback = e;
  }
  function Ba(t) {
    var e = t.insideRollback;
    e &&
      ((t.textFill = e.textFill),
      (t.textStroke = e.textStroke),
      (t.textStrokeWidth = e.textStrokeWidth),
      (t.insideRollback = null));
  }
  function Na(t, e) {
    var i = e || e.getModel('textStyle');
    return z(
      [
        t.fontStyle || (i && i.getShallow('fontStyle')) || '',
        t.fontWeight || (i && i.getShallow('fontWeight')) || '',
        (t.fontSize || (i && i.getShallow('fontSize')) || 12) + 'px',
        t.fontFamily || (i && i.getShallow('fontFamily')) || 'sans-serif',
      ].join(' '),
    );
  }
  function Fa(t, e, i, n, r, a) {
    'function' == typeof r && ((a = r), (r = null));
    var o = n && n.isAnimationEnabled();
    if (o) {
      var s = t ? 'Update' : '',
        l = n.getShallow('animationDuration' + s),
        u = n.getShallow('animationEasing' + s),
        h = n.getShallow('animationDelay' + s);
      'function' == typeof h && (h = h(r, n.getAnimationDelayParams ? n.getAnimationDelayParams(e, r) : null)),
        'function' == typeof l && (l = l(r)),
        l > 0 ? e.animateTo(i, l, h || 0, u, a, !!a) : (e.stopAnimation(), e.attr(i), a && a());
    } else e.stopAnimation(), e.attr(i), a && a();
  }
  function Ga(t, e, i, n, r) {
    Fa(!0, t, e, i, n, r);
  }
  function Va(t, e, i, n, r) {
    Fa(!1, t, e, i, n, r);
  }
  function Ha(t, e) {
    for (var i = Ae([]); t && t !== e; ) Pe(i, t.getLocalTransform(), i), (t = t.parent);
    return i;
  }
  function Wa(t, e, i) {
    return e && !d(e) && (e = pm.getLocalTransform(e)), i && (e = Ee([], e)), ae([], t, e);
  }
  function Ua(t, e, i) {
    var n = 0 === e[4] || 0 === e[5] || 0 === e[0] ? 1 : Math.abs((2 * e[4]) / e[0]),
      r = 0 === e[4] || 0 === e[5] || 0 === e[2] ? 1 : Math.abs((2 * e[4]) / e[2]),
      a = ['left' === t ? -n : 'right' === t ? n : 0, 'top' === t ? -r : 'bottom' === t ? r : 0];
    return (
      (a = Wa(a, e, i)), Math.abs(a[0]) > Math.abs(a[1]) ? (a[0] > 0 ? 'right' : 'left') : a[1] > 0 ? 'bottom' : 'top'
    );
  }
  function Xa(t, e, i) {
    function n(t) {
      var e = {};
      return (
        t.traverse(function (t) {
          !t.isGroup && t.anid && (e[t.anid] = t);
        }),
        e
      );
    }
    function r(t) {
      var e = { position: W(t.position), rotation: t.rotation };
      return t.shape && (e.shape = o({}, t.shape)), e;
    }
    if (t && e) {
      var a = n(t);
      e.traverse(function (t) {
        if (!t.isGroup && t.anid) {
          var e = a[t.anid];
          if (e) {
            var n = r(t);
            t.attr(r(e)), Ga(t, n, i, t.dataIndex);
          }
        }
      });
    }
  }
  function Ya(t, e) {
    return p(t, function (t) {
      var i = t[0];
      (i = C_(i, e.x)), (i = T_(i, e.x + e.width));
      var n = t[1];
      return (n = C_(n, e.y)), (n = T_(n, e.y + e.height)), [i, n];
    });
  }
  function Za(t, e) {
    var i = C_(t.x, e.x),
      n = T_(t.x + t.width, e.x + e.width),
      r = C_(t.y, e.y),
      a = T_(t.y + t.height, e.y + e.height);
    return n >= i && a >= r ? { x: i, y: r, width: n - i, height: a - r } : void 0;
  }
  function ja(t, e, i) {
    e = o({ rectHover: !0 }, e);
    var n = (e.style = { strokeNoScale: !0 });
    return (
      (i = i || { x: -1, y: -1, width: 2, height: 2 }),
      t
        ? 0 === t.indexOf('image://')
          ? ((n.image = t.slice(8)), s(n, i), new Sn(e))
          : aa(t.replace('path://', ''), e, i, 'center')
        : void 0
    );
  }
  function qa(t, e, i, n, r) {
    for (var a = 0, o = r[r.length - 1]; a < r.length; a++) {
      var s = r[a];
      if (Ka(t, e, i, n, s[0], s[1], o[0], o[1])) return !0;
      o = s;
    }
  }
  function Ka(t, e, i, n, r, a, o, s) {
    var l = i - t,
      u = n - e,
      h = o - r,
      c = s - a,
      d = $a(h, c, l, u);
    if (Ja(d)) return !1;
    var f = t - r,
      p = e - a,
      g = $a(f, p, l, u) / d;
    if (0 > g || g > 1) return !1;
    var m = $a(f, p, h, c) / d;
    return 0 > m || m > 1 ? !1 : !0;
  }
  function $a(t, e, i, n) {
    return t * n - i * e;
  }
  function Ja(t) {
    return 1e-6 >= t && t >= -1e-6;
  }
  function Qa(t, e, i) {
    (this.parentModel = e), (this.ecModel = i), (this.option = t);
  }
  function to(t, e, i) {
    for (var n = 0; n < e.length && (!e[n] || ((t = t && 'object' == typeof t ? t[e[n]] : null), null != t)); n++);
    return null == t && i && (t = i.get(e)), t;
  }
  function eo(t, e) {
    var i = Y_(t).getParent;
    return i ? i.call(t, e) : t.parentModel;
  }
  function io(t) {
    return [t || '', Z_++, Math.random().toFixed(5)].join('_');
  }
  function no(t) {
    var e = {};
    return (
      (t.registerSubTypeDefaulter = function (t, i) {
        (t = er(t)), (e[t.main] = i);
      }),
      (t.determineSubType = function (i, n) {
        var r = n.type;
        if (!r) {
          var a = er(i).main;
          t.hasSubTypes(i) && e[a] && (r = e[a](n));
        }
        return r;
      }),
      t
    );
  }
  function ro(t, e) {
    function i(t) {
      var i = {},
        a = [];
      return (
        f(t, function (o) {
          var s = n(i, o),
            l = (s.originalDeps = e(o)),
            h = r(l, t);
          (s.entryCount = h.length),
            0 === s.entryCount && a.push(o),
            f(h, function (t) {
              u(s.predecessor, t) < 0 && s.predecessor.push(t);
              var e = n(i, t);
              u(e.successor, t) < 0 && e.successor.push(o);
            });
        }),
        { graph: i, noEntryList: a }
      );
    }
    function n(t, e) {
      return t[e] || (t[e] = { predecessor: [], successor: [] }), t[e];
    }
    function r(t, e) {
      var i = [];
      return (
        f(t, function (t) {
          u(e, t) >= 0 && i.push(t);
        }),
        i
      );
    }
    t.topologicalTravel = function (t, e, n, r) {
      function a(t) {
        l[t].entryCount--, 0 === l[t].entryCount && u.push(t);
      }
      function o(t) {
        (h[t] = !0), a(t);
      }
      if (t.length) {
        var s = i(e),
          l = s.graph,
          u = s.noEntryList,
          h = {};
        for (
          f(t, function (t) {
            h[t] = !0;
          });
          u.length;

        ) {
          var c = u.pop(),
            d = l[c],
            p = !!h[c];
          p && (n.call(r, c, d.originalDeps.slice()), delete h[c]), f(d.successor, p ? o : a);
        }
        f(h, function () {
          throw new Error('Circle dependency may exists');
        });
      }
    };
  }
  function ao(t) {
    return t.replace(/^\s+|\s+$/g, '');
  }
  function oo(t, e, i, n) {
    var r = e[1] - e[0],
      a = i[1] - i[0];
    if (0 === r) return 0 === a ? i[0] : (i[0] + i[1]) / 2;
    if (n)
      if (r > 0) {
        if (t <= e[0]) return i[0];
        if (t >= e[1]) return i[1];
      } else {
        if (t >= e[0]) return i[0];
        if (t <= e[1]) return i[1];
      }
    else {
      if (t === e[0]) return i[0];
      if (t === e[1]) return i[1];
    }
    return ((t - e[0]) / r) * a + i[0];
  }
  function so(t, e) {
    switch (t) {
      case 'center':
      case 'middle':
        t = '50%';
        break;
      case 'left':
      case 'top':
        t = '0%';
        break;
      case 'right':
      case 'bottom':
        t = '100%';
    }
    return 'string' == typeof t
      ? ao(t).match(/%$/)
        ? (parseFloat(t) / 100) * e
        : parseFloat(t)
      : null == t
      ? 0 / 0
      : +t;
  }
  function lo(t, e, i) {
    return null == e && (e = 10), (e = Math.min(Math.max(0, e), 20)), (t = (+t).toFixed(e)), i ? t : +t;
  }
  function uo(t) {
    return (
      t.sort(function (t, e) {
        return t - e;
      }),
      t
    );
  }
  function ho(t) {
    if (((t = +t), isNaN(t))) return 0;
    for (var e = 1, i = 0; Math.round(t * e) / e !== t; ) (e *= 10), i++;
    return i;
  }
  function co(t) {
    var e = t.toString(),
      i = e.indexOf('e');
    if (i > 0) {
      var n = +e.slice(i + 1);
      return 0 > n ? -n : 0;
    }
    var r = e.indexOf('.');
    return 0 > r ? 0 : e.length - 1 - r;
  }
  function fo(t, e) {
    var i = Math.log,
      n = Math.LN10,
      r = Math.floor(i(t[1] - t[0]) / n),
      a = Math.round(i(Math.abs(e[1] - e[0])) / n),
      o = Math.min(Math.max(-r + a, 0), 20);
    return isFinite(o) ? o : 20;
  }
  function po(t, e, i) {
    if (!t[e]) return 0;
    var n = g(
      t,
      function (t, e) {
        return t + (isNaN(e) ? 0 : e);
      },
      0,
    );
    if (0 === n) return 0;
    for (
      var r = Math.pow(10, i),
        a = p(t, function (t) {
          return ((isNaN(t) ? 0 : t) / n) * r * 100;
        }),
        o = 100 * r,
        s = p(a, function (t) {
          return Math.floor(t);
        }),
        l = g(
          s,
          function (t, e) {
            return t + e;
          },
          0,
        ),
        u = p(a, function (t, e) {
          return t - s[e];
        });
      o > l;

    ) {
      for (var h = Number.NEGATIVE_INFINITY, c = null, d = 0, f = u.length; f > d; ++d)
        u[d] > h && ((h = u[d]), (c = d));
      ++s[c], (u[c] = 0), ++l;
    }
    return s[e] / r;
  }
  function go(t) {
    var e = 2 * Math.PI;
    return ((t % e) + e) % e;
  }
  function mo(t) {
    return t > -j_ && j_ > t;
  }
  function vo(t) {
    if (t instanceof Date) return t;
    if ('string' == typeof t) {
      var e = K_.exec(t);
      if (!e) return new Date(0 / 0);
      if (e[8]) {
        var i = +e[4] || 0;
        return (
          'Z' !== e[8].toUpperCase() && (i -= e[8].slice(0, 3)),
          new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, i, +(e[5] || 0), +e[6] || 0, +e[7] || 0))
        );
      }
      return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, +e[7] || 0);
    }
    return new Date(null == t ? 0 / 0 : Math.round(t));
  }
  function yo(t) {
    return Math.pow(10, _o(t));
  }
  function _o(t) {
    return Math.floor(Math.log(t) / Math.LN10);
  }
  function xo(t, e) {
    var i,
      n = _o(t),
      r = Math.pow(10, n),
      a = t / r;
    return (
      (i = e
        ? 1.5 > a
          ? 1
          : 2.5 > a
          ? 2
          : 4 > a
          ? 3
          : 7 > a
          ? 5
          : 10
        : 1 > a
        ? 1
        : 2 > a
        ? 2
        : 3 > a
        ? 3
        : 5 > a
        ? 5
        : 10),
      (t = i * r),
      n >= -20 ? +t.toFixed(0 > n ? -n : 0) : t
    );
  }
  function wo(t, e) {
    var i = (t.length - 1) * e + 1,
      n = Math.floor(i),
      r = +t[n - 1],
      a = i - n;
    return a ? r + a * (t[n] - r) : r;
  }
  function bo(t) {
    function e(t, i, n) {
      return (
        t.interval[n] < i.interval[n] ||
        (t.interval[n] === i.interval[n] && (t.close[n] - i.close[n] === (n ? -1 : 1) || (!n && e(t, i, 1))))
      );
    }
    t.sort(function (t, i) {
      return e(t, i, 0) ? -1 : 1;
    });
    for (var i = -1 / 0, n = 1, r = 0; r < t.length; ) {
      for (var a = t[r].interval, o = t[r].close, s = 0; 2 > s; s++)
        a[s] <= i && ((a[s] = i), (o[s] = s ? 1 : 1 - n)), (i = a[s]), (n = o[s]);
      a[0] === a[1] && o[0] * o[1] !== 1 ? t.splice(r, 1) : r++;
    }
    return t;
  }
  function So(t) {
    return t - parseFloat(t) >= 0;
  }
  function Mo(t) {
    return isNaN(t)
      ? '-'
      : ((t = (t + '').split('.')),
        t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + (t.length > 1 ? '.' + t[1] : ''));
  }
  function Io(t, e) {
    return (
      (t = (t || '').toLowerCase().replace(/-(.)/g, function (t, e) {
        return e.toUpperCase();
      })),
      e && t && (t = t.charAt(0).toUpperCase() + t.slice(1)),
      t
    );
  }
  function Co(t) {
    return null == t
      ? ''
      : (t + '').replace(Q_, function (t, e) {
          return tx[e];
        });
  }
  function To(t, e, i) {
    x(e) || (e = [e]);
    var n = e.length;
    if (!n) return '';
    for (var r = e[0].$vars || [], a = 0; a < r.length; a++) {
      var o = ex[a];
      t = t.replace(ix(o), ix(o, 0));
    }
    for (var s = 0; n > s; s++)
      for (var l = 0; l < r.length; l++) {
        var u = e[s][r[l]];
        t = t.replace(ix(ex[l], s), i ? Co(u) : u);
      }
    return t;
  }
  function Do(t, e, i) {
    return (
      f(e, function (e, n) {
        t = t.replace('{' + n + '}', i ? Co(e) : e);
      }),
      t
    );
  }
  function Ao(t, e) {
    t = b(t) ? { color: t, extraCssText: e } : t || {};
    var i = t.color,
      n = t.type,
      e = t.extraCssText,
      r = t.renderMode || 'html',
      a = t.markerId || 'X';
    return i
      ? 'html' === r
        ? 'subItem' === n
          ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' +
            Co(i) +
            ';' +
            (e || '') +
            '"></span>'
          : '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:' +
            Co(i) +
            ';' +
            (e || '') +
            '"></span>'
        : { renderMode: r, content: '{marker' + a + '|}  ', style: { color: i } }
      : '';
  }
  function ko(t, e) {
    return (t += ''), '0000'.substr(0, e - t.length) + t;
  }
  function Po(t, e, i) {
    ('week' === t || 'month' === t || 'quarter' === t || 'half-year' === t || 'year' === t) && (t = 'MM-dd\nyyyy');
    var n = vo(e),
      r = i ? 'UTC' : '',
      a = n['get' + r + 'FullYear'](),
      o = n['get' + r + 'Month']() + 1,
      s = n['get' + r + 'Date'](),
      l = n['get' + r + 'Hours'](),
      u = n['get' + r + 'Minutes'](),
      h = n['get' + r + 'Seconds'](),
      c = n['get' + r + 'Milliseconds']();
    return (t = t
      .replace('MM', ko(o, 2))
      .replace('M', o)
      .replace('yyyy', a)
      .replace('yy', a % 100)
      .replace('dd', ko(s, 2))
      .replace('d', s)
      .replace('hh', ko(l, 2))
      .replace('h', l)
      .replace('mm', ko(u, 2))
      .replace('m', u)
      .replace('ss', ko(h, 2))
      .replace('s', h)
      .replace('SSS', ko(c, 3)));
  }
  function Lo(t) {
    return t ? t.charAt(0).toUpperCase() + t.substr(1) : t;
  }
  function Oo(t) {
    return Gi(t.text, t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich, t.truncate);
  }
  function zo(t, e, i, n, r, a, o, s) {
    return Gi(t, e, i, n, r, s, a, o);
  }
  function Eo(t, e, i, n, r) {
    var a = 0,
      o = 0;
    null == n && (n = 1 / 0), null == r && (r = 1 / 0);
    var s = 0;
    e.eachChild(function (l, u) {
      var h,
        c,
        d = l.position,
        f = l.getBoundingRect(),
        p = e.childAt(u + 1),
        g = p && p.getBoundingRect();
      if ('horizontal' === t) {
        var m = f.width + (g ? -g.x + f.x : 0);
        (h = a + m),
          h > n || l.newline ? ((a = 0), (h = m), (o += s + i), (s = f.height)) : (s = Math.max(s, f.height));
      } else {
        var v = f.height + (g ? -g.y + f.y : 0);
        (c = o + v), c > r || l.newline ? ((a += s + i), (o = 0), (c = v), (s = f.width)) : (s = Math.max(s, f.width));
      }
      l.newline || ((d[0] = a), (d[1] = o), 'horizontal' === t ? (a = h + i) : (o = c + i));
    });
  }
  function Ro(t, e, i) {
    i = J_(i || 0);
    var n = e.width,
      r = e.height,
      a = so(t.left, n),
      o = so(t.top, r),
      s = so(t.right, n),
      l = so(t.bottom, r),
      u = so(t.width, n),
      h = so(t.height, r),
      c = i[2] + i[0],
      d = i[1] + i[3],
      f = t.aspect;
    switch (
      (isNaN(u) && (u = n - s - d - a),
      isNaN(h) && (h = r - l - c - o),
      null != f &&
        (isNaN(u) && isNaN(h) && (f > n / r ? (u = 0.8 * n) : (h = 0.8 * r)),
        isNaN(u) && (u = f * h),
        isNaN(h) && (h = u / f)),
      isNaN(a) && (a = n - s - u - d),
      isNaN(o) && (o = r - l - h - c),
      t.left || t.right)
    ) {
      case 'center':
        a = n / 2 - u / 2 - i[3];
        break;
      case 'right':
        a = n - u - d;
    }
    switch (t.top || t.bottom) {
      case 'middle':
      case 'center':
        o = r / 2 - h / 2 - i[0];
        break;
      case 'bottom':
        o = r - h - c;
    }
    (a = a || 0), (o = o || 0), isNaN(u) && (u = n - d - a - (s || 0)), isNaN(h) && (h = r - c - o - (l || 0));
    var p = new wi(a + i[3], o + i[0], u, h);
    return (p.margin = i), p;
  }
  function Bo(t, e, i) {
    function n(i, n) {
      var o = {},
        l = 0,
        u = {},
        h = 0,
        c = 2;
      if (
        (ax(i, function (e) {
          u[e] = t[e];
        }),
        ax(i, function (t) {
          r(e, t) && (o[t] = u[t] = e[t]), a(o, t) && l++, a(u, t) && h++;
        }),
        s[n])
      )
        return a(e, i[1]) ? (u[i[2]] = null) : a(e, i[2]) && (u[i[1]] = null), u;
      if (h !== c && l) {
        if (l >= c) return o;
        for (var d = 0; d < i.length; d++) {
          var f = i[d];
          if (!r(o, f) && r(t, f)) {
            o[f] = t[f];
            break;
          }
        }
        return o;
      }
      return u;
    }
    function r(t, e) {
      return t.hasOwnProperty(e);
    }
    function a(t, e) {
      return null != t[e] && 'auto' !== t[e];
    }
    function o(t, e, i) {
      ax(t, function (t) {
        e[t] = i[t];
      });
    }
    !S(i) && (i = {});
    var s = i.ignoreSize;
    !x(s) && (s = [s, s]);
    var l = n(sx[0], 0),
      u = n(sx[1], 1);
    o(sx[0], t, l), o(sx[1], t, u);
  }
  function No(t) {
    return Fo({}, t);
  }
  function Fo(t, e) {
    return (
      e &&
        t &&
        ax(ox, function (i) {
          e.hasOwnProperty(i) && (t[i] = e[i]);
        }),
      t
    );
  }
  function Go(t) {
    var e = [];
    return (
      f(cx.getClassesByMainType(t), function (t) {
        e = e.concat(t.prototype.dependencies || []);
      }),
      (e = p(e, function (t) {
        return er(t).main;
      })),
      'dataset' !== t && u(e, 'dataset') <= 0 && e.unshift('dataset'),
      e
    );
  }
  function Vo(t, e) {
    for (var i = t.length, n = 0; i > n; n++) if (t[n].length > e) return t[n];
    return t[i - 1];
  }
  function Ho(t) {
    var e = t.get('coordinateSystem'),
      i = { coordSysName: e, coordSysDims: [], axisMap: N(), categoryAxisMap: N() },
      n = mx[e];
    return n ? (n(t, i, i.axisMap, i.categoryAxisMap), i) : void 0;
  }
  function Wo(t) {
    return 'category' === t.get('type');
  }
  function Uo(t) {
    (this.fromDataset = t.fromDataset),
      (this.data = t.data || (t.sourceFormat === xx ? {} : [])),
      (this.sourceFormat = t.sourceFormat || bx),
      (this.seriesLayoutBy = t.seriesLayoutBy || Mx),
      (this.dimensionsDefine = t.dimensionsDefine),
      (this.encodeDefine = t.encodeDefine && N(t.encodeDefine)),
      (this.startIndex = t.startIndex || 0),
      (this.dimensionsDetectCount = t.dimensionsDetectCount);
  }
  function Xo(t) {
    var e = t.option.source,
      i = bx;
    if (I(e)) i = Sx;
    else if (x(e)) {
      0 === e.length && (i = yx);
      for (var n = 0, r = e.length; r > n; n++) {
        var a = e[n];
        if (null != a) {
          if (x(a)) {
            i = yx;
            break;
          }
          if (S(a)) {
            i = _x;
            break;
          }
        }
      }
    } else if (S(e)) {
      for (var o in e)
        if (e.hasOwnProperty(o) && d(e[o])) {
          i = xx;
          break;
        }
    } else if (null != e) throw new Error('Invalid data');
    Cx(t).sourceFormat = i;
  }
  function Yo(t) {
    return Cx(t).source;
  }
  function Zo(t) {
    Cx(t).datasetMap = N();
  }
  function jo(t) {
    var e = t.option,
      i = e.data,
      n = I(i) ? Sx : vx,
      r = !1,
      a = e.seriesLayoutBy,
      o = e.sourceHeader,
      s = e.dimensions,
      l = ts(t);
    if (l) {
      var u = l.option;
      (i = u.source),
        (n = Cx(l).sourceFormat),
        (r = !0),
        (a = a || u.seriesLayoutBy),
        null == o && (o = u.sourceHeader),
        (s = s || u.dimensions);
    }
    var h = qo(i, n, a, o, s),
      c = e.encode;
    !c && l && (c = Qo(t, l, i, n, a, h)),
      (Cx(t).source = new Uo({
        data: i,
        fromDataset: r,
        seriesLayoutBy: a,
        sourceFormat: n,
        dimensionsDefine: h.dimensionsDefine,
        startIndex: h.startIndex,
        dimensionsDetectCount: h.dimensionsDetectCount,
        encodeDefine: c,
      }));
  }
  function qo(t, e, i, n, r) {
    if (!t) return { dimensionsDefine: Ko(r) };
    var a, o, s;
    if (e === yx)
      'auto' === n || null == n
        ? $o(
            function (t) {
              null != t && '-' !== t && (b(t) ? null == o && (o = 1) : (o = 0));
            },
            i,
            t,
            10,
          )
        : (o = n ? 1 : 0),
        r ||
          1 !== o ||
          ((r = []),
          $o(
            function (t, e) {
              r[e] = null != t ? t : '';
            },
            i,
            t,
          )),
        (a = r ? r.length : i === Ix ? t.length : t[0] ? t[0].length : null);
    else if (e === _x) r || ((r = Jo(t)), (s = !0));
    else if (e === xx)
      r ||
        ((r = []),
        (s = !0),
        f(t, function (t, e) {
          r.push(e);
        }));
    else if (e === vx) {
      var l = Hn(t[0]);
      a = (x(l) && l.length) || 1;
    } else e === Sx && Cg && O(!!r, 'dimensions must be given if data is TypedArray.');
    var u;
    return (
      s &&
        f(r, function (t, e) {
          'name' === (S(t) ? t.name : t) && (u = e);
        }),
      { startIndex: o, dimensionsDefine: Ko(r), dimensionsDetectCount: a, potentialNameDimIndex: u }
    );
  }
  function Ko(t) {
    if (t) {
      var e = N();
      return p(t, function (t) {
        if (((t = o({}, S(t) ? t : { name: t })), null == t.name)) return t;
        (t.name += ''), null == t.displayName && (t.displayName = t.name);
        var i = e.get(t.name);
        return i ? (t.name += '-' + i.count++) : e.set(t.name, { count: 1 }), t;
      });
    }
  }
  function $o(t, e, i, n) {
    if ((null == n && (n = 1 / 0), e === Ix)) for (var r = 0; r < i.length && n > r; r++) t(i[r] ? i[r][0] : null, r);
    else for (var a = i[0] || [], r = 0; r < a.length && n > r; r++) t(a[r], r);
  }
  function Jo(t) {
    for (var e, i = 0; i < t.length && !(e = t[i++]); );
    if (e) {
      var n = [];
      return (
        f(e, function (t, e) {
          n.push(e);
        }),
        n
      );
    }
  }
  function Qo(t, e, i, n, r, a) {
    var o = Ho(t),
      s = {},
      l = [],
      u = [],
      h = t.subType,
      c = N(['pie', 'map', 'funnel']),
      d = N(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']);
    if (o && null != d.get(h)) {
      var p = t.ecModel,
        g = Cx(p).datasetMap,
        m = e.uid + '_' + r,
        v = g.get(m) || g.set(m, { categoryWayDim: 1, valueWayDim: 0 });
      f(o.coordSysDims, function (t) {
        if (null == o.firstCategoryDimIndex) {
          var e = v.valueWayDim++;
          (s[t] = e), u.push(e);
        } else if (o.categoryAxisMap.get(t)) (s[t] = 0), l.push(0);
        else {
          var e = v.categoryWayDim++;
          (s[t] = e), u.push(e);
        }
      });
    } else if (null != c.get(h)) {
      for (var y, _ = 0; 5 > _ && null == y; _++) is(i, n, r, a.dimensionsDefine, a.startIndex, _) || (y = _);
      if (null != y) {
        s.value = y;
        var x = a.potentialNameDimIndex || Math.max(y - 1, 0);
        u.push(x), l.push(x);
      }
    }
    return l.length && (s.itemName = l), u.length && (s.seriesName = u), s;
  }
  function ts(t) {
    var e = t.option,
      i = e.data;
    return i ? void 0 : t.ecModel.getComponent('dataset', e.datasetIndex || 0);
  }
  function es(t, e) {
    return is(t.data, t.sourceFormat, t.seriesLayoutBy, t.dimensionsDefine, t.startIndex, e);
  }
  function is(t, e, i, n, r, a) {
    function o(t) {
      return null != t && isFinite(t) && '' !== t ? !1 : b(t) && '-' !== t ? !0 : void 0;
    }
    var s,
      l = 5;
    if (I(t)) return !1;
    var u;
    if ((n && ((u = n[a]), (u = S(u) ? u.name : u)), e === yx))
      if (i === Ix) {
        for (var h = t[a], c = 0; c < (h || []).length && l > c; c++) if (null != (s = o(h[r + c]))) return s;
      } else
        for (var c = 0; c < t.length && l > c; c++) {
          var d = t[r + c];
          if (d && null != (s = o(d[a]))) return s;
        }
    else if (e === _x) {
      if (!u) return;
      for (var c = 0; c < t.length && l > c; c++) {
        var f = t[c];
        if (f && null != (s = o(f[u]))) return s;
      }
    } else if (e === xx) {
      if (!u) return;
      var h = t[u];
      if (!h || I(h)) return !1;
      for (var c = 0; c < h.length && l > c; c++) if (null != (s = o(h[c]))) return s;
    } else if (e === vx)
      for (var c = 0; c < t.length && l > c; c++) {
        var f = t[c],
          p = Hn(f);
        if (!x(p)) return !1;
        if (null != (s = o(p[a]))) return s;
      }
    return !1;
  }
  function ns(t, e) {
    if (e) {
      var i = e.seiresIndex,
        n = e.seriesId,
        r = e.seriesName;
      return (null != i && t.componentIndex !== i) || (null != n && t.id !== n) || (null != r && t.name !== r);
    }
  }
  function rs(t, e) {
    var i = t.color && !t.colorLayer;
    f(e, function (e, a) {
      ('colorLayer' === a && i) ||
        cx.hasClass(a) ||
        ('object' == typeof e ? (t[a] = t[a] ? r(t[a], e, !1) : n(e)) : null == t[a] && (t[a] = e));
    });
  }
  function as(t) {
    (t = t),
      (this.option = {}),
      (this.option[Tx] = 1),
      (this._componentsMap = N({ series: [] })),
      this._seriesIndices,
      this._seriesIndicesMap,
      rs(t, this._theme.option),
      r(t, fx, !1),
      this.mergeOption(t);
  }
  function os(t, e) {
    x(e) || (e = e ? [e] : []);
    var i = {};
    return (
      f(e, function (e) {
        i[e] = (t.get(e) || []).slice();
      }),
      i
    );
  }
  function ss(t, e, i) {
    var n = e.type ? e.type : i ? i.subType : cx.determineSubType(t, e);
    return n;
  }
  function ls(t, e) {
    t._seriesIndicesMap = N(
      (t._seriesIndices =
        p(e, function (t) {
          return t.componentIndex;
        }) || []),
    );
  }
  function us(t, e) {
    return e.hasOwnProperty('subType')
      ? m(t, function (t) {
          return t.subType === e.subType;
        })
      : t;
  }
  function hs(t) {
    if (Cg && !t._seriesIndices) throw new Error('Option should contains series.');
  }
  function cs(t) {
    f(
      Ax,
      function (e) {
        this[e] = y(t[e], t);
      },
      this,
    );
  }
  function ds() {
    this._coordinateSystems = [];
  }
  function fs(t) {
    (this._api = t),
      (this._timelineOptions = []),
      (this._mediaList = []),
      this._mediaDefault,
      (this._currentMediaIndices = []),
      this._optionBackup,
      this._newBaseOption;
  }
  function ps(t, e, i) {
    var n,
      r,
      a = [],
      o = [],
      s = t.timeline;
    if (
      (t.baseOption && (r = t.baseOption),
      (s || t.options) && ((r = r || {}), (a = (t.options || []).slice())),
      t.media)
    ) {
      r = r || {};
      var l = t.media;
      Px(l, function (t) {
        t && t.option && (t.query ? o.push(t) : n || (n = t));
      });
    }
    return (
      r || (r = t),
      r.timeline || (r.timeline = s),
      Px(
        [r].concat(a).concat(
          p(o, function (t) {
            return t.option;
          }),
        ),
        function (t) {
          Px(e, function (e) {
            e(t, i);
          });
        },
      ),
      { baseOption: r, timelineOptions: a, mediaDefault: n, mediaList: o }
    );
  }
  function gs(t, e, i) {
    var n = { width: e, height: i, aspectratio: e / i },
      r = !0;
    return (
      f(t, function (t, e) {
        var i = e.match(Ex);
        if (i && i[1] && i[2]) {
          var a = i[1],
            o = i[2].toLowerCase();
          ms(n[o], t, a) || (r = !1);
        }
      }),
      r
    );
  }
  function ms(t, e, i) {
    return 'min' === i ? t >= e : 'max' === i ? e >= t : t === e;
  }
  function vs(t, e) {
    return t.join(',') === e.join(',');
  }
  function ys(t, e) {
    (e = e || {}),
      Px(e, function (e, i) {
        if (null != e) {
          var n = t[i];
          if (cx.hasClass(i)) {
            (e = Gn(e)), (n = Gn(n));
            var r = Un(n, e);
            t[i] = Ox(r, function (t) {
              return t.option && t.exist ? zx(t.exist, t.option, !0) : t.exist || t.option;
            });
          } else t[i] = zx(n, e, !0);
        }
      });
  }
  function _s(t) {
    var e = t && t.itemStyle;
    if (e)
      for (var i = 0, n = Nx.length; n > i; i++) {
        var a = Nx[i],
          o = e.normal,
          s = e.emphasis;
        o && o[a] && ((t[a] = t[a] || {}), t[a].normal ? r(t[a].normal, o[a]) : (t[a].normal = o[a]), (o[a] = null)),
          s &&
            s[a] &&
            ((t[a] = t[a] || {}), t[a].emphasis ? r(t[a].emphasis, s[a]) : (t[a].emphasis = s[a]), (s[a] = null));
      }
  }
  function xs(t, e, i) {
    if (t && t[e] && (t[e].normal || t[e].emphasis)) {
      var n = t[e].normal,
        r = t[e].emphasis;
      n && (i ? ((t[e].normal = t[e].emphasis = null), s(t[e], n)) : (t[e] = n)),
        r && ((t.emphasis = t.emphasis || {}), (t.emphasis[e] = r));
    }
  }
  function ws(t) {
    xs(t, 'itemStyle'),
      xs(t, 'lineStyle'),
      xs(t, 'areaStyle'),
      xs(t, 'label'),
      xs(t, 'labelLine'),
      xs(t, 'upperLabel'),
      xs(t, 'edgeLabel');
  }
  function bs(t, e) {
    var i = Bx(t) && t[e],
      n = Bx(i) && i.textStyle;
    if (n)
      for (var r = 0, a = Xv.length; a > r; r++) {
        var e = Xv[r];
        n.hasOwnProperty(e) && (i[e] = n[e]);
      }
  }
  function Ss(t) {
    t && (ws(t), bs(t, 'label'), t.emphasis && bs(t.emphasis, 'label'));
  }
  function Ms(t) {
    if (Bx(t)) {
      _s(t),
        ws(t),
        bs(t, 'label'),
        bs(t, 'upperLabel'),
        bs(t, 'edgeLabel'),
        t.emphasis && (bs(t.emphasis, 'label'), bs(t.emphasis, 'upperLabel'), bs(t.emphasis, 'edgeLabel'));
      var e = t.markPoint;
      e && (_s(e), Ss(e));
      var i = t.markLine;
      i && (_s(i), Ss(i));
      var n = t.markArea;
      n && Ss(n);
      var r = t.data;
      if ('graph' === t.type) {
        r = r || t.nodes;
        var a = t.links || t.edges;
        if (a && !I(a)) for (var o = 0; o < a.length; o++) Ss(a[o]);
        f(t.categories, function (t) {
          ws(t);
        });
      }
      if (r && !I(r)) for (var o = 0; o < r.length; o++) Ss(r[o]);
      var e = t.markPoint;
      if (e && e.data) for (var s = e.data, o = 0; o < s.length; o++) Ss(s[o]);
      var i = t.markLine;
      if (i && i.data) for (var l = i.data, o = 0; o < l.length; o++) x(l[o]) ? (Ss(l[o][0]), Ss(l[o][1])) : Ss(l[o]);
      'gauge' === t.type
        ? (bs(t, 'axisLabel'), bs(t, 'title'), bs(t, 'detail'))
        : 'treemap' === t.type
        ? (xs(t.breadcrumb, 'itemStyle'),
          f(t.levels, function (t) {
            ws(t);
          }))
        : 'tree' === t.type && ws(t.leaves);
    }
  }
  function Is(t) {
    return x(t) ? t : t ? [t] : [];
  }
  function Cs(t) {
    return (x(t) ? t[0] : t) || {};
  }
  function Ts(t, e) {
    e = e.split(',');
    for (var i = t, n = 0; n < e.length && ((i = i && i[e[n]]), null != i); n++);
    return i;
  }
  function Ds(t, e, i, n) {
    e = e.split(',');
    for (var r, a = t, o = 0; o < e.length - 1; o++) (r = e[o]), null == a[r] && (a[r] = {}), (a = a[r]);
    (n || null == a[e[o]]) && (a[e[o]] = i);
  }
  function As(t) {
    f(Gx, function (e) {
      e[0] in t && !(e[1] in t) && (t[e[1]] = t[e[0]]);
    });
  }
  function ks(t) {
    f(t, function (e, i) {
      var n = [],
        r = [0 / 0, 0 / 0],
        a = [e.stackResultDimension, e.stackedOverDimension],
        o = e.data,
        s = e.isStackedByIndex,
        l = o.map(a, function (a, l, u) {
          var h = o.get(e.stackedDimension, u);
          if (isNaN(h)) return r;
          var c, d;
          s ? (d = o.getRawIndex(u)) : (c = o.get(e.stackedByDimension, u));
          for (var f = 0 / 0, p = i - 1; p >= 0; p--) {
            var g = t[p];
            if ((s || (d = g.data.rawIndexOf(g.stackedByDimension, c)), d >= 0)) {
              var m = g.data.getByRawIndex(g.stackResultDimension, d);
              if ((h >= 0 && m > 0) || (0 >= h && 0 > m)) {
                (h += m), (f = m);
                break;
              }
            }
          }
          return (n[0] = h), (n[1] = f), n;
        });
      o.hostModel.setData(l), (e.data = l);
    });
  }
  function Ps(t, e) {
    Uo.isInstance(t) || (t = Uo.seriesDataToSource(t)), (this._source = t);
    var i = (this._data = t.data),
      n = t.sourceFormat;
    if (n === Sx) {
      if (Cg && null == e) throw new Error('Typed array data must specify dimension size');
      (this._offset = 0), (this._dimSize = e), (this._data = i);
    }
    var r = Xx[n === yx ? n + '_' + t.seriesLayoutBy : n];
    Cg && O(r, 'Invalide sourceFormat: ' + n), o(this, r);
  }
  function Ls() {
    return this._data.length;
  }
  function Os(t) {
    return this._data[t];
  }
  function zs(t) {
    for (var e = 0; e < t.length; e++) this._data.push(t[e]);
  }
  function Es(t, e, i) {
    return null != i ? t[i] : t;
  }
  function Rs(t, e, i, n) {
    return Bs(t[n], this._dimensionInfos[e]);
  }
  function Bs(t, e) {
    var i = e && e.type;
    if ('ordinal' === i) {
      var n = e && e.ordinalMeta;
      return n ? n.parseAndCollect(t) : t;
    }
    return (
      'time' === i && 'number' != typeof t && null != t && '-' !== t && (t = +vo(t)), null == t || '' === t ? 0 / 0 : +t
    );
  }
  function Ns(t, e, i) {
    if (t) {
      var n = t.getRawDataItem(e);
      if (null != n) {
        var r,
          a,
          o = t.getProvider().getSource().sourceFormat,
          s = t.getDimensionInfo(i);
        return s && ((r = s.name), (a = s.index)), Yx[o](n, e, a, r);
      }
    }
  }
  function Fs(t, e, i) {
    if (t) {
      var n = t.getProvider().getSource().sourceFormat;
      if (n === vx || n === _x) {
        var r = t.getRawDataItem(e);
        return n !== vx || S(r) || (r = null), r ? r[i] : void 0;
      }
    }
  }
  function Gs(t) {
    return new Vs(t);
  }
  function Vs(t) {
    (t = t || {}),
      (this._reset = t.reset),
      (this._plan = t.plan),
      (this._count = t.count),
      (this._onDirty = t.onDirty),
      (this._dirty = !0),
      this.context;
  }
  function Hs(t, e, i, n, r, a) {
    $x.reset(i, n, r, a),
      (t._callingProgress = e),
      t._callingProgress({ start: i, end: n, count: n - i, next: $x.next }, t.context);
  }
  function Ws(t, e) {
    (t._dueIndex = t._outputDueEnd = t._dueEnd = 0), (t._settedOutputEnd = null);
    var i, n;
    !e &&
      t._reset &&
      ((i = t._reset(t.context)),
      i && i.progress && ((n = i.forceFirstProgress), (i = i.progress)),
      x(i) && !i.length && (i = null)),
      (t._progress = i),
      (t._modBy = t._modDataCount = null);
    var r = t._downstream;
    return r && r.dirty(), n;
  }
  function Us(t) {
    var e = t.name;
    Yn(t) || (t.name = Xs(t) || e);
  }
  function Xs(t) {
    var e = t.getRawData(),
      i = e.mapDimension('seriesName', !0),
      n = [];
    return (
      f(i, function (t) {
        var i = e.getDimensionInfo(t);
        i.displayName && n.push(i.displayName);
      }),
      n.join(' ')
    );
  }
  function Ys(t) {
    return t.model.getRawData().count();
  }
  function Zs(t) {
    var e = t.model;
    return e.setData(e.getRawData().cloneShallow()), js;
  }
  function js(t, e) {
    t.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
  }
  function qs(t, e) {
    f(t.CHANGABLE_METHODS, function (i) {
      t.wrapMethod(i, _(Ks, e));
    });
  }
  function Ks(t) {
    var e = $s(t);
    e && e.setOutputEnd(this.count());
  }
  function $s(t) {
    var e = (t.ecModel || {}).scheduler,
      i = e && e.getPipeline(t.uid);
    if (i) {
      var n = i.currentTask;
      if (n) {
        var r = n.agentStubMap;
        r && (n = r.get(t.uid));
      }
      return n;
    }
  }
  function Js() {
    (this.group = new Wm()),
      (this.uid = io('viewChart')),
      (this.renderTask = Gs({ plan: el, reset: il })),
      (this.renderTask.context = { view: this });
  }
  function Qs(t, e, i) {
    if (t && (t.trigger(e, i), t.isGroup && !Ca(t)))
      for (var n = 0, r = t.childCount(); r > n; n++) Qs(t.childAt(n), e, i);
  }
  function tl(t, e, i) {
    var n = jn(t, e),
      r = e && null != e.highlightKey ? Ta(e.highlightKey) : null;
    null != n
      ? f(Gn(n), function (e) {
          Qs(t.getItemGraphicEl(e), i, r);
        })
      : t.eachItemGraphicEl(function (t) {
          Qs(t, i, r);
        });
  }
  function el(t) {
    return rw(t.model);
  }
  function il(t) {
    var e = t.model,
      i = t.ecModel,
      n = t.api,
      r = t.payload,
      a = e.pipelineContext.progressiveRender,
      o = t.view,
      s = r && nw(r).updateMethod,
      l = a ? 'incrementalPrepareRender' : s && o[s] ? s : 'render';
    return 'render' !== l && o[l](e, i, n, r), ow[l];
  }
  function nl(t, e, i) {
    function n() {
      (h = new Date().getTime()), (c = null), t.apply(o, s || []);
    }
    var r,
      a,
      o,
      s,
      l,
      u = 0,
      h = 0,
      c = null;
    e = e || 0;
    var d = function () {
      (r = new Date().getTime()), (o = this), (s = arguments);
      var t = l || e,
        d = l || i;
      (l = null),
        (a = r - (d ? u : h) - t),
        clearTimeout(c),
        d ? (c = setTimeout(n, t)) : a >= 0 ? n() : (c = setTimeout(n, -a)),
        (u = r);
    };
    return (
      (d.clear = function () {
        c && (clearTimeout(c), (c = null));
      }),
      (d.debounceNextCall = function (t) {
        l = t;
      }),
      d
    );
  }
  function rl(t, e, i, n) {
    var r = t[e];
    if (r) {
      var a = r[sw] || r,
        o = r[uw],
        s = r[lw];
      if (s !== i || o !== n) {
        if (null == i || !n) return (t[e] = a);
        (r = t[e] = nl(a, i, 'debounce' === n)), (r[sw] = a), (r[uw] = n), (r[lw] = i);
      }
      return r;
    }
  }
  function al(t, e, i, n) {
    (this.ecInstance = t), (this.api = e), this.unfinished;
    var i = (this._dataProcessorHandlers = i.slice()),
      n = (this._visualHandlers = n.slice());
    (this._allHandlers = i.concat(n)), (this._stageTaskMap = N());
  }
  function ol(t, e, i, n, r) {
    function a(t, e) {
      return t.setDirty && (!t.dirtyMap || t.dirtyMap.get(e.__pipeline.id));
    }
    r = r || {};
    var o;
    f(e, function (e) {
      if (!r.visualType || r.visualType === e.visualType) {
        var s = t._stageTaskMap.get(e.uid),
          l = s.seriesTaskMap,
          u = s.overallTask;
        if (u) {
          var h,
            c = u.agentStubMap;
          c.each(function (t) {
            a(r, t) && (t.dirty(), (h = !0));
          }),
            h && u.dirty(),
            mw(u, n);
          var d = t.getPerformArgs(u, r.block);
          c.each(function (t) {
            t.perform(d);
          }),
            (o |= u.perform(d));
        } else
          l &&
            l.each(function (s) {
              a(r, s) && s.dirty();
              var l = t.getPerformArgs(s, r.block);
              (l.skip = !e.performRawSeries && i.isSeriesFiltered(s.context.model)), mw(s, n), (o |= s.perform(l));
            });
      }
    }),
      (t.unfinished |= o);
  }
  function sl(t, e, i, n, r) {
    function a(i) {
      var a = i.uid,
        s = o.get(a) || o.set(a, Gs({ plan: fl, reset: pl, count: ml }));
      (s.context = {
        model: i,
        ecModel: n,
        api: r,
        useClearVisual: e.isVisual && !e.isLayout,
        plan: e.plan,
        reset: e.reset,
        scheduler: t,
      }),
        vl(t, i, s);
    }
    var o = i.seriesTaskMap || (i.seriesTaskMap = N()),
      s = e.seriesType,
      l = e.getTargetSeries;
    e.createOnAllSeries ? n.eachRawSeries(a) : s ? n.eachRawSeriesByType(s, a) : l && l(n, r).each(a);
    var u = t._pipelineMap;
    o.each(function (t, e) {
      u.get(e) || (t.dispose(), o.removeKey(e));
    });
  }
  function ll(t, e, i, n, r) {
    function a(e) {
      var i = e.uid,
        n = s.get(i);
      n || ((n = s.set(i, Gs({ reset: hl, onDirty: dl }))), o.dirty()),
        (n.context = { model: e, overallProgress: h, modifyOutputEnd: c }),
        (n.agent = o),
        (n.__block = h),
        vl(t, e, n);
    }
    var o = (i.overallTask = i.overallTask || Gs({ reset: ul }));
    o.context = { ecModel: n, api: r, overallReset: e.overallReset, scheduler: t };
    var s = (o.agentStubMap = o.agentStubMap || N()),
      l = e.seriesType,
      u = e.getTargetSeries,
      h = !0,
      c = e.modifyOutputEnd;
    l ? n.eachRawSeriesByType(l, a) : u ? u(n, r).each(a) : ((h = !1), f(n.getSeries(), a));
    var d = t._pipelineMap;
    s.each(function (t, e) {
      d.get(e) || (t.dispose(), o.dirty(), s.removeKey(e));
    });
  }
  function ul(t) {
    t.overallReset(t.ecModel, t.api, t.payload);
  }
  function hl(t) {
    return t.overallProgress && cl;
  }
  function cl() {
    this.agent.dirty(), this.getDownstream().dirty();
  }
  function dl() {
    this.agent && this.agent.dirty();
  }
  function fl(t) {
    return t.plan && t.plan(t.model, t.ecModel, t.api, t.payload);
  }
  function pl(t) {
    t.useClearVisual && t.data.clearAllVisual();
    var e = (t.resetDefines = Gn(t.reset(t.model, t.ecModel, t.api, t.payload)));
    return e.length > 1
      ? p(e, function (t, e) {
          return gl(e);
        })
      : vw;
  }
  function gl(t) {
    return function (e, i) {
      var n = i.data,
        r = i.resetDefines[t];
      if (r && r.dataEach) for (var a = e.start; a < e.end; a++) r.dataEach(n, a);
      else r && r.progress && r.progress(e, n);
    };
  }
  function ml(t) {
    return t.data.count();
  }
  function vl(t, e, i) {
    var n = e.uid,
      r = t._pipelineMap.get(n);
    !r.head && (r.head = i),
      r.tail && r.tail.pipe(i),
      (r.tail = i),
      (i.__idxInPipeline = r.count++),
      (i.__pipeline = r);
  }
  function yl(t) {
    yw = null;
    try {
      t(_w, xw);
    } catch (e) {}
    return yw;
  }
  function _l(t, e) {
    for (var i in e.prototype) t[i] = G;
  }
  function xl(t) {
    if (b(t)) {
      var e = new DOMParser();
      t = e.parseFromString(t, 'text/xml');
    }
    for (9 === t.nodeType && (t = t.firstChild); 'svg' !== t.nodeName.toLowerCase() || 1 !== t.nodeType; )
      t = t.nextSibling;
    return t;
  }
  function wl() {
    (this._defs = {}), (this._root = null), (this._isDefine = !1), (this._isText = !1);
  }
  function bl(t, e) {
    for (var i = t.firstChild; i; ) {
      if (1 === i.nodeType) {
        var n = i.getAttribute('offset');
        n = n.indexOf('%') > 0 ? parseInt(n, 10) / 100 : n ? parseFloat(n) : 0;
        var r = i.getAttribute('stop-color') || '#000000';
        e.addColorStop(n, r);
      }
      i = i.nextSibling;
    }
  }
  function Sl(t, e) {
    t &&
      t.__inheritedStyle &&
      (e.__inheritedStyle || (e.__inheritedStyle = {}), s(e.__inheritedStyle, t.__inheritedStyle));
  }
  function Ml(t) {
    for (var e = z(t).split(Dw), i = [], n = 0; n < e.length; n += 2) {
      var r = parseFloat(e[n]),
        a = parseFloat(e[n + 1]);
      i.push([r, a]);
    }
    return i;
  }
  function Il(t, e, i, n) {
    var r = e.__inheritedStyle || {},
      a = 'text' === e.type;
    if (1 === t.nodeType && (Tl(t, e), o(r, Dl(t)), !n))
      for (var s in Pw)
        if (Pw.hasOwnProperty(s)) {
          var l = t.getAttribute(s);
          null != l && (r[Pw[s]] = l);
        }
    var u = a ? 'textFill' : 'fill',
      h = a ? 'textStroke' : 'stroke';
    e.style = e.style || new Jm();
    var c = e.style;
    null != r.fill && c.set(u, Cl(r.fill, i)),
      null != r.stroke && c.set(h, Cl(r.stroke, i)),
      f(['lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'], function (t) {
        var e = 'lineWidth' === t && a ? 'textStrokeWidth' : t;
        null != r[t] && c.set(e, parseFloat(r[t]));
      }),
      (r.textBaseline && 'auto' !== r.textBaseline) || (r.textBaseline = 'alphabetic'),
      'alphabetic' === r.textBaseline && (r.textBaseline = 'bottom'),
      'start' === r.textAlign && (r.textAlign = 'left'),
      'end' === r.textAlign && (r.textAlign = 'right'),
      f(
        ['lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign', 'textBaseline'],
        function (t) {
          null != r[t] && c.set(t, r[t]);
        },
      ),
      r.lineDash && (e.style.lineDash = z(r.lineDash).split(Dw)),
      c[h] && 'none' !== c[h] && (e[h] = !0),
      (e.__inheritedStyle = r);
  }
  function Cl(t, e) {
    var i = e && t && t.match(Lw);
    if (i) {
      var n = z(i[1]),
        r = e[n];
      return r;
    }
    return t;
  }
  function Tl(t, e) {
    var i = t.getAttribute('transform');
    if (i) {
      i = i.replace(/,/g, ' ');
      var n = null,
        r = [];
      i.replace(Ow, function (t, e, i) {
        r.push(e, i);
      });
      for (var a = r.length - 1; a > 0; a -= 2) {
        var o = r[a],
          s = r[a - 1];
        switch (((n = n || De()), s)) {
          case 'translate':
            (o = z(o).split(Dw)), Le(n, n, [parseFloat(o[0]), parseFloat(o[1] || 0)]);
            break;
          case 'scale':
            (o = z(o).split(Dw)), ze(n, n, [parseFloat(o[0]), parseFloat(o[1] || o[0])]);
            break;
          case 'rotate':
            (o = z(o).split(Dw)), Oe(n, n, parseFloat(o[0]));
            break;
          case 'skew':
            (o = z(o).split(Dw)), console.warn('Skew transform is not supported yet');
            break;
          case 'matrix':
            var o = z(o).split(Dw);
            (n[0] = parseFloat(o[0])),
              (n[1] = parseFloat(o[1])),
              (n[2] = parseFloat(o[2])),
              (n[3] = parseFloat(o[3])),
              (n[4] = parseFloat(o[4])),
              (n[5] = parseFloat(o[5]));
        }
      }
      e.setLocalTransform(n);
    }
  }
  function Dl(t) {
    var e = t.getAttribute('style'),
      i = {};
    if (!e) return i;
    var n = {};
    zw.lastIndex = 0;
    for (var r; null != (r = zw.exec(e)); ) n[r[1]] = r[2];
    for (var a in Pw) Pw.hasOwnProperty(a) && null != n[a] && (i[Pw[a]] = n[a]);
    return i;
  }
  function Al(t, e, i) {
    var n = e / t.width,
      r = i / t.height,
      a = Math.min(n, r),
      o = [a, a],
      s = [-(t.x + t.width / 2) * a + e / 2, -(t.y + t.height / 2) * a + i / 2];
    return { scale: o, position: s };
  }
  function kl(t, e) {
    var i = new wl();
    return i.parse(t, e);
  }
  function Pl(t, e) {
    return function (i, n, r) {
      return !e && this._disposed
        ? void jl(this.id)
        : ((i = i && i.toLowerCase()), void Jg.prototype[t].call(this, i, n, r));
    };
  }
  function Ll() {
    Jg.call(this);
  }
  function Ol(t, e, i) {
    function r(t, e) {
      return t.__prio - e.__prio;
    }
    (i = i || {}), 'string' == typeof e && (e = mb[e]), this.id, this.group, (this._dom = t);
    var a = 'canvas';
    Cg && (a = ('undefined' == typeof window ? global : window).__ECHARTS__DEFAULT__RENDERER__ || a);
    var o = (this._zr = En(t, {
      renderer: i.renderer || a,
      devicePixelRatio: i.devicePixelRatio,
      width: i.width,
      height: i.height,
    }));
    this._throttledZrFlush = nl(y(o.flush, o), 17);
    var e = n(e);
    e && Hx(e, !0),
      (this._theme = e),
      (this._chartsViews = []),
      (this._chartsMap = {}),
      (this._componentsViews = []),
      (this._componentsMap = {}),
      (this._coordSysMgr = new ds());
    var s = (this._api = Jl(this));
    Ai(gb, r),
      Ai(db, r),
      (this._scheduler = new al(this, s, db, gb)),
      Jg.call(this, (this._ecEventProcessor = new Ql())),
      (this._messageCenter = new Ll()),
      this._initEvents(),
      (this.resize = y(this.resize, this)),
      (this._pendingActions = []),
      o.animation.on('frame', this._onframe, this),
      Vl(o, this),
      E(this);
  }
  function zl(t, e, i) {
    if (this._disposed) return void jl(this.id);
    var n,
      r = this._model,
      a = this._coordSysMgr.getCoordinateSystems();
    e = Kn(r, e);
    for (var o = 0; o < a.length; o++) {
      var s = a[o];
      if (s[t] && null != (n = s[t](r, e, i))) return n;
    }
    Cg && console.warn('No coordinate system that supports ' + t + ' found by the given finder.');
  }
  function El(t) {
    var e = t._model,
      i = t._scheduler;
    i.restorePipelines(e), i.prepareStageTasks(), Hl(t, 'component', e, i), Hl(t, 'chart', e, i), i.plan();
  }
  function Rl(t, e, i, n, r) {
    function a(n) {
      n && n.__alive && n[e] && n[e](n.__model, o, t._api, i);
    }
    var o = t._model;
    if (!n) return void Fw(t._componentsViews.concat(t._chartsViews), a);
    var s = {};
    (s[n + 'Id'] = i[n + 'Id']), (s[n + 'Index'] = i[n + 'Index']), (s[n + 'Name'] = i[n + 'Name']);
    var l = { mainType: n, query: s };
    r && (l.subType = r);
    var u = i.excludeSeriesId;
    null != u && (u = N(Gn(u))),
      o &&
        o.eachComponent(
          l,
          function (e) {
            (u && null != u.get(e.id)) || a(t['series' === n ? '_chartsMap' : '_componentsMap'][e.__viewId]);
          },
          t,
        );
  }
  function Bl(t, e) {
    var i = t._chartsMap,
      n = t._scheduler;
    e.eachSeries(function (t) {
      n.updateStreamModes(t, i[t.__viewId]);
    });
  }
  function Nl(t, e) {
    var i = t.type,
      n = t.escapeConnect,
      r = hb[i],
      a = r.actionInfo,
      l = (a.update || 'update').split(':'),
      u = l.pop();
    (l = null != l[0] && Hw(l[0])), (this[rb] = !0);
    var h = [t],
      c = !1;
    t.batch &&
      ((c = !0),
      (h = p(t.batch, function (e) {
        return (e = s(o({}, e), t)), (e.batch = null), e;
      })));
    var d,
      f = [],
      g = 'highlight' === i || 'downplay' === i;
    Fw(
      h,
      function (t) {
        (d = r.action(t, this._model, this._api)),
          (d = d || o({}, t)),
          (d.type = a.event || d.type),
          f.push(d),
          g ? Rl(this, u, t, 'series') : l && Rl(this, u, t, l.main, l.sub);
      },
      this,
    ),
      'none' === u || g || l || (this[ab] ? (El(this), lb.update.call(this, t), (this[ab] = !1)) : lb[u].call(this, t)),
      (d = c ? { type: a.event || i, escapeConnect: n, batch: f } : f[0]),
      (this[rb] = !1),
      !e && this._messageCenter.trigger(d.type, d);
  }
  function Fl(t) {
    for (var e = this._pendingActions; e.length; ) {
      var i = e.shift();
      Nl.call(this, i, t);
    }
  }
  function Gl(t) {
    !t && this.trigger('updated');
  }
  function Vl(t, e) {
    t.on('rendered', function () {
      e.trigger('rendered'),
        !t.animation.isFinished() ||
          e[ab] ||
          e._scheduler.unfinished ||
          e._pendingActions.length ||
          e.trigger('finished');
    });
  }
  function Hl(t, e, i, n) {
    function r(t) {
      var e = '_ec_' + t.id + '_' + t.type,
        r = s[e];
      if (!r) {
        var h = Hw(t.type),
          c = a ? tw.getClass(h.main, h.sub) : Js.getClass(h.sub);
        Cg && Nw(c, h.sub + ' does not exist.'), (r = new c()), r.init(i, u), (s[e] = r), o.push(r), l.add(r.group);
      }
      (t.__viewId = r.__id = e),
        (r.__alive = !0),
        (r.__model = t),
        (r.group.__ecComponentInfo = { mainType: t.mainType, index: t.componentIndex }),
        !a && n.prepareView(r, t, i, u);
    }
    for (
      var a = 'component' === e,
        o = a ? t._componentsViews : t._chartsViews,
        s = a ? t._componentsMap : t._chartsMap,
        l = t._zr,
        u = t._api,
        h = 0;
      h < o.length;
      h++
    )
      o[h].__alive = !1;
    a
      ? i.eachComponent(function (t, e) {
          'series' !== t && r(e);
        })
      : i.eachSeries(r);
    for (var h = 0; h < o.length; ) {
      var c = o[h];
      c.__alive
        ? h++
        : (!a && c.renderTask.dispose(),
          l.remove(c.group),
          c.dispose(i, u),
          o.splice(h, 1),
          delete s[c.__id],
          (c.__id = c.group.__ecComponentInfo = null));
    }
  }
  function Wl(t) {
    t.clearColorPalette(),
      t.eachSeries(function (t) {
        t.clearColorPalette();
      });
  }
  function Ul(t, e, i, n) {
    Xl(t, e, i, n),
      Fw(t._chartsViews, function (t) {
        t.__alive = !1;
      }),
      Yl(t, e, i, n),
      Fw(t._chartsViews, function (t) {
        t.__alive || t.remove(e, i);
      });
  }
  function Xl(t, e, i, n, r) {
    Fw(r || t._componentsViews, function (t) {
      var r = t.__model;
      t.render(r, e, i, n), $l(r, t);
    });
  }
  function Yl(t, e, i, n, r) {
    var a,
      o = t._scheduler;
    e.eachSeries(function (e) {
      var i = t._chartsMap[e.__viewId];
      i.__alive = !0;
      var s = i.renderTask;
      o.updatePayload(s, n),
        r && r.get(e.uid) && s.dirty(),
        (a |= s.perform(o.getPerformArgs(s))),
        (i.group.silent = !!e.get('silent')),
        $l(e, i),
        Kl(e, i);
    }),
      (o.unfinished |= a),
      ql(t, e),
      dw(t._zr.dom, e);
  }
  function Zl(t, e) {
    Fw(pb, function (i) {
      i(t, e);
    });
  }
  function jl(t) {
    Cg && console.warn('Instance ' + t + ' has been disposed');
  }
  function ql(t, e) {
    var i = t._zr,
      n = i.storage,
      r = 0;
    n.traverse(function () {
      r++;
    }),
      r > e.get('hoverLayerThreshold') &&
        !kg.node &&
        e.eachSeries(function (e) {
          if (!e.preventUsingHoverLayer) {
            var i = t._chartsMap[e.__viewId];
            i.__alive &&
              i.group.traverse(function (t) {
                t.useHoverLayer = !0;
              });
          }
        });
  }
  function Kl(t, e) {
    var i = t.get('blendMode') || null;
    Cg && !kg.canvasSupported && i && 'source-over' !== i && console.warn('Only canvas support blendMode'),
      e.group.traverse(function (t) {
        t.isGroup || (t.style.blend !== i && t.setStyle('blend', i)),
          t.eachPendingDisplayable &&
            t.eachPendingDisplayable(function (t) {
              t.setStyle('blend', i);
            });
      });
  }
  function $l(t, e) {
    var i = t.get('z'),
      n = t.get('zlevel');
    e.group.traverse(function (t) {
      'group' !== t.type && (null != i && (t.z = i), null != n && (t.zlevel = n));
    });
  }
  function Jl(t) {
    var e = t._coordSysMgr;
    return o(new cs(t), {
      getCoordinateSystems: y(e.getCoordinateSystems, e),
      getComponentByElement: function (e) {
        for (; e; ) {
          var i = e.__ecComponentInfo;
          if (null != i) return t._model.getComponent(i.mainType, i.index);
          e = e.parent;
        }
      },
    });
  }
  function Ql() {
    this.eventInfo;
  }
  function tu(t) {
    function e(t, e) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i];
        n[a] = e;
      }
    }
    var i = 0,
      n = 1,
      r = 2,
      a = '__connectUpdateStatus';
    Fw(cb, function (o, s) {
      t._messageCenter.on(s, function (o) {
        if (_b[t.group] && t[a] !== i) {
          if (o && o.escapeConnect) return;
          var s = t.makeActionFromEvent(o),
            l = [];
          Fw(yb, function (e) {
            e !== t && e.group === t.group && l.push(e);
          }),
            e(l, i),
            Fw(l, function (t) {
              t[a] !== n && t.dispatchAction(s);
            }),
            e(l, r);
        }
      });
    });
  }
  function eu(t, e, i) {
    if (Cg) {
      if (Nv.replace('.', '') - 0 < Uw.zrender.replace('.', '') - 0)
        throw new Error(
          'zrender/src ' + Nv + ' is too old for ECharts ' + Ww + '. Current version need ZRender ' + Uw.zrender + '+',
        );
      if (!t) throw new Error('Initialize failed: invalid dom.');
    }
    var n = au(t);
    if (n) return Cg && console.warn('There is a chart instance already initialized on the dom.'), n;
    Cg &&
      (!C(t) ||
        'CANVAS' === t.nodeName.toUpperCase() ||
        ((t.clientWidth || (i && null != i.width)) && (t.clientHeight || (i && null != i.height))) ||
        console.warn(
          "Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.",
        ));
    var r = new Ol(t, e, i);
    return (r.id = 'ec_' + xb++), (yb[r.id] = r), Jn(t, bb, r.id), tu(r), r;
  }
  function iu(t) {
    if (x(t)) {
      var e = t;
      (t = null),
        Fw(e, function (e) {
          null != e.group && (t = e.group);
        }),
        (t = t || 'g_' + wb++),
        Fw(e, function (e) {
          e.group = t;
        });
    }
    return (_b[t] = !0), t;
  }
  function nu(t) {
    _b[t] = !1;
  }
  function ru(t) {
    'string' == typeof t ? (t = yb[t]) : t instanceof Ol || (t = au(t)),
      t instanceof Ol && !t.isDisposed() && t.dispose();
  }
  function au(t) {
    return yb[Qn(t, bb)];
  }
  function ou(t) {
    return yb[t];
  }
  function su(t, e) {
    mb[t] = e;
  }
  function lu(t) {
    fb.push(t);
  }
  function uu(t, e) {
    mu(db, t, e, Yw);
  }
  function hu(t) {
    pb.push(t);
  }
  function cu(t, e, i) {
    'function' == typeof e && ((i = e), (e = ''));
    var n = Vw(t) ? t.type : [t, (t = { event: e })][0];
    (t.event = (t.event || n).toLowerCase()),
      (e = t.event),
      Nw(ob.test(n) && ob.test(e)),
      hb[n] || (hb[n] = { action: i, actionInfo: t }),
      (cb[e] = n);
  }
  function du(t, e) {
    ds.register(t, e);
  }
  function fu(t) {
    var e = ds.get(t);
    return e ? (e.getDimensionsInfo ? e.getDimensionsInfo() : e.dimensions.slice()) : void 0;
  }
  function pu(t, e) {
    mu(gb, t, e, Kw, 'layout');
  }
  function gu(t, e) {
    mu(gb, t, e, Qw, 'visual');
  }
  function mu(t, e, i, n, r) {
    if (((Gw(e) || Vw(e)) && ((i = e), (e = n)), Cg)) {
      if (isNaN(e) || null == e) throw new Error('Illegal priority');
      Fw(t, function (t) {
        Nw(t.__raw !== i);
      });
    }
    var a = al.wrapStageHandler(i, r);
    return (a.__prio = e), (a.__raw = i), t.push(a), a;
  }
  function vu(t, e) {
    vb[t] = e;
  }
  function yu(t) {
    return cx.extend(t);
  }
  function _u(t) {
    return tw.extend(t);
  }
  function xu(t) {
    return Qx.extend(t);
  }
  function wu(t) {
    return Js.extend(t);
  }
  function bu(t) {
    i('createCanvas', t);
  }
  function Su(t, e, i) {
    Rw.registerMap(t, e, i);
  }
  function Mu(t) {
    var e = Rw.retrieveMap(t);
    return e && e[0] && { geoJson: e[0].geoJSON, specialAreas: e[0].specialAreas };
  }
  function Iu(t) {
    return t;
  }
  function Cu(t, e, i, n, r) {
    (this._old = t),
      (this._new = e),
      (this._oldKeyGetter = i || Iu),
      (this._newKeyGetter = n || Iu),
      (this.context = r);
  }
  function Tu(t, e, i, n, r) {
    for (var a = 0; a < t.length; a++) {
      var o = '_ec_' + r[n](t[a], a),
        s = e[o];
      null == s ? (i.push(o), (e[o] = a)) : (s.length || (e[o] = s = [s]), s.push(a));
    }
  }
  function Du(t) {
    var e = {},
      i = (e.encode = {}),
      n = N(),
      r = [],
      a = [],
      o = (e.userOutput = { dimensionNames: t.dimensions.slice(), encode: {} });
    f(t.dimensions, function (e) {
      var s = t.getDimensionInfo(e),
        l = s.coordDim;
      if (l) {
        Cg && O(null == Ib.get(l));
        var u = s.coordDimIndex;
        (Au(i, l)[u] = e),
          s.isExtraCoord || (n.set(l, 1), Pu(s.type) && (r[0] = e), (Au(o.encode, l)[u] = s.index)),
          s.defaultTooltip && a.push(e);
      }
      Ib.each(function (t, e) {
        var n = Au(i, e),
          r = s.otherDims[e];
        null != r && r !== !1 && (n[r] = s.name);
      });
    });
    var s = [],
      l = {};
    n.each(function (t, e) {
      var n = i[e];
      (l[e] = n[0]), (s = s.concat(n));
    }),
      (e.dataDimsOnCoord = s),
      (e.encodeFirstDimNotExtra = l);
    var u = i.label;
    u && u.length && (r = u.slice());
    var h = i.tooltip;
    return (
      h && h.length ? (a = h.slice()) : a.length || (a = r.slice()), (i.defaultedLabel = r), (i.defaultedTooltip = a), e
    );
  }
  function Au(t, e) {
    return t.hasOwnProperty(e) || (t[e] = []), t[e];
  }
  function ku(t) {
    return 'category' === t ? 'ordinal' : 'time' === t ? 'time' : 'float';
  }
  function Pu(t) {
    return !('ordinal' === t || 'time' === t);
  }
  function Lu(t) {
    return t._rawCount > 65535 ? Pb : Ob;
  }
  function Ou(t) {
    var e = t.constructor;
    return e === Array ? t.slice() : new e(t);
  }
  function zu(t, e) {
    f(zb.concat(e.__wrappedMethods || []), function (i) {
      e.hasOwnProperty(i) && (t[i] = e[i]);
    }),
      (t.__wrappedMethods = e.__wrappedMethods),
      f(Eb, function (i) {
        t[i] = n(e[i]);
      }),
      (t._calculationInfo = o(e._calculationInfo));
  }
  function Eu(t, e, i, n, r) {
    var a = kb[e.type],
      o = n - 1,
      s = e.name,
      l = t[s][o];
    if (l && l.length < i) {
      for (var u = new a(Math.min(r - o * i, i)), h = 0; h < l.length; h++) u[h] = l[h];
      t[s][o] = u;
    }
    for (var c = n * i; r > c; c += i) t[s].push(new a(Math.min(r - c, i)));
  }
  function Ru(t) {
    var e = t._invertedIndicesMap;
    f(e, function (i, n) {
      var r = t._dimensionInfos[n],
        a = r.ordinalMeta;
      if (a) {
        i = e[n] = new Lb(a.categories.length);
        for (var o = 0; o < i.length; o++) i[o] = Db;
        for (var o = 0; o < t._count; o++) i[t.get(n, o)] = o;
      }
    });
  }
  function Bu(t, e, i) {
    var n;
    if (null != e) {
      var r = t._chunkSize,
        a = Math.floor(i / r),
        o = i % r,
        s = t.dimensions[e],
        l = t._storage[s][a];
      if (l) {
        n = l[o];
        var u = t._dimensionInfos[s].ordinalMeta;
        u && u.categories.length && (n = u.categories[n]);
      }
    }
    return n;
  }
  function Nu(t) {
    return t;
  }
  function Fu(t) {
    return t < this._count && t >= 0 ? this._indices[t] : -1;
  }
  function Gu(t, e) {
    var i = t._idList[e];
    return null == i && (i = Bu(t, t._idDimIdx, e)), null == i && (i = Ab + e), i;
  }
  function Vu(t) {
    return x(t) || (t = [t]), t;
  }
  function Hu(t, e) {
    for (var i = 0; i < e.length; i++) t._dimensionInfos[e[i]] || console.error('Unkown dimension ' + e[i]);
  }
  function Wu(t, e) {
    var i = t.dimensions,
      n = new Rb(p(i, t.getDimensionInfo, t), t.hostModel);
    zu(n, t);
    for (var r = (n._storage = {}), a = t._storage, o = 0; o < i.length; o++) {
      var s = i[o];
      a[s] && (u(e, s) >= 0 ? ((r[s] = Uu(a[s])), (n._rawExtent[s] = Xu()), (n._extent[s] = null)) : (r[s] = a[s]));
    }
    return n;
  }
  function Uu(t) {
    for (var e = new Array(t.length), i = 0; i < t.length; i++) e[i] = Ou(t[i]);
    return e;
  }
  function Xu() {
    return [1 / 0, -1 / 0];
  }
  function Yu(t, e, i) {
    function r(t, e, i) {
      null != Ib.get(e) ? (t.otherDims[e] = i) : ((t.coordDim = e), (t.coordDimIndex = i), h.set(e, !0));
    }
    Uo.isInstance(e) || (e = Uo.seriesDataToSource(e)), (i = i || {}), (t = (t || []).slice());
    for (
      var a = (i.dimsDef || []).slice(),
        l = N(i.encodeDef),
        u = N(),
        h = N(),
        c = [],
        d = Zu(e, t, a, i.dimCount),
        p = 0;
      d > p;
      p++
    ) {
      var g = (a[p] = o({}, S(a[p]) ? a[p] : { name: a[p] })),
        m = g.name,
        v = (c[p] = { otherDims: {} });
      null != m && null == u.get(m) && ((v.name = v.displayName = m), u.set(m, p)),
        null != g.type && (v.type = g.type),
        null != g.displayName && (v.displayName = g.displayName);
    }
    l.each(function (t, e) {
      if (((t = Gn(t).slice()), 1 === t.length && !b(t[0]) && t[0] < 0)) return void l.set(e, !1);
      var i = l.set(e, []);
      f(t, function (t, n) {
        b(t) && (t = u.get(t)), null != t && d > t && ((i[n] = t), r(c[t], e, n));
      });
    });
    var y = 0;
    f(t, function (t) {
      var e, t, i, a;
      if (b(t)) (e = t), (t = {});
      else {
        e = t.name;
        var o = t.ordinalMeta;
        (t.ordinalMeta = null),
          (t = n(t)),
          (t.ordinalMeta = o),
          (i = t.dimsDef),
          (a = t.otherDims),
          (t.name = t.coordDim = t.coordDimIndex = t.dimsDef = t.otherDims = null);
      }
      var u = l.get(e);
      if (u !== !1) {
        var u = Gn(u);
        if (!u.length)
          for (var h = 0; h < ((i && i.length) || 1); h++) {
            for (; y < c.length && null != c[y].coordDim; ) y++;
            y < c.length && u.push(y++);
          }
        f(u, function (n, o) {
          var l = c[n];
          if ((r(s(l, t), e, o), null == l.name && i)) {
            var u = i[o];
            !S(u) && (u = { name: u }), (l.name = l.displayName = u.name), (l.defaultTooltip = u.defaultTooltip);
          }
          a && s(l.otherDims, a);
        });
      }
    });
    var _ = i.generateCoord,
      x = i.generateCoordCount,
      w = null != x;
    x = _ ? x || 1 : 0;
    for (var M = _ || 'value', I = 0; d > I; I++) {
      var v = (c[I] = c[I] || {}),
        C = v.coordDim;
      null == C && ((v.coordDim = ju(M, h, w)), (v.coordDimIndex = 0), (!_ || 0 >= x) && (v.isExtraCoord = !0), x--),
        null == v.name && (v.name = ju(v.coordDim, u)),
        null == v.type && es(e, I, v.name) && (v.type = 'ordinal');
    }
    return c;
  }
  function Zu(t, e, i, n) {
    var r = Math.max(t.dimensionsDetectCount || 1, e.length, i.length, n || 0);
    return (
      f(e, function (t) {
        var e = t.dimsDef;
        e && (r = Math.max(r, e.length));
      }),
      r
    );
  }
  function ju(t, e, i) {
    if (i || null != e.get(t)) {
      for (var n = 0; null != e.get(t + n); ) n++;
      t += n;
    }
    return e.set(t, !0), t;
  }
  function qu(t, e, i) {
    i = i || {};
    var n,
      r,
      a,
      o,
      s = i.byIndex,
      l = i.stackedCoordDimension,
      u = !(!t || !t.get('stack'));
    if (
      (f(e, function (t, i) {
        b(t) && (e[i] = t = { name: t }),
          u &&
            !t.isExtraCoord &&
            (s || n || !t.ordinalMeta || (n = t),
            r || 'ordinal' === t.type || 'time' === t.type || (l && l !== t.coordDim) || (r = t));
      }),
      !r || s || n || (s = !0),
      r)
    ) {
      (a = '__\x00ecstackresult'), (o = '__\x00ecstackedover'), n && (n.createInvertedIndices = !0);
      var h = r.coordDim,
        c = r.type,
        d = 0;
      f(e, function (t) {
        t.coordDim === h && d++;
      }),
        e.push({ name: a, coordDim: h, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0 }),
        d++,
        e.push({ name: o, coordDim: o, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0 });
    }
    return {
      stackedDimension: r && r.name,
      stackedByDimension: n && n.name,
      isStackedByIndex: s,
      stackedOverDimension: o,
      stackResultDimension: a,
    };
  }
  function Ku(t, e) {
    return !!e && e === t.getCalculationInfo('stackedDimension');
  }
  function $u(t, e) {
    return Ku(t, e) ? t.getCalculationInfo('stackResultDimension') : e;
  }
  function Ju(t, e, i) {
    (i = i || {}), Uo.isInstance(t) || (t = Uo.seriesDataToSource(t));
    var n,
      r = e.get('coordinateSystem'),
      a = ds.get(r),
      o = Ho(e);
    o &&
      (n = p(o.coordSysDims, function (t) {
        var e = { name: t },
          i = o.axisMap.get(t);
        if (i) {
          var n = i.get('type');
          e.type = ku(n);
        }
        return e;
      })),
      n || (n = (a && (a.getDimensionsInfo ? a.getDimensionsInfo() : a.dimensions.slice())) || ['x', 'y']);
    var s,
      l,
      u = Fb(t, { coordDimensions: n, generateCoord: i.generateCoord });
    o &&
      f(u, function (t, e) {
        var i = t.coordDim,
          n = o.categoryAxisMap.get(i);
        n && (null == s && (s = e), (t.ordinalMeta = n.getOrdinalMeta())), null != t.otherDims.itemName && (l = !0);
      }),
      l || null == s || (u[s].otherDims.itemName = 0);
    var h = qu(e, u),
      c = new Rb(u, e);
    c.setCalculationInfo(h);
    var d =
      null != s && Qu(t)
        ? function (t, e, i, n) {
            return n === s ? i : this.defaultDimValueGetter(t, e, i, n);
          }
        : null;
    return (c.hasItemOption = !1), c.initData(t, null, d), c;
  }
  function Qu(t) {
    if (t.sourceFormat === vx) {
      var e = th(t.data || []);
      return null != e && !x(Hn(e));
    }
  }
  function th(t) {
    for (var e = 0; e < t.length && null == t[e]; ) e++;
    return t[e];
  }
  function eh(t) {
    (this._setting = t || {}),
      (this._extent = [1 / 0, -1 / 0]),
      (this._interval = 0),
      this.init && this.init.apply(this, arguments);
  }
  function ih(t) {
    (this.categories = t.categories || []),
      (this._needCollect = t.needCollect),
      (this._deduplication = t.deduplication),
      this._map;
  }
  function nh(t) {
    return t._map || (t._map = N(t.categories));
  }
  function rh(t) {
    return S(t) && null != t.value ? t.value : t + '';
  }
  function ah(t, e, i, n) {
    var r = {},
      a = t[1] - t[0],
      o = (r.interval = xo(a / e, !0));
    null != i && i > o && (o = r.interval = i), null != n && o > n && (o = r.interval = n);
    var s = (r.intervalPrecision = oh(o)),
      l = (r.niceTickExtent = [Wb(Math.ceil(t[0] / o) * o, s), Wb(Math.floor(t[1] / o) * o, s)]);
    return lh(l, t), r;
  }
  function oh(t) {
    return co(t) + 2;
  }
  function sh(t, e, i) {
    t[e] = Math.max(Math.min(t[e], i[1]), i[0]);
  }
  function lh(t, e) {
    !isFinite(t[0]) && (t[0] = e[0]),
      !isFinite(t[1]) && (t[1] = e[1]),
      sh(t, 0, e),
      sh(t, 1, e),
      t[0] > t[1] && (t[0] = t[1]);
  }
  function uh(t, e, i, n) {
    var r = [];
    if (!t) return r;
    var a = 1e4;
    e[0] < i[0] && r.push(e[0]);
    for (var o = i[0]; o <= i[1] && (r.push(o), (o = Wb(o + t, n)), o !== r[r.length - 1]); )
      if (r.length > a) return [];
    return e[1] > (r.length ? r[r.length - 1] : i[1]) && r.push(e[1]), r;
  }
  function hh(t) {
    return t.get('stack') || Yb + t.seriesIndex;
  }
  function ch(t) {
    return t.dim + t.index;
  }
  function dh(t, e) {
    var i = [];
    return (
      e.eachSeriesByType(t, function (t) {
        vh(t) && !yh(t) && i.push(t);
      }),
      i
    );
  }
  function fh(t) {
    var e = [];
    return (
      f(t, function (t) {
        var i = t.getData(),
          n = t.coordinateSystem,
          r = n.getBaseAxis(),
          a = r.getExtent(),
          o = 'category' === r.type ? r.getBandWidth() : Math.abs(a[1] - a[0]) / i.count(),
          s = so(t.get('barWidth'), o),
          l = so(t.get('barMaxWidth'), o),
          u = t.get('barGap'),
          h = t.get('barCategoryGap');
        e.push({
          bandWidth: o,
          barWidth: s,
          barMaxWidth: l,
          barGap: u,
          barCategoryGap: h,
          axisKey: ch(r),
          stackId: hh(t),
        });
      }),
      ph(e)
    );
  }
  function ph(t) {
    var e = {};
    f(t, function (t) {
      var i = t.axisKey,
        n = t.bandWidth,
        r = e[i] || { bandWidth: n, remainedWidth: n, autoWidthCount: 0, categoryGap: '20%', gap: '30%', stacks: {} },
        a = r.stacks;
      e[i] = r;
      var o = t.stackId;
      a[o] || r.autoWidthCount++, (a[o] = a[o] || { width: 0, maxWidth: 0 });
      var s = t.barWidth;
      s && !a[o].width && ((a[o].width = s), (s = Math.min(r.remainedWidth, s)), (r.remainedWidth -= s));
      var l = t.barMaxWidth;
      l && (a[o].maxWidth = l);
      var u = t.barGap;
      null != u && (r.gap = u);
      var h = t.barCategoryGap;
      null != h && (r.categoryGap = h);
    });
    var i = {};
    return (
      f(e, function (t, e) {
        i[e] = {};
        var n = t.stacks,
          r = t.bandWidth,
          a = so(t.categoryGap, r),
          o = so(t.gap, 1),
          s = t.remainedWidth,
          l = t.autoWidthCount,
          u = (s - a) / (l + (l - 1) * o);
        (u = Math.max(u, 0)),
          f(n, function (t) {
            var e = t.maxWidth;
            e && u > e && ((e = Math.min(e, s)), t.width && (e = Math.min(e, t.width)), (s -= e), (t.width = e), l--);
          }),
          (u = (s - a) / (l + (l - 1) * o)),
          (u = Math.max(u, 0));
        var h,
          c = 0;
        f(n, function (t) {
          t.width || (t.width = u), (h = t), (c += t.width * (1 + o));
        }),
          h && (c -= h.width * o);
        var d = -c / 2;
        f(n, function (t, n) {
          (i[e][n] = i[e][n] || { bandWidth: r, offset: d, width: t.width }), (d += t.width * (1 + o));
        });
      }),
      i
    );
  }
  function gh(t, e, i) {
    if (t && e) {
      var n = t[ch(e)];
      return null != n && null != i && (n = n[hh(i)]), n;
    }
  }
  function mh(t, e) {
    var i = dh(t, e),
      n = fh(i),
      r = {};
    f(
      i,
      function (t) {
        var e = t.getData(),
          i = t.coordinateSystem,
          a = i.getBaseAxis(),
          o = hh(t),
          s = n[ch(a)][o],
          l = s.offset,
          u = s.width,
          h = i.getOtherAxis(a),
          c = t.get('barMinHeight') || 0;
        (r[o] = r[o] || []), e.setLayout({ bandWidth: s.bandWidth, offset: l, size: u });
        for (
          var d = e.mapDimension(h.dim),
            f = e.mapDimension(a.dim),
            p = Ku(e, d),
            g = h.isHorizontal(),
            m = _h(a, h, p),
            v = 0,
            y = e.count();
          y > v;
          v++
        ) {
          var _ = e.get(d, v),
            x = e.get(f, v);
          if (!isNaN(_) && !isNaN(x)) {
            var w = _ >= 0 ? 'p' : 'n',
              b = m;
            p && (r[o][x] || (r[o][x] = { p: m, n: m }), (b = r[o][x][w]));
            var S, M, I, C;
            if (g) {
              var T = i.dataToPoint([_, x]);
              (S = b),
                (M = T[1] + l),
                (I = T[0] - m),
                (C = u),
                Math.abs(I) < c && (I = (0 > I ? -1 : 1) * c),
                p && (r[o][x][w] += I);
            } else {
              var T = i.dataToPoint([x, _]);
              (S = T[0] + l),
                (M = b),
                (I = u),
                (C = T[1] - m),
                Math.abs(C) < c && (C = (0 >= C ? -1 : 1) * c),
                p && (r[o][x][w] += C);
            }
            e.setItemLayout(v, { x: S, y: M, width: I, height: C });
          }
        }
      },
      this,
    );
  }
  function vh(t) {
    return t.coordinateSystem && 'cartesian2d' === t.coordinateSystem.type;
  }
  function yh(t) {
    return t.pipelineContext && t.pipelineContext.large;
  }
  function _h(t, e) {
    return e.toGlobalCoord(e.dataToCoord(0));
  }
  function xh(t, e) {
    return uS(t, lS(e));
  }
  function wh(t, e) {
    var i,
      n,
      r,
      a = t.type,
      o = e.getMin(),
      s = e.getMax(),
      l = null != o,
      u = null != s,
      h = t.getExtent();
    'ordinal' === a
      ? (i = e.getCategories().length)
      : ((n = e.get('boundaryGap')),
        x(n) || (n = [n || 0, n || 0]),
        'boolean' == typeof n[0] &&
          (Cg &&
            console.warn(
              'Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.',
            ),
          (n = [0, 0])),
        (n[0] = so(n[0], 1)),
        (n[1] = so(n[1], 1)),
        (r = h[1] - h[0] || Math.abs(h[0]))),
      null == o && (o = 'ordinal' === a ? (i ? 0 : 0 / 0) : h[0] - n[0] * r),
      null == s && (s = 'ordinal' === a ? (i ? i - 1 : 0 / 0) : h[1] + n[1] * r),
      'dataMin' === o ? (o = h[0]) : 'function' == typeof o && (o = o({ min: h[0], max: h[1] })),
      'dataMax' === s ? (s = h[1]) : 'function' == typeof s && (s = s({ min: h[0], max: h[1] })),
      (null == o || !isFinite(o)) && (o = 0 / 0),
      (null == s || !isFinite(s)) && (s = 0 / 0),
      t.setBlank(T(o) || T(s) || ('ordinal' === a && !t.getOrdinalMeta().categories.length)),
      e.getNeedCrossZero() && (o > 0 && s > 0 && !l && (o = 0), 0 > o && 0 > s && !u && (s = 0));
    var c = e.ecModel;
    if (c && 'time' === a) {
      var d,
        p = dh('bar', c);
      if (
        (f(p, function (t) {
          d |= t.getBaseAxis() === e.axis;
        }),
        d)
      ) {
        var g = fh(p),
          m = bh(o, s, e, g);
        (o = m.min), (s = m.max);
      }
    }
    return [o, s];
  }
  function bh(t, e, i, n) {
    var r = i.axis.getExtent(),
      a = r[1] - r[0],
      o = gh(n, i.axis);
    if (void 0 === o) return { min: t, max: e };
    var s = 1 / 0;
    f(o, function (t) {
      s = Math.min(t.offset, s);
    });
    var l = -1 / 0;
    f(o, function (t) {
      l = Math.max(t.offset + t.width, l);
    }),
      (s = Math.abs(s)),
      (l = Math.abs(l));
    var u = s + l,
      h = e - t,
      c = 1 - (s + l) / a,
      d = h / c - h;
    return (e += d * (l / u)), (t -= d * (s / u)), { min: t, max: e };
  }
  function Sh(t, e) {
    var i = wh(t, e),
      n = null != e.getMin(),
      r = null != e.getMax(),
      a = e.get('splitNumber');
    'log' === t.type && (t.base = e.get('logBase'));
    var o = t.type;
    t.setExtent(i[0], i[1]),
      t.niceExtent({
        splitNumber: a,
        fixMin: n,
        fixMax: r,
        minInterval: 'interval' === o || 'time' === o ? e.get('minInterval') : null,
        maxInterval: 'interval' === o || 'time' === o ? e.get('maxInterval') : null,
      });
    var s = e.get('interval');
    null != s && t.setInterval && t.setInterval(s);
  }
  function Mh(t, e) {
    if ((e = e || t.get('type')))
      switch (e) {
        case 'category':
          return new Hb(t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(), [1 / 0, -1 / 0]);
        case 'value':
          return new Xb();
        default:
          return (eh.getClass(e) || Xb).create(t);
      }
  }
  function Ih(t) {
    var e = t.scale.getExtent(),
      i = e[0],
      n = e[1];
    return !((i > 0 && n > 0) || (0 > i && 0 > n));
  }
  function Ch(t) {
    var e = t.getLabelModel().get('formatter'),
      i = 'category' === t.type ? t.scale.getExtent()[0] : null;
    return 'string' == typeof e
      ? (e = (function (e) {
          return function (i) {
            return (i = t.scale.getLabel(i)), e.replace('{value}', null != i ? i : '');
          };
        })(e))
      : 'function' == typeof e
      ? function (n, r) {
          return null != i && (r = n - i), e(Th(t, n), r);
        }
      : function (e) {
          return t.scale.getLabel(e);
        };
  }
  function Th(t, e) {
    return 'category' === t.type ? t.scale.getLabel(e) : e;
  }
  function Dh(t) {
    var e = t.model,
      i = t.scale;
    if (e.get('axisLabel.show') && !i.isBlank()) {
      var n,
        r,
        a = 'category' === t.type,
        o = i.getExtent();
      a ? (r = i.count()) : ((n = i.getTicks()), (r = n.length));
      var s,
        l = t.getLabelModel(),
        u = Ch(t),
        h = 1;
      r > 40 && (h = Math.ceil(r / 40));
      for (var c = 0; r > c; c += h) {
        var d = n ? n[c] : o[0] + c,
          f = u(d),
          p = l.getTextRect(f),
          g = Ah(p, l.get('rotate') || 0);
        s ? s.union(g) : (s = g);
      }
      return s;
    }
  }
  function Ah(t, e) {
    var i = (e * Math.PI) / 180,
      n = t.plain(),
      r = n.width,
      a = n.height,
      o = r * Math.cos(i) + a * Math.sin(i),
      s = r * Math.sin(i) + a * Math.cos(i),
      l = new wi(n.x, n.y, o, s);
    return l;
  }
  function kh(t) {
    var e = t.get('interval');
    return null == e ? 'auto' : e;
  }
  function Ph(t) {
    return 'category' === t.type && 0 === kh(t.getLabelModel());
  }
  function Lh(t, e) {
    if ('image' !== this.type) {
      var i = this.style,
        n = this.shape;
      n && 'line' === n.symbolType
        ? (i.stroke = t)
        : this.__isEmptyBrush
        ? ((i.stroke = t), (i.fill = e || '#fff'))
        : (i.fill && (i.fill = t), i.stroke && (i.stroke = t)),
        this.dirty(!1);
    }
  }
  function Oh(t, e, i, n, r, a, o) {
    var s = 0 === t.indexOf('empty');
    s && (t = t.substr(5, 1).toLowerCase() + t.substr(6));
    var l;
    return (
      (l =
        0 === t.indexOf('image://')
          ? oa(t.slice(8), new wi(e, i, n, r), o ? 'center' : 'cover')
          : 0 === t.indexOf('path://')
          ? aa(t.slice(7), {}, new wi(e, i, n, r), o ? 'center' : 'cover')
          : new SS({ shape: { symbolType: t, x: e, y: i, width: n, height: r } })),
      (l.__isEmptyBrush = s),
      (l.setColor = Lh),
      l.setColor(a),
      l
    );
  }
  function zh(t) {
    return Ju(t.getSource(), t);
  }
  function Eh(t, e) {
    var i = e;
    Qa.isInstance(e) || ((i = new Qa(e)), c(i, gS));
    var n = Mh(i);
    return n.setExtent(t[0], t[1]), Sh(n, i), n;
  }
  function Rh(t) {
    c(t, gS);
  }
  function Bh(t, e) {
    return Math.abs(t - e) < CS;
  }
  function Nh(t, e, i) {
    var n = 0,
      r = t[0];
    if (!r) return !1;
    for (var a = 1; a < t.length; a++) {
      var o = t[a];
      (n += Lr(r[0], r[1], o[0], o[1], e, i)), (r = o);
    }
    var s = t[0];
    return (Bh(r[0], s[0]) && Bh(r[1], s[1])) || (n += Lr(r[0], r[1], s[0], s[1], e, i)), 0 !== n;
  }
  function Fh(t, e, i) {
    if (((this.name = t), (this.geometries = e), i)) i = [i[0], i[1]];
    else {
      var n = this.getBoundingRect();
      i = [n.x + n.width / 2, n.y + n.height / 2];
    }
    this.center = i;
  }
  function Gh(t) {
    if (!t.UTF8Encoding) return t;
    var e = t.UTF8Scale;
    null == e && (e = 1024);
    for (var i = t.features, n = 0; n < i.length; n++)
      for (var r = i[n], a = r.geometry, o = a.coordinates, s = a.encodeOffsets, l = 0; l < o.length; l++) {
        var u = o[l];
        if ('Polygon' === a.type) o[l] = Vh(u, s[l], e);
        else if ('MultiPolygon' === a.type)
          for (var h = 0; h < u.length; h++) {
            var c = u[h];
            u[h] = Vh(c, s[l][h], e);
          }
      }
    return (t.UTF8Encoding = !1), t;
  }
  function Vh(t, e, i) {
    for (var n = [], r = e[0], a = e[1], o = 0; o < t.length; o += 2) {
      var s = t.charCodeAt(o) - 64,
        l = t.charCodeAt(o + 1) - 64;
      (s = (s >> 1) ^ -(1 & s)),
        (l = (l >> 1) ^ -(1 & l)),
        (s += r),
        (l += a),
        (r = s),
        (a = l),
        n.push([s / i, l / i]);
    }
    return n;
  }
  function Hh(t) {
    return 'category' === t.type ? Uh(t) : Zh(t);
  }
  function Wh(t, e) {
    return 'category' === t.type ? Yh(t, e) : { ticks: t.scale.getTicks() };
  }
  function Uh(t) {
    var e = t.getLabelModel(),
      i = Xh(t, e);
    return !e.get('show') || t.scale.isBlank() ? { labels: [], labelCategoryInterval: i.labelCategoryInterval } : i;
  }
  function Xh(t, e) {
    var i = jh(t, 'labels'),
      n = kh(e),
      r = qh(i, n);
    if (r) return r;
    var a, o;
    return (
      w(n) ? (a = ec(t, n)) : ((o = 'auto' === n ? $h(t) : n), (a = tc(t, o))),
      Kh(i, n, { labels: a, labelCategoryInterval: o })
    );
  }
  function Yh(t, e) {
    var i = jh(t, 'ticks'),
      n = kh(e),
      r = qh(i, n);
    if (r) return r;
    var a, o;
    if (((!e.get('show') || t.scale.isBlank()) && (a = []), w(n))) a = ec(t, n, !0);
    else if ('auto' === n) {
      var s = Xh(t, t.getLabelModel());
      (o = s.labelCategoryInterval),
        (a = p(s.labels, function (t) {
          return t.tickValue;
        }));
    } else (o = n), (a = tc(t, o, !0));
    return Kh(i, n, { ticks: a, tickCategoryInterval: o });
  }
  function Zh(t) {
    var e = t.scale.getTicks(),
      i = Ch(t);
    return {
      labels: p(e, function (e, n) {
        return { formattedLabel: i(e, n), rawLabel: t.scale.getLabel(e), tickValue: e };
      }),
    };
  }
  function jh(t, e) {
    return DS(t)[e] || (DS(t)[e] = []);
  }
  function qh(t, e) {
    for (var i = 0; i < t.length; i++) if (t[i].key === e) return t[i].value;
  }
  function Kh(t, e, i) {
    return t.push({ key: e, value: i }), i;
  }
  function $h(t) {
    var e = DS(t).autoInterval;
    return null != e ? e : (DS(t).autoInterval = t.calculateCategoryInterval());
  }
  function Jh(t) {
    var e = Qh(t),
      i = Ch(t),
      n = ((e.axisRotate - e.labelRotate) / 180) * Math.PI,
      r = t.scale,
      a = r.getExtent(),
      o = r.count();
    if (a[1] - a[0] < 1) return 0;
    var s = 1;
    o > 40 && (s = Math.max(1, Math.floor(o / 40)));
    for (
      var l = a[0],
        u = t.dataToCoord(l + 1) - t.dataToCoord(l),
        h = Math.abs(u * Math.cos(n)),
        c = Math.abs(u * Math.sin(n)),
        d = 0,
        f = 0;
      l <= a[1];
      l += s
    ) {
      var p = 0,
        g = 0,
        m = Gi(i(l), e.font, 'center', 'top');
      (p = 1.3 * m.width), (g = 1.3 * m.height), (d = Math.max(d, p, 7)), (f = Math.max(f, g, 7));
    }
    var v = d / h,
      y = f / c;
    isNaN(v) && (v = 1 / 0), isNaN(y) && (y = 1 / 0);
    var _ = Math.max(0, Math.floor(Math.min(v, y))),
      x = DS(t.model),
      w = x.lastAutoInterval,
      b = x.lastTickCount;
    return (
      null != w && null != b && Math.abs(w - _) <= 1 && Math.abs(b - o) <= 1 && w > _
        ? (_ = w)
        : ((x.lastTickCount = o), (x.lastAutoInterval = _)),
      _
    );
  }
  function Qh(t) {
    var e = t.getLabelModel();
    return {
      axisRotate: t.getRotate ? t.getRotate() : t.isHorizontal && !t.isHorizontal() ? 90 : 0,
      labelRotate: e.get('rotate') || 0,
      font: e.getFont(),
    };
  }
  function tc(t, e, i) {
    function n(t) {
      l.push(i ? t : { formattedLabel: r(t), rawLabel: a.getLabel(t), tickValue: t });
    }
    var r = Ch(t),
      a = t.scale,
      o = a.getExtent(),
      s = t.getLabelModel(),
      l = [],
      u = Math.max((e || 0) + 1, 1),
      h = o[0],
      c = a.count();
    0 !== h && u > 1 && c / u > 2 && (h = Math.round(Math.ceil(h / u) * u));
    var d = Ph(t),
      f = s.get('showMinLabel') || d,
      p = s.get('showMaxLabel') || d;
    f && h !== o[0] && n(o[0]);
    for (var g = h; g <= o[1]; g += u) n(g);
    return p && g - u !== o[1] && n(o[1]), l;
  }
  function ec(t, e, i) {
    var n = t.scale,
      r = Ch(t),
      a = [];
    return (
      f(n.getTicks(), function (t) {
        var o = n.getLabel(t);
        e(t, o) && a.push(i ? t : { formattedLabel: r(t), rawLabel: o, tickValue: t });
      }),
      a
    );
  }
  function ic(t, e) {
    var i = t[1] - t[0],
      n = e,
      r = i / n / 2;
    (t[0] += r), (t[1] -= r);
  }
  function nc(t, e, i, n, r) {
    function a(t, e) {
      return h ? t > e : e > t;
    }
    var o = e.length;
    if (t.onBand && !n && o) {
      var s,
        l = t.getExtent();
      if (1 === o) (e[0].coord = l[0]), (s = e[1] = { coord: l[0] });
      else {
        var u = e[1].coord - e[0].coord;
        f(e, function (t) {
          t.coord -= u / 2;
          var e = e || 0;
          e % 2 > 0 && (t.coord -= u / (2 * (e + 1)));
        }),
          (s = { coord: e[o - 1].coord + u }),
          e.push(s);
      }
      var h = l[0] > l[1];
      a(e[0].coord, l[0]) && (r ? (e[0].coord = l[0]) : e.shift()),
        r && a(l[0], e[0].coord) && e.unshift({ coord: l[0] }),
        a(l[1], s.coord) && (r ? (s.coord = l[1]) : e.pop()),
        r && a(s.coord, l[1]) && e.push({ coord: l[1] });
    }
  }
  function rc(t) {
    return this._axes[t];
  }
  function ac(t) {
    zS.call(this, t);
  }
  function oc(t, e) {
    return e.type || (e.data ? 'category' : 'value');
  }
  function sc(t, e) {
    return t.getCoordSysModel() === e;
  }
  function lc(t, e, i) {
    (this._coordsMap = {}),
      (this._coordsList = []),
      (this._axesMap = {}),
      (this._axesList = []),
      this._initCartesian(t, e, i),
      (this.model = t);
  }
  function uc(t, e, i, n) {
    function r(t) {
      return t.dim + '_' + t.index;
    }
    i.getAxesOnZeroOf = function () {
      return a ? [a] : [];
    };
    var a,
      o = t[e],
      s = i.model,
      l = s.get('axisLine.onZero'),
      u = s.get('axisLine.onZeroAxisIndex');
    if (l) {
      if (null != u) hc(o[u]) && (a = o[u]);
      else
        for (var h in o)
          if (o.hasOwnProperty(h) && hc(o[h]) && !n[r(o[h])]) {
            a = o[h];
            break;
          }
      a && (n[r(a)] = !0);
    }
  }
  function hc(t) {
    return t && 'category' !== t.type && 'time' !== t.type && Ih(t);
  }
  function cc(t, e) {
    var i = t.getExtent(),
      n = i[0] + i[1];
    (t.toGlobalCoord =
      'x' === t.dim
        ? function (t) {
            return t + e;
          }
        : function (t) {
            return n - t + e;
          }),
      (t.toLocalCoord =
        'x' === t.dim
          ? function (t) {
              return t - e;
            }
          : function (t) {
              return n - t + e;
            });
  }
  function dc(t) {
    return p(WS, function (e) {
      var i = t.getReferringComponents(e)[0];
      if (Cg && !i) throw new Error(e + ' "' + D(t.get(e + 'Index'), t.get(e + 'Id'), 0) + '" not found');
      return i;
    });
  }
  function fc(t) {
    return 'cartesian2d' === t.get('coordinateSystem');
  }
  function pc(t, e) {
    var i = t.mapDimension('defaultedLabel', !0),
      n = i.length;
    if (1 === n) return Ns(t, e, i[0]);
    if (n) {
      for (var r = [], a = 0; a < i.length; a++) {
        var o = Ns(t, e, i[a]);
        r.push(o);
      }
      return r.join(' ');
    }
  }
  function gc(t, e, i, n, r, a) {
    var o = i.getModel('label'),
      s = i.getModel('emphasis.label');
    Da(t, e, o, s, {
      labelFetcher: r,
      labelDataIndex: a,
      defaultText: pc(r.getData(), a),
      isRectText: !0,
      autoColor: n,
    }),
      mc(t),
      mc(e);
  }
  function mc(t, e) {
    'outside' === t.textPosition && (t.textPosition = e);
  }
  function vc(t, e, i) {
    var n = t.getArea(),
      r = t.getBaseAxis().isHorizontal(),
      a = n.x,
      o = n.y,
      s = n.width,
      l = n.height,
      u = i.get('lineStyle.width') || 2;
    (a -= u / 2), (o -= u / 2), (s += u), (l += u);
    var h = new g_({ shape: { x: a, y: o, width: s, height: l } });
    return e && ((h.shape[r ? 'width' : 'height'] = 0), Va(h, { shape: { width: s, height: l } }, i)), h;
  }
  function yc(t, e, i) {
    var n = t.getArea(),
      r = new s_({
        shape: {
          cx: lo(t.cx, 1),
          cy: lo(t.cy, 1),
          r0: lo(n.r0, 1),
          r: lo(n.r, 1),
          startAngle: n.startAngle,
          endAngle: n.endAngle,
          clockwise: n.clockwise,
        },
      });
    return e && ((r.shape.endAngle = n.startAngle), Va(r, { shape: { endAngle: n.endAngle } }, i)), r;
  }
  function _c(t, e, i) {
    return t ? ('polar' === t.type ? yc(t, e, i) : 'cartesian2d' === t.type ? vc(t, e, i) : null) : null;
  }
  function xc(t, e) {
    var i = t.getArea && t.getArea();
    if ('cartesian2d' === t.type) {
      var n = t.getBaseAxis();
      if ('category' !== n.type || !n.onBand) {
        var r = e.getLayout('bandWidth');
        n.isHorizontal() ? ((i.x -= r), (i.width += 2 * r)) : ((i.y -= r), (i.height += 2 * r));
      }
    }
    return i;
  }
  function wc(t, e, i) {
    (i.style.text = null),
      Ga(i, { shape: { width: 0 } }, e, t, function () {
        i.parent && i.parent.remove(i);
      });
  }
  function bc(t, e, i) {
    (i.style.text = null),
      Ga(i, { shape: { r: i.shape.r0 } }, e, t, function () {
        i.parent && i.parent.remove(i);
      });
  }
  function Sc(t, e, i, n, r, a, o, l) {
    var u = e.getItemVisual(i, 'color'),
      h = e.getItemVisual(i, 'opacity'),
      c = n.getModel('itemStyle'),
      d = n.getModel('emphasis.itemStyle').getBarItemStyle();
    l || t.setShape('r', c.get('barBorderRadius') || 0), t.useStyle(s({ fill: u, opacity: h }, c.getBarItemStyle()));
    var f = n.getShallow('cursor');
    f && t.attr('cursor', f);
    var p = o ? (r.height > 0 ? 'bottom' : 'top') : r.width > 0 ? 'left' : 'right';
    l || gc(t.style, d, n, u, a, i, p), Ma(t, d);
  }
  function Mc(t, e) {
    var i = t.get(ZS) || 0;
    return Math.min(i, Math.abs(e.width), Math.abs(e.height));
  }
  function Ic(t, e, i) {
    var n = t.getData(),
      r = [],
      a = n.getLayout('valueAxisHorizontal') ? 1 : 0;
    r[1 - a] = n.getLayout('valueAxisStart');
    var o = new tM({
      shape: { points: n.getLayout('largePoints') },
      incremental: !!i,
      __startPoint: r,
      __baseDimIdx: a,
      __largeDataIndices: n.getLayout('largeDataIndices'),
      __barWidth: n.getLayout('barWidth'),
    });
    e.add(o),
      Tc(o, t, n),
      (o.seriesIndex = t.seriesIndex),
      t.get('silent') || (o.on('mousedown', eM), o.on('mousemove', eM));
  }
  function Cc(t, e, i) {
    var n = t.__baseDimIdx,
      r = 1 - n,
      a = t.shape.points,
      o = t.__largeDataIndices,
      s = Math.abs(t.__barWidth / 2),
      l = t.__startPoint[r];
    (jS[0] = e), (jS[1] = i);
    for (var u = jS[n], h = jS[1 - n], c = u - s, d = u + s, f = 0, p = a.length / 2; p > f; f++) {
      var g = 2 * f,
        m = a[g + n],
        v = a[g + r];
      if (m >= c && d >= m && (v >= l ? h >= l && v >= h : h >= v && l >= h)) return o[f];
    }
    return -1;
  }
  function Tc(t, e, i) {
    var n = i.getVisual('borderColor') || i.getVisual('color'),
      r = e.getModel('itemStyle').getItemStyle(['color', 'borderColor']);
    t.useStyle(r), (t.style.fill = null), (t.style.stroke = n), (t.style.lineWidth = i.getLayout('barWidth'));
  }
  function Dc(t, e, i, n) {
    var r,
      a,
      o = go(i - t.rotation),
      s = n[0] > n[1],
      l = ('start' === e && !s) || ('start' !== e && s);
    return (
      mo(o - iM / 2)
        ? ((a = l ? 'bottom' : 'top'), (r = 'center'))
        : mo(o - 1.5 * iM)
        ? ((a = l ? 'top' : 'bottom'), (r = 'center'))
        : ((a = 'middle'), (r = 1.5 * iM > o && o > iM / 2 ? (l ? 'left' : 'right') : l ? 'right' : 'left')),
      { rotation: o, textAlign: r, textVerticalAlign: a }
    );
  }
  function Ac(t, e, i) {
    if (!Ph(t.axis)) {
      var n = t.get('axisLabel.showMinLabel'),
        r = t.get('axisLabel.showMaxLabel');
      (e = e || []), (i = i || []);
      var a = e[0],
        o = e[1],
        s = e[e.length - 1],
        l = e[e.length - 2],
        u = i[0],
        h = i[1],
        c = i[i.length - 1],
        d = i[i.length - 2];
      n === !1 ? (kc(a), kc(u)) : Pc(a, o) && (n ? (kc(o), kc(h)) : (kc(a), kc(u))),
        r === !1 ? (kc(s), kc(c)) : Pc(l, s) && (r ? (kc(l), kc(d)) : (kc(s), kc(c)));
    }
  }
  function kc(t) {
    t && (t.ignore = !0);
  }
  function Pc(t, e) {
    var i = t && t.getBoundingRect().clone(),
      n = e && e.getBoundingRect().clone();
    if (i && n) {
      var r = Ae([]);
      return (
        Oe(r, r, -t.rotation),
        i.applyTransform(Pe([], r, t.getLocalTransform())),
        n.applyTransform(Pe([], r, e.getLocalTransform())),
        i.intersect(n)
      );
    }
  }
  function Lc(t) {
    return 'middle' === t || 'center' === t;
  }
  function Oc(t, e, i) {
    var n = e.axis;
    if (e.get('axisTick.show') && !n.scale.isBlank()) {
      for (
        var r = e.getModel('axisTick'),
          a = r.getModel('lineStyle'),
          o = r.get('length'),
          l = n.getTicksCoords(),
          u = [],
          h = [],
          c = t._transform,
          d = [],
          f = 0;
        f < l.length;
        f++
      ) {
        var p = l[f].coord;
        (u[0] = p), (u[1] = 0), (h[0] = p), (h[1] = i.tickDirection * o), c && (ae(u, u, c), ae(h, h, c));
        var g = new v_({
          anid: 'tick_' + l[f].tickValue,
          subPixelOptimize: !0,
          shape: { x1: u[0], y1: u[1], x2: h[0], y2: h[1] },
          style: s(a.getLineStyle(), { stroke: e.get('axisLine.lineStyle.color') }),
          z2: 2,
          silent: !0,
        });
        t.group.add(g), d.push(g);
      }
      return d;
    }
  }
  function zc(t, e, i) {
    var n = e.axis,
      r = D(i.axisLabelShow, e.get('axisLabel.show'));
    if (r && !n.scale.isBlank()) {
      var a = e.getModel('axisLabel'),
        o = a.get('margin'),
        s = n.getViewLabels(),
        l = ((D(i.labelRotate, a.get('rotate')) || 0) * iM) / 180,
        u = oM(i.rotation, l, i.labelDirection),
        h = e.getCategories && e.getCategories(!0),
        c = [],
        d = sM(e),
        p = e.get('triggerEvent');
      return (
        f(s, function (r, s) {
          var l = r.tickValue,
            f = r.formattedLabel,
            g = r.rawLabel,
            m = a;
          h && h[l] && h[l].textStyle && (m = new Qa(h[l].textStyle, a, e.ecModel));
          var v = m.getTextColor() || e.get('axisLine.lineStyle.color'),
            y = n.dataToCoord(l),
            _ = [y, i.labelOffset + i.labelDirection * o],
            x = new n_({ anid: 'label_' + l, position: _, rotation: u.rotation, silent: d, z2: 10 });
          ka(x.style, m, {
            text: f,
            textAlign: m.getShallow('align', !0) || u.textAlign,
            textVerticalAlign: m.getShallow('verticalAlign', !0) || m.getShallow('baseline', !0) || u.textVerticalAlign,
            textFill: 'function' == typeof v ? v('category' === n.type ? g : 'value' === n.type ? l + '' : l, s) : v,
          }),
            p && ((x.eventData = aM(e)), (x.eventData.targetType = 'axisLabel'), (x.eventData.value = g)),
            t._dumbGroup.add(x),
            x.updateTransform(),
            c.push(x),
            t.group.add(x),
            x.decomposeTransform();
        }),
        c
      );
    }
  }
  function Ec(t, e) {
    var i = { axesInfo: {}, seriesInvolved: !1, coordSysAxesInfo: {}, coordSysMap: {} };
    return Rc(i, t, e), i.seriesInvolved && Nc(i, t), i;
  }
  function Rc(t, e, i) {
    var n = e.getComponent('tooltip'),
      r = e.getComponent('axisPointer'),
      a = r.get('link', !0) || [],
      o = [];
    lM(i.getCoordinateSystems(), function (i) {
      function s(n, s, l) {
        var h = l.model.getModel('axisPointer', r),
          d = h.get('show');
        if (d && ('auto' !== d || n || Uc(h))) {
          null == s && (s = h.get('triggerTooltip')), (h = n ? Bc(l, c, r, e, n, s) : h);
          var f = h.get('snap'),
            p = Xc(l.model),
            g = s || f || 'category' === l.type,
            m = (t.axesInfo[p] = {
              key: p,
              axis: l,
              coordSys: i,
              axisPointerModel: h,
              triggerTooltip: s,
              involveSeries: g,
              snap: f,
              useHandle: Uc(h),
              seriesModels: [],
            });
          (u[p] = m), (t.seriesInvolved |= g);
          var v = Fc(a, l);
          if (null != v) {
            var y = o[v] || (o[v] = { axesInfo: {} });
            (y.axesInfo[p] = m), (y.mapper = a[v].mapper), (m.linkGroup = y);
          }
        }
      }
      if (i.axisPointerEnabled) {
        var l = Xc(i.model),
          u = (t.coordSysAxesInfo[l] = {});
        t.coordSysMap[l] = i;
        var h = i.model,
          c = h.getModel('tooltip', n);
        if ((lM(i.getAxes(), uM(s, !1, null)), i.getTooltipAxes && n && c.get('show'))) {
          var d = 'axis' === c.get('trigger'),
            f = 'cross' === c.get('axisPointer.type'),
            p = i.getTooltipAxes(c.get('axisPointer.axis'));
          (d || f) && lM(p.baseAxes, uM(s, f ? 'cross' : !0, d)), f && lM(p.otherAxes, uM(s, 'cross', !1));
        }
      }
    });
  }
  function Bc(t, e, i, r, a, o) {
    var l = e.getModel('axisPointer'),
      u = {};
    lM(
      [
        'type',
        'snap',
        'lineStyle',
        'shadowStyle',
        'label',
        'animation',
        'animationDurationUpdate',
        'animationEasingUpdate',
        'z',
      ],
      function (t) {
        u[t] = n(l.get(t));
      },
    ),
      (u.snap = 'category' !== t.type && !!o),
      'cross' === l.get('type') && (u.type = 'line');
    var h = u.label || (u.label = {});
    if ((null == h.show && (h.show = !1), 'cross' === a)) {
      var c = l.get('label.show');
      if (((h.show = null != c ? c : !0), !o)) {
        var d = (u.lineStyle = l.get('crossStyle'));
        d && s(h, d.textStyle);
      }
    }
    return t.model.getModel('axisPointer', new Qa(u, i, r));
  }
  function Nc(t, e) {
    e.eachSeries(function (e) {
      var i = e.coordinateSystem,
        n = e.get('tooltip.trigger', !0),
        r = e.get('tooltip.show', !0);
      i &&
        'none' !== n &&
        n !== !1 &&
        'item' !== n &&
        r !== !1 &&
        e.get('axisPointer.show', !0) !== !1 &&
        lM(t.coordSysAxesInfo[Xc(i.model)], function (t) {
          var n = t.axis;
          i.getAxis(n.dim) === n &&
            (t.seriesModels.push(e),
            null == t.seriesDataCount && (t.seriesDataCount = 0),
            (t.seriesDataCount += e.getData().count()));
        });
    }, this);
  }
  function Fc(t, e) {
    for (var i = e.model, n = e.dim, r = 0; r < t.length; r++) {
      var a = t[r] || {};
      if (Gc(a[n + 'AxisId'], i.id) || Gc(a[n + 'AxisIndex'], i.componentIndex) || Gc(a[n + 'AxisName'], i.name))
        return r;
    }
  }
  function Gc(t, e) {
    return 'all' === t || (x(t) && u(t, e) >= 0) || t === e;
  }
  function Vc(t) {
    var e = Hc(t);
    if (e) {
      var i = e.axisPointerModel,
        n = e.axis.scale,
        r = i.option,
        a = i.get('status'),
        o = i.get('value');
      null != o && (o = n.parse(o));
      var s = Uc(i);
      null == a && (r.status = s ? 'show' : 'hide');
      var l = n.getExtent().slice();
      l[0] > l[1] && l.reverse(),
        (null == o || o > l[1]) && (o = l[1]),
        o < l[0] && (o = l[0]),
        (r.value = o),
        s && (r.status = e.axis.scale.isBlank() ? 'hide' : 'show');
    }
  }
  function Hc(t) {
    var e = (t.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;
    return e && e.axesInfo[Xc(t)];
  }
  function Wc(t) {
    var e = Hc(t);
    return e && e.axisPointerModel;
  }
  function Uc(t) {
    return !!t.get('handle.show');
  }
  function Xc(t) {
    return t.type + '||' + t.id;
  }
  function Yc(t, e, i, n, r, a) {
    var o = hM.getAxisPointerClass(t.axisPointerClass);
    if (o) {
      var s = Wc(e);
      s ? (t._axisPointer || (t._axisPointer = new o())).render(e, s, n, a) : Zc(t, n);
    }
  }
  function Zc(t, e, i) {
    var n = t._axisPointer;
    n && n.dispose(e, i), (t._axisPointer = null);
  }
  function jc(t, e, i) {
    i = i || {};
    var n = t.coordinateSystem,
      r = e.axis,
      a = {},
      o = r.getAxesOnZeroOf()[0],
      s = r.position,
      l = o ? 'onZero' : s,
      u = r.dim,
      h = n.getRect(),
      c = [h.x, h.x + h.width, h.y, h.y + h.height],
      d = { left: 0, right: 1, top: 0, bottom: 1, onZero: 2 },
      f = e.get('offset') || 0,
      p = 'x' === u ? [c[2] - f, c[3] + f] : [c[0] - f, c[1] + f];
    if (o) {
      var g = o.toGlobalCoord(o.dataToCoord(0));
      p[d.onZero] = Math.max(Math.min(g, p[1]), p[0]);
    }
    (a.position = ['y' === u ? p[d[l]] : c[0], 'x' === u ? p[d[l]] : c[3]]),
      (a.rotation = (Math.PI / 2) * ('x' === u ? 0 : 1));
    var m = { top: -1, bottom: 1, left: -1, right: 1 };
    (a.labelDirection = a.tickDirection = a.nameDirection = m[s]),
      (a.labelOffset = o ? p[d[s]] - p[d.onZero] : 0),
      e.get('axisTick.inside') && (a.tickDirection = -a.tickDirection),
      D(i.labelInside, e.get('axisLabel.inside')) && (a.labelDirection = -a.labelDirection);
    var v = e.get('axisLabel.rotate');
    return (a.labelRotate = 'top' === l ? -v : v), (a.z2 = 1), a;
  }
  function qc(t, e, i) {
    Wm.call(this), this.updateData(t, e, i);
  }
  function Kc(t) {
    return [t[0] / 2, t[1] / 2];
  }
  function $c(t, e) {
    this.parent.drift(t, e);
  }
  function Jc(t, e) {
    if (!this.incremental && !this.useHoverLayer)
      if ('emphasis' === e) {
        var i = this.__symbolOriginalScale,
          n = i[1] / i[0],
          r = { scale: [Math.max(1.1 * i[0], i[0] + 3), Math.max(1.1 * i[1], i[1] + 3 * n)] };
        this.animateTo(r, 400, 'elasticOut');
      } else 'normal' === e && this.animateTo({ scale: this.__symbolOriginalScale }, 400, 'elasticOut');
  }
  function Qc(t) {
    (this.group = new Wm()), (this._symbolCtor = t || qc);
  }
  function td(t, e, i, n) {
    return !(
      !e ||
      isNaN(e[0]) ||
      isNaN(e[1]) ||
      (n.isIgnore && n.isIgnore(i)) ||
      (n.clipShape && !n.clipShape.contain(e[0], e[1])) ||
      'none' === t.getItemVisual(i, 'symbol')
    );
  }
  function ed(t) {
    return null == t || S(t) || (t = { isIgnore: t }), t || {};
  }
  function id(t) {
    var e = t.hostModel;
    return {
      itemStyle: e.getModel('itemStyle').getItemStyle(['color']),
      hoverItemStyle: e.getModel('emphasis.itemStyle').getItemStyle(),
      symbolRotate: e.get('symbolRotate'),
      symbolOffset: e.get('symbolOffset'),
      hoverAnimation: e.get('hoverAnimation'),
      labelModel: e.getModel('label'),
      hoverLabelModel: e.getModel('emphasis.label'),
      cursorStyle: e.get('cursor'),
    };
  }
  function nd(t, e, i) {
    var n,
      r = t.getBaseAxis(),
      a = t.getOtherAxis(r),
      o = rd(a, i),
      s = r.dim,
      l = a.dim,
      u = e.mapDimension(l),
      h = e.mapDimension(s),
      c = 'x' === l || 'radius' === l ? 1 : 0,
      d = p(t.dimensions, function (t) {
        return e.mapDimension(t);
      }),
      f = e.getCalculationInfo('stackResultDimension');
    return (
      (n |= Ku(e, d[0])) && (d[0] = f),
      (n |= Ku(e, d[1])) && (d[1] = f),
      {
        dataDimsForPoint: d,
        valueStart: o,
        valueAxisDim: l,
        baseAxisDim: s,
        stacked: !!n,
        valueDim: u,
        baseDim: h,
        baseDataOffset: c,
        stackedOverDimension: e.getCalculationInfo('stackedOverDimension'),
      }
    );
  }
  function rd(t, e) {
    var i = 0,
      n = t.scale.getExtent();
    return 'start' === e ? (i = n[0]) : 'end' === e ? (i = n[1]) : n[0] > 0 ? (i = n[0]) : n[1] < 0 && (i = n[1]), i;
  }
  function ad(t, e, i, n) {
    var r = 0 / 0;
    t.stacked && (r = i.get(i.getCalculationInfo('stackedOverDimension'), n)), isNaN(r) && (r = t.valueStart);
    var a = t.baseDataOffset,
      o = [];
    return (o[a] = i.get(t.baseDim, n)), (o[1 - a] = r), e.dataToPoint(o);
  }
  function od(t, e) {
    var i = [];
    return (
      e
        .diff(t)
        .add(function (t) {
          i.push({ cmd: '+', idx: t });
        })
        .update(function (t, e) {
          i.push({ cmd: '=', idx: e, idx1: t });
        })
        .remove(function (t) {
          i.push({ cmd: '-', idx: t });
        })
        .execute(),
      i
    );
  }
  function sd(t) {
    return isNaN(t[0]) || isNaN(t[1]);
  }
  function ld(t, e, i, n, r, a, o, s, l, u) {
    return 'none' !== u && u ? ud.apply(this, arguments) : hd.apply(this, arguments);
  }
  function ud(t, e, i, n, r, a, o, s, l, u, h) {
    for (var c = 0, d = i, f = 0; n > f; f++) {
      var p = e[d];
      if (d >= r || 0 > d) break;
      if (sd(p)) {
        if (h) {
          d += a;
          continue;
        }
        break;
      }
      if (d === i) t[a > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);
      else if (l > 0) {
        var g = e[c],
          m = 'y' === u ? 1 : 0,
          v = (p[m] - g[m]) * l;
        CM(DM, g),
          (DM[m] = g[m] + v),
          CM(AM, p),
          (AM[m] = p[m] - v),
          t.bezierCurveTo(DM[0], DM[1], AM[0], AM[1], p[0], p[1]);
      } else t.lineTo(p[0], p[1]);
      (c = d), (d += a);
    }
    return f;
  }
  function hd(t, e, i, n, r, a, o, s, l, u, h) {
    for (var c = 0, d = i, f = 0; n > f; f++) {
      var p = e[d];
      if (d >= r || 0 > d) break;
      if (sd(p)) {
        if (h) {
          d += a;
          continue;
        }
        break;
      }
      if (d === i) t[a > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]), CM(DM, p);
      else if (l > 0) {
        var g = d + a,
          m = e[g];
        if (h) for (; m && sd(e[g]); ) (g += a), (m = e[g]);
        var v = 0.5,
          y = e[c],
          m = e[g];
        if (!m || sd(m)) CM(AM, p);
        else {
          sd(m) && !h && (m = p), Z(TM, m, y);
          var _, x;
          if ('x' === u || 'y' === u) {
            var w = 'x' === u ? 0 : 1;
            (_ = Math.abs(p[w] - y[w])), (x = Math.abs(p[w] - m[w]));
          } else (_ = jg(p, y)), (x = jg(p, m));
          (v = x / (x + _)), IM(AM, p, TM, -l * (1 - v));
        }
        SM(DM, DM, s),
          MM(DM, DM, o),
          SM(AM, AM, s),
          MM(AM, AM, o),
          t.bezierCurveTo(DM[0], DM[1], AM[0], AM[1], p[0], p[1]),
          IM(DM, p, TM, l * v);
      } else t.lineTo(p[0], p[1]);
      (c = d), (d += a);
    }
    return f;
  }
  function cd(t, e) {
    var i = [1 / 0, 1 / 0],
      n = [-1 / 0, -1 / 0];
    if (e)
      for (var r = 0; r < t.length; r++) {
        var a = t[r];
        a[0] < i[0] && (i[0] = a[0]),
          a[1] < i[1] && (i[1] = a[1]),
          a[0] > n[0] && (n[0] = a[0]),
          a[1] > n[1] && (n[1] = a[1]);
      }
    return { min: e ? i : n, max: e ? n : i };
  }
  function dd(t, e) {
    if (t.length === e.length) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i],
          r = e[i];
        if (n[0] !== r[0] || n[1] !== r[1]) return;
      }
      return !0;
    }
  }
  function fd(t) {
    return 'number' == typeof t ? t : t ? 0.5 : 0;
  }
  function pd(t, e, i) {
    if (!i.valueDim) return [];
    for (var n = [], r = 0, a = e.count(); a > r; r++) n.push(ad(i, t, e, r));
    return n;
  }
  function gd(t, e, i) {
    for (
      var n = e.getBaseAxis(), r = 'x' === n.dim || 'radius' === n.dim ? 0 : 1, a = [], o = 0;
      o < t.length - 1;
      o++
    ) {
      var s = t[o + 1],
        l = t[o];
      a.push(l);
      var u = [];
      switch (i) {
        case 'end':
          (u[r] = s[r]), (u[1 - r] = l[1 - r]), a.push(u);
          break;
        case 'middle':
          var h = (l[r] + s[r]) / 2,
            c = [];
          (u[r] = c[r] = h), (u[1 - r] = l[1 - r]), (c[1 - r] = s[1 - r]), a.push(u), a.push(c);
          break;
        default:
          (u[r] = l[r]), (u[1 - r] = s[1 - r]), a.push(u);
      }
    }
    return t[o] && a.push(t[o]), a;
  }
  function md(t, e) {
    var i = t.getVisual('visualMeta');
    if (i && i.length && t.count()) {
      if ('cartesian2d' !== e.type)
        return void (Cg && console.warn('Visual map on line style is only supported on cartesian2d.'));
      for (var n, r, a = i.length - 1; a >= 0; a--) {
        var o = i[a].dimension,
          s = t.dimensions[o],
          l = t.getDimensionInfo(s);
        if (((n = l && l.coordDim), 'x' === n || 'y' === n)) {
          r = i[a];
          break;
        }
      }
      if (!r) return void (Cg && console.warn('Visual map on line style only support x or y dimension.'));
      var u = e.getAxis(n),
        h = p(r.stops, function (t) {
          return { coord: u.toGlobalCoord(u.dataToCoord(t.value)), color: t.color };
        }),
        c = h.length,
        d = r.outerColors.slice();
      c && h[0].coord > h[c - 1].coord && (h.reverse(), d.reverse());
      var g = 10,
        m = h[0].coord - g,
        v = h[c - 1].coord + g,
        y = v - m;
      if (0.001 > y) return 'transparent';
      f(h, function (t) {
        t.offset = (t.coord - m) / y;
      }),
        h.push({ offset: c ? h[c - 1].offset : 0.5, color: d[1] || 'transparent' }),
        h.unshift({ offset: c ? h[0].offset : 0.5, color: d[0] || 'transparent' });
      var _ = new S_(0, 0, 0, 0, h, !0);
      return (_[n] = m), (_[n + '2'] = v), _;
    }
  }
  function vd(t, e, i) {
    var n = t.get('showAllSymbol'),
      r = 'auto' === n;
    if (!n || r) {
      var a = i.getAxesByScale('ordinal')[0];
      if (a && (!r || !yd(a, e))) {
        var o = e.mapDimension(a.dim),
          s = {};
        return (
          f(a.getViewLabels(), function (t) {
            s[t.tickValue] = 1;
          }),
          function (t) {
            return !s.hasOwnProperty(e.get(o, t));
          }
        );
      }
    }
  }
  function yd(t, e) {
    var i = t.getExtent(),
      n = Math.abs(i[1] - i[0]) / t.scale.count();
    isNaN(n) && (n = 0);
    for (var r = e.count(), a = Math.max(1, Math.round(r / 5)), o = 0; r > o; o += a)
      if (1.5 * qc.getSymbolSize(e, o)[t.isHorizontal() ? 1 : 0] > n) return !1;
    return !0;
  }
  function _d(t, e, i) {
    if ('cartesian2d' === t.type) {
      var n = t.getBaseAxis().isHorizontal(),
        r = vc(t, e, i);
      if (!i.get('clip', !0)) {
        var a = r.shape,
          o = Math.max(a.width, a.height);
        n ? ((a.y -= o), (a.height += 2 * o)) : ((a.x -= o), (a.width += 2 * o));
      }
      return r;
    }
    return yc(t, e, i);
  }
  function xd(t, e, i, n) {
    var r = e.getData(),
      a = this.dataIndex,
      o = r.getName(a),
      s = e.get('selectedOffset');
    n.dispatchAction({ type: 'pieToggleSelect', from: t, name: o, seriesId: e.id }),
      r.each(function (t) {
        wd(r.getItemGraphicEl(t), r.getItemLayout(t), e.isSelected(r.getName(t)), s, i);
      });
  }
  function wd(t, e, i, n, r) {
    var a = (e.startAngle + e.endAngle) / 2,
      o = Math.cos(a),
      s = Math.sin(a),
      l = i ? n : 0,
      u = [o * l, s * l];
    r ? t.animate().when(200, { position: u }).start('bounceOut') : t.attr('position', u);
  }
  function bd(t, e) {
    Wm.call(this);
    var i = new s_({ z2: 2 }),
      n = new d_(),
      r = new n_();
    this.add(i), this.add(n), this.add(r), this.updateData(t, e, !0);
  }
  function Sd(t, e, i, n, r, a, o) {
    function s(e, i, n) {
      for (var r = e; i > r; r++)
        if (((t[r].y += n), r > e && i > r + 1 && t[r + 1].y > t[r].y + t[r].height)) return void l(r, n / 2);
      l(i - 1, n / 2);
    }
    function l(e, i) {
      for (var n = e; n >= 0 && ((t[n].y -= i), !(n > 0 && t[n].y > t[n - 1].y + t[n - 1].height)); n--);
    }
    function u(t, e, i, n, r, a) {
      for (var o = a > 0 ? (e ? Number.MAX_VALUE : 0) : e ? Number.MAX_VALUE : 0, s = 0, l = t.length; l > s; s++) {
        var u = Math.abs(t[s].y - n),
          h = t[s].len,
          c = t[s].len2,
          d = r + h > u ? Math.sqrt((r + h + c) * (r + h + c) - u * u) : Math.abs(t[s].x - i);
        e && d >= o && (d = o - 10), !e && o >= d && (d = o + 10), (t[s].x = i + d * a), (o = d);
      }
    }
    t.sort(function (t, e) {
      return t.y - e.y;
    });
    for (var h, c = 0, d = t.length, f = [], p = [], g = 0; d > g; g++)
      (h = t[g].y - c), 0 > h && s(g, d, -h, r), (c = t[g].y + t[g].height);
    0 > o - c && l(d - 1, c - o);
    for (var g = 0; d > g; g++) t[g].y >= i ? p.push(t[g]) : f.push(t[g]);
    u(f, !1, e, i, n, r), u(p, !0, e, i, n, r);
  }
  function Md(t, e, i, n, r, a) {
    for (var o = [], s = [], l = 0; l < t.length; l++) Id(t[l]) || (t[l].x < e ? o.push(t[l]) : s.push(t[l]));
    Sd(s, e, i, n, 1, r, a), Sd(o, e, i, n, -1, r, a);
    for (var l = 0; l < t.length; l++)
      if (!Id(t[l])) {
        var u = t[l].linePoints;
        if (u) {
          var h = u[1][0] - u[2][0];
          (u[2][0] = t[l].x < e ? t[l].x + 3 : t[l].x - 3), (u[1][1] = u[2][1] = t[l].y), (u[1][0] = u[2][0] + h);
        }
      }
  }
  function Id(t) {
    return 'center' === t.position;
  }
  function Cd() {
    this.group = new Wm();
  }
  function Td(t) {
    return x(t) || (t = [+t, +t]), t;
  }
  function Dd(t, e) {
    var i = e.rippleEffectColor || e.color;
    t.eachChild(function (t) {
      t.attr({
        z: e.z,
        zlevel: e.zlevel,
        style: { stroke: 'stroke' === e.brushType ? i : null, fill: 'fill' === e.brushType ? i : null },
      });
    });
  }
  function Ad(t, e) {
    Wm.call(this);
    var i = new qc(t, e),
      n = new Wm();
    this.add(i),
      this.add(n),
      (n.beforeUpdate = function () {
        this.attr(i.getScale());
      }),
      this.updateData(t, e);
  }
  function kd(t, e, i) {
    kS.call(this, t, e, i), (this.type = 'value'), (this.angle = 0), (this.name = ''), this.model;
  }
  function Pd(t, e, i) {
    (this._model = t),
      (this.dimensions = []),
      (this._indicatorAxes = p(
        t.getIndicatorModels(),
        function (t, e) {
          var i = 'indicator_' + e,
            n = new kd(i, new Xb());
          return (n.name = t.get('name')), (n.model = t), (t.axis = n), this.dimensions.push(i), n;
        },
        this,
      )),
      this.resize(t, i),
      this.cx,
      this.cy,
      this.r,
      this.r0,
      this.startAngle;
  }
  function Ld(t, e) {
    return s({ show: e }, t);
  }
  function Od(t) {
    return x(t) || (t = [+t, +t]), t;
  }
  function zd(t) {
    return !isNaN(t[0]) && !isNaN(t[1]);
  }
  function Ed(t) {
    return [t.cx, t.cy];
  }
  function Rd(t) {
    for (var e, i = 0; i < t.length; i++) {
      var n = t[i].getBoundingRect();
      (e = e || n.clone()), e.union(n);
    }
    return e;
  }
  function Bd(t, e) {
    var i,
      n,
      r = t.svgXML;
    try {
      (i = (r && kl(r, { ignoreViewBox: !0, ignoreRootClip: !0 })) || {}), (n = i.root), O(null != n);
    } catch (a) {
      throw new Error('Invalid svg format\n' + a.message);
    }
    var o = i.width,
      s = i.height,
      l = i.viewBoxRect;
    if (
      (e ||
        ((e = null == o || null == s ? n.getBoundingRect() : new wi(0, 0, 0, 0)),
        null != o && (e.width = o),
        null != s && (e.height = s)),
      l)
    ) {
      var u = Al(l, e.width, e.height),
        h = n;
      (n = new Wm()), n.add(h), (h.scale = u.scale), (h.position = u.position);
    }
    return n.setClipPath(new g_({ shape: e.plain() })), { root: n, boundingRect: e };
  }
  function Nd(t) {
    return function (e, i) {
      var n = Gd(e),
        r = [];
      return (
        f(n, function (n) {
          var a = xI[n.type][t];
          a && r.push(a(e, n, i));
        }),
        r
      );
    };
  }
  function Fd(t) {
    Cg && console.error('Map ' + t + ' not exists. The GeoJSON of the map must be provided.');
  }
  function Gd(t) {
    var e = Rw.retrieveMap(t) || [];
    return Cg && (e.length || Fd(t)), e;
  }
  function Vd(t, e) {
    return !!Hd(t)[e];
  }
  function Hd(t) {
    return t[SI] || (t[SI] = {});
  }
  function Wd(t) {
    this.pointerChecker, (this._zr = t), (this._opt = {});
    var e = y,
      i = e(Ud, this),
      r = e(Xd, this),
      a = e(Yd, this),
      o = e(Zd, this),
      l = e(jd, this);
    Jg.call(this),
      (this.setPointerChecker = function (t) {
        this.pointerChecker = t;
      }),
      (this.enable = function (e, u) {
        this.disable(),
          (this._opt = s(n(u) || {}, {
            zoomOnMouseWheel: !0,
            moveOnMouseMove: !0,
            moveOnMouseWheel: !1,
            preventDefaultMouseMove: !0,
          })),
          null == e && (e = !0),
          (e === !0 || 'move' === e || 'pan' === e) && (t.on('mousedown', i), t.on('mousemove', r), t.on('mouseup', a)),
          (e === !0 || 'scale' === e || 'zoom' === e) && (t.on('mousewheel', o), t.on('pinch', l));
      }),
      (this.disable = function () {
        t.off('mousedown', i), t.off('mousemove', r), t.off('mouseup', a), t.off('mousewheel', o), t.off('pinch', l);
      }),
      (this.dispose = this.disable),
      (this.isDragging = function () {
        return this._dragging;
      }),
      (this.isPinching = function () {
        return this._pinching;
      });
  }
  function Ud(t) {
    if (!(we(t) || (t.target && t.target.draggable))) {
      var e = t.offsetX,
        i = t.offsetY;
      this.pointerChecker && this.pointerChecker(t, e, i) && ((this._x = e), (this._y = i), (this._dragging = !0));
    }
  }
  function Xd(t) {
    if (
      this._dragging &&
      $d('moveOnMouseMove', t, this._opt) &&
      'pinch' !== t.gestureEvent &&
      !Vd(this._zr, 'globalPan')
    ) {
      var e = t.offsetX,
        i = t.offsetY,
        n = this._x,
        r = this._y,
        a = e - n,
        o = i - r;
      (this._x = e),
        (this._y = i),
        this._opt.preventDefaultMouseMove && rm(t.event),
        Kd(this, 'pan', 'moveOnMouseMove', t, { dx: a, dy: o, oldX: n, oldY: r, newX: e, newY: i });
    }
  }
  function Yd(t) {
    we(t) || (this._dragging = !1);
  }
  function Zd(t) {
    var e = $d('zoomOnMouseWheel', t, this._opt),
      i = $d('moveOnMouseWheel', t, this._opt),
      n = t.wheelDelta,
      r = Math.abs(n),
      a = t.offsetX,
      o = t.offsetY;
    if (0 !== n && (e || i)) {
      if (e) {
        var s = r > 3 ? 1.4 : r > 1 ? 1.2 : 1.1,
          l = n > 0 ? s : 1 / s;
        qd(this, 'zoom', 'zoomOnMouseWheel', t, { scale: l, originX: a, originY: o });
      }
      if (i) {
        var u = Math.abs(n),
          h = (n > 0 ? 1 : -1) * (u > 3 ? 0.4 : u > 1 ? 0.15 : 0.05);
        qd(this, 'scrollMove', 'moveOnMouseWheel', t, { scrollDelta: h, originX: a, originY: o });
      }
    }
  }
  function jd(t) {
    if (!Vd(this._zr, 'globalPan')) {
      var e = t.pinchScale > 1 ? 1.1 : 1 / 1.1;
      qd(this, 'zoom', null, t, { scale: e, originX: t.pinchX, originY: t.pinchY });
    }
  }
  function qd(t, e, i, n, r) {
    t.pointerChecker && t.pointerChecker(n, r.originX, r.originY) && (rm(n.event), Kd(t, e, i, n, r));
  }
  function Kd(t, e, i, n, r) {
    (r.isAvailableBehavior = y($d, null, i, n)), t.trigger(e, r);
  }
  function $d(t, e, i) {
    var n = i[t];
    return !t || (n && (!b(n) || e.event[n + 'Key']));
  }
  function Jd(t, e, i) {
    var n = t.target,
      r = n.position;
    (r[0] += e), (r[1] += i), n.dirty();
  }
  function Qd(t, e, i, n) {
    var r = t.target,
      a = t.zoomLimit,
      o = r.position,
      s = r.scale,
      l = (t.zoom = t.zoom || 1);
    if (((l *= e), a)) {
      var u = a.min || 0,
        h = a.max || 1 / 0;
      l = Math.max(Math.min(h, l), u);
    }
    var c = l / t.zoom;
    (t.zoom = l), (o[0] -= (i - o[0]) * (c - 1)), (o[1] -= (n - o[1]) * (c - 1)), (s[0] *= c), (s[1] *= c), r.dirty();
  }
  function tf(t, e, i) {
    var n = e.getComponentByElement(t.topTarget),
      r = n && n.coordinateSystem;
    return n && n !== i && !MI[n.mainType] && r && r.model !== i;
  }
  function ef(t) {
    var e = t.getItemStyle(),
      i = t.get('areaColor');
    return null != i && (e.fill = i), e;
  }
  function nf(t, e, i, n, r) {
    i.off('click'),
      i.off('mousedown'),
      e.get('selectedMode') &&
        (i.on('mousedown', function () {
          t._mouseDownFlag = !0;
        }),
        i.on('click', function (a) {
          if (t._mouseDownFlag) {
            t._mouseDownFlag = !1;
            for (var o = a.target; !o.__regions; ) o = o.parent;
            if (o) {
              var s = {
                type: ('geo' === e.mainType ? 'geo' : 'map') + 'ToggleSelect',
                batch: p(o.__regions, function (t) {
                  return { name: t.name, from: r.uid };
                }),
              };
              (s[e.mainType + 'Id'] = e.id), n.dispatchAction(s), rf(e, i);
            }
          }
        }));
  }
  function rf(t, e) {
    e.eachChild(function (e) {
      f(e.__regions, function (i) {
        e.trigger(t.isSelected(i.name) ? 'emphasis' : 'normal');
      });
    });
  }
  function af(t, e) {
    var i = new Wm();
    (this.uid = io('ec_map_draw')),
      (this._controller = new Wd(t.getZr())),
      (this._controllerHost = { target: e ? i : null }),
      (this.group = i),
      (this._updateGroup = e),
      this._mouseDownFlag,
      this._mapName,
      this._initialized,
      i.add((this._regionsGroup = new Wm())),
      i.add((this._backgroundGroup = new Wm()));
  }
  function of(t) {
    var e = this[II];
    e && e.recordVersion === this[CI] && sf(e, t);
  }
  function sf(t, e) {
    var i = t.circle,
      n = t.labelModel,
      r = t.hoverLabelModel,
      a = t.emphasisText,
      o = t.normalText;
    e
      ? (i.style.extendFrom(ka({}, r, { text: r.get('show') ? a : null }, { isRectText: !0, useInsideStyle: !1 }, !0)),
        (i.__mapOriginalZ2 = i.z2),
        (i.z2 += A_))
      : (ka(
          i.style,
          n,
          { text: n.get('show') ? o : null, textPosition: n.getShallow('position') || 'bottom' },
          { isRectText: !0, useInsideStyle: !1 },
        ),
        i.dirty(!1),
        null != i.__mapOriginalZ2 && ((i.z2 = i.__mapOriginalZ2), (i.__mapOriginalZ2 = null)));
  }
  function lf(t, e, i) {
    var n = t.getZoom(),
      r = t.getCenter(),
      a = e.zoom,
      o = t.dataToPoint(r);
    if (null != e.dx && null != e.dy) {
      (o[0] -= e.dx), (o[1] -= e.dy);
      var r = t.pointToData(o);
      t.setCenter(r);
    }
    if (null != a) {
      if (i) {
        var s = i.min || 0,
          l = i.max || 1 / 0;
        a = Math.max(Math.min(n * a, l), s) / n;
      }
      (t.scale[0] *= a), (t.scale[1] *= a);
      var u = t.position,
        h = (e.originX - u[0]) * (a - 1),
        c = (e.originY - u[1]) * (a - 1);
      (u[0] -= h), (u[1] -= c), t.updateTransform();
      var r = t.pointToData(o);
      t.setCenter(r), t.setZoom(a * n);
    }
    return { center: t.getCenter(), zoom: t.getZoom() };
  }
  function uf() {
    pm.call(this);
  }
  function hf(t) {
    (this.name = t),
      this.zoomLimit,
      pm.call(this),
      (this._roamTransformable = new uf()),
      (this._rawTransformable = new uf()),
      this._center,
      this._zoom;
  }
  function cf(t, e, i, n) {
    var r = i.seriesModel,
      a = r ? r.coordinateSystem : null;
    return a === this ? a[t](n) : null;
  }
  function df(t, e, i, n) {
    hf.call(this, t), (this.map = e);
    var r = wI.load(e, i);
    (this._nameCoordMap = r.nameCoordMap),
      (this._regionsMap = r.regionsMap),
      (this._invertLongitute = null == n ? !0 : n),
      (this.regions = r.regions),
      (this._rect = r.boundingRect);
  }
  function ff(t, e, i, n) {
    var r = i.geoModel,
      a = i.seriesModel,
      o = r
        ? r.coordinateSystem
        : a
        ? a.coordinateSystem || (a.getReferringComponents('geo')[0] || {}).coordinateSystem
        : null;
    return o === this ? o[t](n) : null;
  }
  function pf(t, e) {
    var i = t.get('boundingCoords');
    if (null != i) {
      var n = i[0],
        r = i[1];
      isNaN(n[0]) || isNaN(n[1]) || isNaN(r[0]) || isNaN(r[1])
        ? Cg && console.error('Invalid boundingCoords')
        : this.setBoundingRect(n[0], n[1], r[0] - n[0], r[1] - n[1]);
    }
    var a,
      o = this.getBoundingRect(),
      s = t.get('layoutCenter'),
      l = t.get('layoutSize'),
      u = e.getWidth(),
      h = e.getHeight(),
      c = (o.width / o.height) * this.aspectScale,
      d = !1;
    s &&
      l &&
      ((s = [so(s[0], u), so(s[1], h)]),
      (l = so(l, Math.min(u, h))),
      isNaN(s[0]) || isNaN(s[1]) || isNaN(l)
        ? Cg && console.warn('Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.')
        : (d = !0));
    var f;
    if (d) {
      var f = {};
      c > 1 ? ((f.width = l), (f.height = l / c)) : ((f.height = l), (f.width = l * c)),
        (f.y = s[1] - f.height / 2),
        (f.x = s[0] - f.width / 2);
    } else (a = t.getBoxLayoutParams()), (a.aspect = c), (f = Ro(a, { width: u, height: h }));
    this.setViewRect(f.x, f.y, f.width, f.height), this.setCenter(t.get('center')), this.setZoom(t.get('zoom'));
  }
  function gf(t, e) {
    f(e.get('geoCoord'), function (e, i) {
      t.addGeoCoord(i, e);
    });
  }
  function mf(t, e) {
    var i = {};
    return (
      f(t, function (t) {
        t.each(t.mapDimension('value'), function (e, n) {
          var r = 'ec-' + t.getName(n);
          (i[r] = i[r] || []), isNaN(e) || i[r].push(e);
        });
      }),
      t[0].map(t[0].mapDimension('value'), function (n, r) {
        for (var a = 'ec-' + t[0].getName(r), o = 0, s = 1 / 0, l = -1 / 0, u = i[a].length, h = 0; u > h; h++)
          (s = Math.min(s, i[a][h])), (l = Math.max(l, i[a][h])), (o += i[a][h]);
        var c;
        return (c = 'min' === e ? s : 'max' === e ? l : 'average' === e ? o / u : o), 0 === u ? 0 / 0 : c;
      })
    );
  }
  function vf(t) {
    var e = t.data;
    e &&
      e[0] &&
      e[0][0] &&
      e[0][0].coord &&
      (Cg && console.warn('Lines data configuration has been changed to { coords:[[1,2],[2,3]] }'),
      (t.data = p(e, function (t) {
        var e = [t[0].coord, t[1].coord],
          i = { coords: e };
        return t[0].name && (i.fromName = t[0].name), t[1].name && (i.toName = t[1].name), a([i, t[0], t[1]]);
      })));
  }
  function yf(t) {
    return isNaN(+t.cpx1) || isNaN(+t.cpy1);
  }
  function _f(t) {
    return '_' + t + 'Type';
  }
  function xf(t, e, i) {
    var n = e.getItemVisual(i, 'color'),
      r = e.getItemVisual(i, t),
      a = e.getItemVisual(i, t + 'Size');
    if (r && 'none' !== r) {
      x(a) || (a = [a, a]);
      var o = Oh(r, -a[0] / 2, -a[1] / 2, a[0], a[1], n);
      return (o.name = t), o;
    }
  }
  function wf(t) {
    var e = new NI({ name: 'line', subPixelOptimize: !0 });
    return bf(e.shape, t), e;
  }
  function bf(t, e) {
    (t.x1 = e[0][0]), (t.y1 = e[0][1]), (t.x2 = e[1][0]), (t.y2 = e[1][1]), (t.percent = 1);
    var i = e[2];
    i ? ((t.cpx1 = i[0]), (t.cpy1 = i[1])) : ((t.cpx1 = 0 / 0), (t.cpy1 = 0 / 0));
  }
  function Sf() {
    var t = this,
      e = t.childOfName('fromSymbol'),
      i = t.childOfName('toSymbol'),
      n = t.childOfName('label');
    if (e || i || !n.ignore) {
      for (var r = 1, a = this.parent; a; ) a.scale && (r /= a.scale[0]), (a = a.parent);
      var o = t.childOfName('line');
      if (this.__dirty || o.__dirty) {
        var s = o.shape.percent,
          l = o.pointAt(0),
          u = o.pointAt(s),
          h = Z([], u, l);
        if ((te(h, h), e)) {
          e.attr('position', l);
          var c = o.tangentAt(0);
          e.attr('rotation', Math.PI / 2 - Math.atan2(c[1], c[0])), e.attr('scale', [r * s, r * s]);
        }
        if (i) {
          i.attr('position', u);
          var c = o.tangentAt(1);
          i.attr('rotation', -Math.PI / 2 - Math.atan2(c[1], c[0])), i.attr('scale', [r * s, r * s]);
        }
        if (!n.ignore) {
          n.attr('position', u);
          var d,
            f,
            p,
            g = 5 * r;
          if ('end' === n.__position)
            (d = [h[0] * g + u[0], h[1] * g + u[1]]),
              (f = h[0] > 0.8 ? 'left' : h[0] < -0.8 ? 'right' : 'center'),
              (p = h[1] > 0.8 ? 'top' : h[1] < -0.8 ? 'bottom' : 'middle');
          else if ('middle' === n.__position) {
            var m = s / 2,
              c = o.tangentAt(m),
              v = [c[1], -c[0]],
              y = o.pointAt(m);
            v[1] > 0 && ((v[0] = -v[0]), (v[1] = -v[1])),
              (d = [y[0] + v[0] * g, y[1] + v[1] * g]),
              (f = 'center'),
              (p = 'bottom');
            var _ = -Math.atan2(c[1], c[0]);
            u[0] < l[0] && (_ = Math.PI + _), n.attr('rotation', _);
          } else
            (d = [-h[0] * g + l[0], -h[1] * g + l[1]]),
              (f = h[0] > 0.8 ? 'right' : h[0] < -0.8 ? 'left' : 'center'),
              (p = h[1] > 0.8 ? 'bottom' : h[1] < -0.8 ? 'top' : 'middle');
          n.attr({
            style: { textVerticalAlign: n.__verticalAlign || p, textAlign: n.__textAlign || f },
            position: d,
            scale: [r, r],
          });
        }
      }
    }
  }
  function Mf(t, e, i) {
    Wm.call(this), this._createLine(t, e, i);
  }
  function If(t) {
    (this._ctor = t || Mf), (this.group = new Wm());
  }
  function Cf(t, e, i, n) {
    var r = e.getItemLayout(i);
    if (kf(r)) {
      var a = new t._ctor(e, i, n);
      e.setItemGraphicEl(i, a), t.group.add(a);
    }
  }
  function Tf(t, e, i, n, r, a) {
    var o = e.getItemGraphicEl(n);
    return kf(i.getItemLayout(r))
      ? (o ? o.updateData(i, r, a) : (o = new t._ctor(i, r, a)), i.setItemGraphicEl(r, o), void t.group.add(o))
      : void t.group.remove(o);
  }
  function Df(t) {
    var e = t.hostModel;
    return {
      lineStyle: e.getModel('lineStyle').getLineStyle(),
      hoverLineStyle: e.getModel('emphasis.lineStyle').getLineStyle(),
      labelModel: e.getModel('label'),
      hoverLabelModel: e.getModel('emphasis.label'),
    };
  }
  function Af(t) {
    return isNaN(t[0]) || isNaN(t[1]);
  }
  function kf(t) {
    return !Af(t[0]) && !Af(t[1]);
  }
  function Pf(t, e, i) {
    Wm.call(this), this.add(this.createLine(t, e, i)), this._updateEffectSymbol(t, e);
  }
  function Lf(t, e, i) {
    Wm.call(this), this._createPolyline(t, e, i);
  }
  function Of(t, e, i) {
    Pf.call(this, t, e, i), (this._lastFrame = 0), (this._lastFramePercent = 0);
  }
  function zf() {
    this.group = new Wm();
  }
  function Ef(t) {
    return t instanceof Array || (t = [t, t]), t;
  }
  function Rf(t, e, i, n) {
    var r = t.getItemLayout(e),
      a = i.get('symbolRepeat'),
      o = i.get('symbolClip'),
      s = i.get('symbolPosition') || 'start',
      l = i.get('symbolRotate'),
      u = ((l || 0) * Math.PI) / 180 || 0,
      h = i.get('symbolPatternSize') || 2,
      c = i.isAnimationEnabled(),
      d = {
        dataIndex: e,
        layout: r,
        itemModel: i,
        symbolType: t.getItemVisual(e, 'symbol') || 'circle',
        color: t.getItemVisual(e, 'color'),
        symbolClip: o,
        symbolRepeat: a,
        symbolRepeatDirection: i.get('symbolRepeatDirection'),
        symbolPatternSize: h,
        rotation: u,
        animationModel: c ? i : null,
        hoverAnimation: c && i.get('hoverAnimation'),
        z2: i.getShallow('z', !0) || 0,
      };
    Bf(i, a, r, n, d), Ff(t, e, r, a, o, d.boundingLength, d.pxSign, h, n, d), Gf(i, d.symbolScale, u, n, d);
    var f = d.symbolSize,
      p = i.get('symbolOffset');
    return (
      x(p) && (p = [so(p[0], f[0]), so(p[1], f[1])]),
      Vf(i, f, r, a, o, p, s, d.valueLineWidth, d.boundingLength, d.repeatCutLength, n, d),
      d
    );
  }
  function Bf(t, e, i, n, r) {
    var a,
      o = n.valueDim,
      s = t.get('symbolBoundingData'),
      l = n.coordSys.getOtherAxis(n.coordSys.getBaseAxis()),
      u = l.toGlobalCoord(l.dataToCoord(0)),
      h = 1 - +(i[o.wh] <= 0);
    if (x(s)) {
      var c = [Nf(l, s[0]) - u, Nf(l, s[1]) - u];
      c[1] < c[0] && c.reverse(), (a = c[h]);
    } else a = null != s ? Nf(l, s) - u : e ? n.coordSysExtent[o.index][h] - u : i[o.wh];
    (r.boundingLength = a), e && (r.repeatCutLength = i[o.wh]), (r.pxSign = a > 0 ? 1 : 0 > a ? -1 : 0);
  }
  function Nf(t, e) {
    return t.toGlobalCoord(t.dataToCoord(t.scale.parse(e)));
  }
  function Ff(t, e, i, n, r, a, o, s, l, u) {
    var h = l.valueDim,
      c = l.categoryDim,
      d = Math.abs(i[c.wh]),
      f = t.getItemVisual(e, 'symbolSize');
    x(f) ? (f = f.slice()) : (null == f && (f = '100%'), (f = [f, f])),
      (f[c.index] = so(f[c.index], d)),
      (f[h.index] = so(f[h.index], n ? d : Math.abs(a))),
      (u.symbolSize = f);
    var p = (u.symbolScale = [f[0] / s, f[1] / s]);
    p[h.index] *= (l.isHorizontal ? -1 : 1) * o;
  }
  function Gf(t, e, i, n, r) {
    var a = t.get($I) || 0;
    a &&
      (QI.attr({ scale: e.slice(), rotation: i }),
      QI.updateTransform(),
      (a /= QI.getLineScale()),
      (a *= e[n.valueDim.index])),
      (r.valueLineWidth = a);
  }
  function Vf(t, e, i, n, r, a, s, l, u, h, c, d) {
    var f = c.categoryDim,
      p = c.valueDim,
      g = d.pxSign,
      m = Math.max(e[p.index] + l, 0),
      v = m;
    if (n) {
      var y = Math.abs(u),
        _ = D(t.get('symbolMargin'), '15%') + '',
        x = !1;
      _.lastIndexOf('!') === _.length - 1 && ((x = !0), (_ = _.slice(0, _.length - 1))), (_ = so(_, e[p.index]));
      var w = Math.max(m + 2 * _, 0),
        b = x ? 0 : 2 * _,
        S = So(n),
        M = S ? n : rp((y + b) / w),
        I = y - M * m;
      (_ = I / 2 / (x ? M : M - 1)),
        (w = m + 2 * _),
        (b = x ? 0 : 2 * _),
        S || 'fixed' === n || (M = h ? rp((Math.abs(h) + b) / w) : 0),
        (v = M * w - b),
        (d.repeatTimes = M),
        (d.symbolMargin = _);
    }
    var C = g * (v / 2),
      T = (d.pathPosition = []);
    (T[f.index] = i[f.wh] / 2),
      (T[p.index] = 'start' === s ? C : 'end' === s ? u - C : u / 2),
      a && ((T[0] += a[0]), (T[1] += a[1]));
    var A = (d.bundlePosition = []);
    (A[f.index] = i[f.xy]), (A[p.index] = i[p.xy]);
    var k = (d.barRectShape = o({}, i));
    (k[p.wh] = g * Math.max(Math.abs(i[p.wh]), Math.abs(T[p.index] + C))), (k[f.wh] = i[f.wh]);
    var P = (d.clipShape = {});
    (P[f.xy] = -i[f.xy]), (P[f.wh] = c.ecSize[f.wh]), (P[p.xy] = 0), (P[p.wh] = i[p.wh]);
  }
  function Hf(t) {
    var e = t.symbolPatternSize,
      i = Oh(t.symbolType, -e / 2, -e / 2, e, e, t.color);
    return i.attr({ culling: !0 }), 'image' !== i.type && i.setStyle({ strokeNoScale: !0 }), i;
  }
  function Wf(t, e, i, n) {
    function r(t) {
      var e = h.slice(),
        n = i.pxSign,
        r = t;
      return (
        ('start' === i.symbolRepeatDirection ? n > 0 : 0 > n) && (r = d - 1 - t),
        (e[c.index] = p * (r - d / 2 + 0.5) + h[c.index]),
        { position: e, scale: i.symbolScale.slice(), rotation: i.rotation }
      );
    }
    function a() {
      ep(t, function (t) {
        t.trigger('emphasis');
      });
    }
    function o() {
      ep(t, function (t) {
        t.trigger('normal');
      });
    }
    var s = t.__pictorialBundle,
      l = i.symbolSize,
      u = i.valueLineWidth,
      h = i.pathPosition,
      c = e.valueDim,
      d = i.repeatTimes || 0,
      f = 0,
      p = l[e.valueDim.index] + u + 2 * i.symbolMargin;
    for (
      ep(t, function (t) {
        (t.__pictorialAnimationIndex = f),
          (t.__pictorialRepeatTimes = d),
          d > f
            ? ip(t, null, r(f), i, n)
            : ip(t, null, { scale: [0, 0] }, i, n, function () {
                s.remove(t);
              }),
          Kf(t, i),
          f++;
      });
      d > f;
      f++
    ) {
      var g = Hf(i);
      (g.__pictorialAnimationIndex = f), (g.__pictorialRepeatTimes = d), s.add(g);
      var m = r(f);
      ip(g, { position: m.position, scale: [0, 0] }, { scale: m.scale, rotation: m.rotation }, i, n),
        g.on('mouseover', a).on('mouseout', o),
        Kf(g, i);
    }
  }
  function Uf(t, e, i, n) {
    function r() {
      this.trigger('emphasis');
    }
    function a() {
      this.trigger('normal');
    }
    var o = t.__pictorialBundle,
      s = t.__pictorialMainPath;
    s
      ? ip(s, null, { position: i.pathPosition.slice(), scale: i.symbolScale.slice(), rotation: i.rotation }, i, n)
      : ((s = t.__pictorialMainPath = Hf(i)),
        o.add(s),
        ip(
          s,
          { position: i.pathPosition.slice(), scale: [0, 0], rotation: i.rotation },
          { scale: i.symbolScale.slice() },
          i,
          n,
        ),
        s.on('mouseover', r).on('mouseout', a)),
      Kf(s, i);
  }
  function Xf(t, e, i) {
    var n = o({}, e.barRectShape),
      r = t.__pictorialBarRect;
    r
      ? ip(r, null, { shape: n }, e, i)
      : ((r = t.__pictorialBarRect =
          new g_({ z2: 2, shape: n, silent: !0, style: { stroke: 'transparent', fill: 'transparent', lineWidth: 0 } })),
        t.add(r));
  }
  function Yf(t, e, i, n) {
    if (i.symbolClip) {
      var r = t.__pictorialClipPath,
        a = o({}, i.clipShape),
        s = e.valueDim,
        l = i.animationModel,
        u = i.dataIndex;
      if (r) Ga(r, { shape: a }, l, u);
      else {
        (a[s.wh] = 0), (r = new g_({ shape: a })), t.__pictorialBundle.setClipPath(r), (t.__pictorialClipPath = r);
        var h = {};
        (h[s.wh] = i.clipShape[s.wh]), G_[n ? 'updateProps' : 'initProps'](r, { shape: h }, l, u);
      }
    }
  }
  function Zf(t, e) {
    var i = t.getItemModel(e);
    return (i.getAnimationDelayParams = jf), (i.isAnimationEnabled = qf), i;
  }
  function jf(t) {
    return { index: t.__pictorialAnimationIndex, count: t.__pictorialRepeatTimes };
  }
  function qf() {
    return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');
  }
  function Kf(t, e) {
    t.off('emphasis').off('normal');
    var i = e.symbolScale.slice();
    e.hoverAnimation &&
      t
        .on('emphasis', function () {
          this.animateTo({ scale: [1.1 * i[0], 1.1 * i[1]] }, 400, 'elasticOut');
        })
        .on('normal', function () {
          this.animateTo({ scale: i.slice() }, 400, 'elasticOut');
        });
  }
  function $f(t, e, i, n) {
    var r = new Wm(),
      a = new Wm();
    return (
      r.add(a),
      (r.__pictorialBundle = a),
      a.attr('position', i.bundlePosition.slice()),
      i.symbolRepeat ? Wf(r, e, i) : Uf(r, e, i),
      Xf(r, i, n),
      Yf(r, e, i, n),
      (r.__pictorialShapeStr = tp(t, i)),
      (r.__pictorialSymbolMeta = i),
      r
    );
  }
  function Jf(t, e, i) {
    var n = i.animationModel,
      r = i.dataIndex,
      a = t.__pictorialBundle;
    Ga(a, { position: i.bundlePosition.slice() }, n, r),
      i.symbolRepeat ? Wf(t, e, i, !0) : Uf(t, e, i, !0),
      Xf(t, i, !0),
      Yf(t, e, i, !0);
  }
  function Qf(t, e, i, n) {
    var r = n.__pictorialBarRect;
    r && (r.style.text = null);
    var a = [];
    ep(n, function (t) {
      a.push(t);
    }),
      n.__pictorialMainPath && a.push(n.__pictorialMainPath),
      n.__pictorialClipPath && (i = null),
      f(a, function (t) {
        Ga(t, { scale: [0, 0] }, i, e, function () {
          n.parent && n.parent.remove(n);
        });
      }),
      t.setItemGraphicEl(e, null);
  }
  function tp(t, e) {
    return [t.getItemVisual(e.dataIndex, 'symbol') || 'none', !!e.symbolRepeat, !!e.symbolClip].join(':');
  }
  function ep(t, e, i) {
    f(t.__pictorialBundle.children(), function (n) {
      n !== t.__pictorialBarRect && e.call(i, n);
    });
  }
  function ip(t, e, i, n, r, a) {
    e && t.attr(e),
      n.symbolClip && !r
        ? i && t.attr(i)
        : i && G_[r ? 'updateProps' : 'initProps'](t, i, n.animationModel, n.dataIndex, a);
  }
  function np(t, e, i) {
    var n = i.color,
      r = i.dataIndex,
      a = i.itemModel,
      o = a.getModel('itemStyle').getItemStyle(['color']),
      l = a.getModel('emphasis.itemStyle').getItemStyle(),
      u = a.getShallow('cursor');
    ep(t, function (t) {
      t.setColor(n), t.setStyle(s({ fill: n, opacity: i.opacity }, o)), Ma(t, l), u && (t.cursor = u), (t.z2 = i.z2);
    });
    var h = {},
      c = e.valueDim.posDesc[+(i.boundingLength > 0)],
      d = t.__pictorialBarRect;
    gc(d.style, h, a, n, e.seriesModel, r, c), Ma(d, h);
  }
  function rp(t) {
    var e = Math.round(t);
    return Math.abs(t - e) < 1e-4 ? e : Math.ceil(t);
  }
  function ap(t, e) {
    (e.update = 'updateView'),
      cu(e, function (e, i) {
        var n = {};
        return (
          i.eachComponent({ mainType: 'geo', query: e }, function (i) {
            i[t](e.name);
            var r = i.coordinateSystem;
            f(r.regions, function (t) {
              n[t.name] = i.isSelected(t.name) || !1;
            });
          }),
          { selected: n, name: e.name }
        );
      });
  }
  function op(t, e, i) {
    var n,
      r = {},
      a = 'toggleSelected' === t;
    return (
      i.eachComponent('legend', function (i) {
        a && null != n
          ? i[n ? 'select' : 'unSelect'](e.name)
          : 'allSelect' === t || 'inverseSelect' === t
          ? i[t]()
          : (i[t](e.name), (n = i.isSelected(e.name)));
        var o = i.getData();
        f(o, function (t) {
          var e = t.get('name');
          if ('\n' !== e && '' !== e) {
            var n = i.isSelected(e);
            r[e] = r.hasOwnProperty(e) ? r[e] && n : n;
          }
        });
      }),
      'allSelect' === t || 'inverseSelect' === t ? { selected: r } : { name: e.name, selected: r }
    );
  }
  function sp(t, e) {
    var i = J_(e.get('padding')),
      n = e.getItemStyle(['color', 'opacity']);
    n.fill = e.get('backgroundColor');
    var t = new g_({
      shape: {
        x: t.x - i[3],
        y: t.y - i[0],
        width: t.width + i[1] + i[3],
        height: t.height + i[0] + i[2],
        r: e.get('borderRadius'),
      },
      style: n,
      silent: !0,
      z2: -1,
    });
    return t;
  }
  function lp(t, e, i, n, r, a) {
    var o;
    return (
      'line' !== e && e.indexOf('empty') < 0
        ? ((o = i.getItemStyle()), (t.style.stroke = n), a || (o.stroke = r))
        : (o = i.getItemStyle(['borderWidth', 'borderColor'])),
      t.setStyle(o)
    );
  }
  function up(t, e) {
    e.dispatchAction({ type: 'legendToggleSelect', name: t });
  }
  function hp(t, e, i, n) {
    var r = i.getZr().storage.getDisplayList()[0];
    (r && r.useHoverLayer) || i.dispatchAction({ type: 'highlight', seriesName: t, name: e, excludeSeriesId: n });
  }
  function cp(t, e, i, n) {
    var r = i.getZr().storage.getDisplayList()[0];
    (r && r.useHoverLayer) || i.dispatchAction({ type: 'downplay', seriesName: t, name: e, excludeSeriesId: n });
  }
  function dp(t, e, i) {
    var n = t.getOrient(),
      r = [1, 1];
    (r[n.index] = 0), Bo(e, i, { type: 'box', ignoreSize: r });
  }
  function fp(t, e, i, n, r) {
    var a = t.axis;
    if (!a.scale.isBlank() && a.containData(e)) {
      if (!t.involveSeries) return void i.showPointer(t, e);
      var s = pp(e, t),
        l = s.payloadBatch,
        u = s.snapToValue;
      l[0] && null == r.seriesIndex && o(r, l[0]),
        !n && t.snap && a.containData(u) && null != u && (e = u),
        i.showPointer(t, e, l, r),
        i.showTooltip(t, s, u);
    }
  }
  function pp(t, e) {
    var i = e.axis,
      n = i.dim,
      r = t,
      a = [],
      o = Number.MAX_VALUE,
      s = -1;
    return (
      gC(e.seriesModels, function (e) {
        var l,
          u,
          h = e.getData().mapDimension(n, !0);
        if (e.getAxisTooltipData) {
          var c = e.getAxisTooltipData(h, t, i);
          (u = c.dataIndices), (l = c.nestestValue);
        } else {
          if (((u = e.getData().indicesOfNearest(h[0], t, 'category' === i.type ? 0.5 : null)), !u.length)) return;
          l = e.getData().get(h[0], u[0]);
        }
        if (null != l && isFinite(l)) {
          var d = t - l,
            f = Math.abs(d);
          o >= f &&
            ((o > f || (d >= 0 && 0 > s)) && ((o = f), (s = d), (r = l), (a.length = 0)),
            gC(u, function (t) {
              a.push({ seriesIndex: e.seriesIndex, dataIndexInside: t, dataIndex: e.getData().getRawIndex(t) });
            }));
        }
      }),
      { payloadBatch: a, snapToValue: r }
    );
  }
  function gp(t, e, i, n) {
    t[e.key] = { value: i, payloadBatch: n };
  }
  function mp(t, e, i, n) {
    var r = i.payloadBatch,
      a = e.axis,
      o = a.model,
      s = e.axisPointerModel;
    if (e.triggerTooltip && r.length) {
      var l = e.coordSys.model,
        u = Xc(l),
        h = t.map[u];
      h ||
        ((h = t.map[u] =
          {
            coordSysId: l.id,
            coordSysIndex: l.componentIndex,
            coordSysType: l.type,
            coordSysMainType: l.mainType,
            dataByAxis: [],
          }),
        t.list.push(h)),
        h.dataByAxis.push({
          axisDim: a.dim,
          axisIndex: o.componentIndex,
          axisType: o.type,
          axisId: o.id,
          value: n,
          valueLabelOpt: { precision: s.get('label.precision'), formatter: s.get('label.formatter') },
          seriesDataIndices: r.slice(),
        });
    }
  }
  function vp(t, e, i) {
    var n = (i.axesInfo = []);
    gC(e, function (e, i) {
      var r = e.axisPointerModel.option,
        a = t[i];
      a
        ? (!e.useHandle && (r.status = 'show'),
          (r.value = a.value),
          (r.seriesDataIndices = (a.payloadBatch || []).slice()))
        : !e.useHandle && (r.status = 'hide'),
        'show' === r.status && n.push({ axisDim: e.axis.dim, axisIndex: e.axis.model.componentIndex, value: r.value });
    });
  }
  function yp(t, e, i, n) {
    if (bp(e) || !t.list.length) return void n({ type: 'hideTip' });
    var r = ((t.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
    n({
      type: 'showTip',
      escapeConnect: !0,
      x: e[0],
      y: e[1],
      tooltipOption: i.tooltipOption,
      position: i.position,
      dataIndexInside: r.dataIndexInside,
      dataIndex: r.dataIndex,
      seriesIndex: r.seriesIndex,
      dataByCoordSys: t.list,
    });
  }
  function _p(t, e, i) {
    var n = i.getZr(),
      r = 'axisPointerLastHighlights',
      a = vC(n)[r] || {},
      o = (vC(n)[r] = {});
    gC(t, function (t) {
      var e = t.axisPointerModel.option;
      'show' === e.status &&
        gC(e.seriesDataIndices, function (t) {
          var e = t.seriesIndex + ' | ' + t.dataIndex;
          o[e] = t;
        });
    });
    var s = [],
      l = [];
    f(a, function (t, e) {
      !o[e] && l.push(t);
    }),
      f(o, function (t, e) {
        !a[e] && s.push(t);
      }),
      l.length && i.dispatchAction({ type: 'downplay', escapeConnect: !0, batch: l }),
      s.length && i.dispatchAction({ type: 'highlight', escapeConnect: !0, batch: s });
  }
  function xp(t, e) {
    for (var i = 0; i < (t || []).length; i++) {
      var n = t[i];
      if (e.axis.dim === n.axisDim && e.axis.model.componentIndex === n.axisIndex) return n;
    }
  }
  function wp(t) {
    var e = t.axis.model,
      i = {},
      n = (i.axisDim = t.axis.dim);
    return (
      (i.axisIndex = i[n + 'AxisIndex'] = e.componentIndex),
      (i.axisName = i[n + 'AxisName'] = e.name),
      (i.axisId = i[n + 'AxisId'] = e.id),
      i
    );
  }
  function bp(t) {
    return !t || null == t[0] || isNaN(t[0]) || null == t[1] || isNaN(t[1]);
  }
  function Sp(t, e, i) {
    if (!kg.node) {
      var n = e.getZr();
      _C(n).records || (_C(n).records = {}), Mp(n, e);
      var r = _C(n).records[t] || (_C(n).records[t] = {});
      r.handler = i;
    }
  }
  function Mp(t, e) {
    function i(i, n) {
      t.on(i, function (i) {
        var r = Dp(e);
        xC(_C(t).records, function (t) {
          t && n(t, i, r.dispatchAction);
        }),
          Ip(r.pendings, e);
      });
    }
    _C(t).initialized ||
      ((_C(t).initialized = !0), i('click', _(Tp, 'click')), i('mousemove', _(Tp, 'mousemove')), i('globalout', Cp));
  }
  function Ip(t, e) {
    var i,
      n = t.showTip.length,
      r = t.hideTip.length;
    n ? (i = t.showTip[n - 1]) : r && (i = t.hideTip[r - 1]), i && ((i.dispatchAction = null), e.dispatchAction(i));
  }
  function Cp(t, e, i) {
    t.handler('leave', null, i);
  }
  function Tp(t, e, i, n) {
    e.handler(t, i, n);
  }
  function Dp(t) {
    var e = { showTip: [], hideTip: [] },
      i = function (n) {
        var r = e[n.type];
        r ? r.push(n) : ((n.dispatchAction = i), t.dispatchAction(n));
      };
    return { dispatchAction: i, pendings: e };
  }
  function Ap(t, e) {
    if (!kg.node) {
      var i = e.getZr(),
        n = (_C(i).records || {})[t];
      n && (_C(i).records[t] = null);
    }
  }
  function kp() {}
  function Pp(t, e, i, n) {
    Lp(bC(i).lastProp, n) || ((bC(i).lastProp = n), e ? Ga(i, n, t) : (i.stopAnimation(), i.attr(n)));
  }
  function Lp(t, e) {
    if (S(t) && S(e)) {
      var i = !0;
      return (
        f(e, function (e, n) {
          i = i && Lp(t[n], e);
        }),
        !!i
      );
    }
    return t === e;
  }
  function Op(t, e) {
    t[e.get('label.show') ? 'show' : 'hide']();
  }
  function zp(t) {
    return { position: t.position.slice(), rotation: t.rotation || 0 };
  }
  function Ep(t, e, i) {
    var n = e.get('z'),
      r = e.get('zlevel');
    t &&
      t.traverse(function (t) {
        'group' !== t.type && (null != n && (t.z = n), null != r && (t.zlevel = r), (t.silent = i));
      });
  }
  function Rp(t) {
    var e,
      i = t.get('type'),
      n = t.getModel(i + 'Style');
    return (
      'line' === i
        ? ((e = n.getLineStyle()), (e.fill = null))
        : 'shadow' === i && ((e = n.getAreaStyle()), (e.stroke = null)),
      e
    );
  }
  function Bp(t, e, i, n, r) {
    var a = i.get('value'),
      o = Fp(a, e.axis, e.ecModel, i.get('seriesDataIndices'), {
        precision: i.get('label.precision'),
        formatter: i.get('label.formatter'),
      }),
      s = i.getModel('label'),
      l = J_(s.get('padding') || 0),
      u = s.getFont(),
      h = Gi(o, u),
      c = r.position,
      d = h.width + l[1] + l[3],
      f = h.height + l[0] + l[2],
      p = r.align;
    'right' === p && (c[0] -= d), 'center' === p && (c[0] -= d / 2);
    var g = r.verticalAlign;
    'bottom' === g && (c[1] -= f), 'middle' === g && (c[1] -= f / 2), Np(c, d, f, n);
    var m = s.get('backgroundColor');
    (m && 'auto' !== m) || (m = e.get('axisLine.lineStyle.color')),
      (t.label = {
        shape: { x: 0, y: 0, width: d, height: f, r: s.get('borderRadius') },
        position: c.slice(),
        style: {
          text: o,
          textFont: u,
          textFill: s.getTextColor(),
          textPosition: 'inside',
          textPadding: l,
          fill: m,
          stroke: s.get('borderColor') || 'transparent',
          lineWidth: s.get('borderWidth') || 0,
          shadowBlur: s.get('shadowBlur'),
          shadowColor: s.get('shadowColor'),
          shadowOffsetX: s.get('shadowOffsetX'),
          shadowOffsetY: s.get('shadowOffsetY'),
        },
        z2: 10,
      });
  }
  function Np(t, e, i, n) {
    var r = n.getWidth(),
      a = n.getHeight();
    (t[0] = Math.min(t[0] + e, r) - e),
      (t[1] = Math.min(t[1] + i, a) - i),
      (t[0] = Math.max(t[0], 0)),
      (t[1] = Math.max(t[1], 0));
  }
  function Fp(t, e, i, n, r) {
    t = e.scale.parse(t);
    var a = e.scale.getLabel(t, { precision: r.precision }),
      o = r.formatter;
    if (o) {
      var s = { value: Th(e, t), axisDimension: e.dim, axisIndex: e.index, seriesData: [] };
      f(n, function (t) {
        var e = i.getSeriesByIndex(t.seriesIndex),
          n = t.dataIndexInside,
          r = e && e.getDataParams(n);
        r && s.seriesData.push(r);
      }),
        b(o) ? (a = o.replace('{value}', a)) : w(o) && (a = o(s));
    }
    return a;
  }
  function Gp(t, e, i) {
    var n = De();
    return (
      Oe(n, n, i.rotation),
      Le(n, n, i.position),
      Wa([t.dataToCoord(e), (i.labelOffset || 0) + (i.labelDirection || 1) * (i.labelMargin || 0)], n)
    );
  }
  function Vp(t, e, i, n, r, a) {
    var o = nM.innerTextLayout(i.rotation, 0, i.labelDirection);
    (i.labelMargin = r.get('label.margin')),
      Bp(e, n, r, a, { position: Gp(n.axis, t, i), align: o.textAlign, verticalAlign: o.textVerticalAlign });
  }
  function Hp(t, e, i) {
    return (i = i || 0), { x1: t[i], y1: t[1 - i], x2: e[i], y2: e[1 - i] };
  }
  function Wp(t, e, i) {
    return (i = i || 0), { x: t[i], y: t[1 - i], width: e[i], height: e[1 - i] };
  }
  function Up(t, e) {
    var i = {};
    return (i[e.dim + 'AxisIndex'] = e.index), t.getCartesian(i);
  }
  function Xp(t) {
    return 'x' === t.dim ? 0 : 1;
  }
  function Yp(t) {
    var e = 'cubic-bezier(0.23, 1, 0.32, 1)',
      i = 'left ' + t + 's ' + e + ',top ' + t + 's ' + e;
    return p(AC, function (t) {
      return t + 'transition:' + i;
    }).join(';');
  }
  function Zp(t) {
    var e = [],
      i = t.get('fontSize'),
      n = t.getTextColor();
    return (
      n && e.push('color:' + n),
      e.push('font:' + t.getFont()),
      i && e.push('line-height:' + Math.round((3 * i) / 2) + 'px'),
      TC(['decoration', 'align'], function (i) {
        var n = t.get(i);
        n && e.push('text-' + i + ':' + n);
      }),
      e.join(';')
    );
  }
  function jp(t) {
    var e = [],
      i = t.get('transitionDuration'),
      n = t.get('backgroundColor'),
      r = t.getModel('textStyle'),
      a = t.get('padding');
    return (
      i && e.push(Yp(i)),
      n &&
        (kg.canvasSupported
          ? e.push('background-Color:' + n)
          : (e.push('background-Color:#' + Qe(n)), e.push('filter:alpha(opacity=70)'))),
      TC(['width', 'color', 'radius'], function (i) {
        var n = 'border-' + i,
          r = DC(n),
          a = t.get(r);
        null != a && e.push(n + ':' + a + ('color' === i ? '' : 'px'));
      }),
      e.push(Zp(r)),
      null != a && e.push('padding:' + J_(a).join('px ') + 'px'),
      e.join(';') + ';'
    );
  }
  function qp(t, e) {
    if (kg.wxa) return null;
    var i = document.createElement('div'),
      n = (this._zr = e.getZr());
    (this.el = i),
      (this._x = e.getWidth() / 2),
      (this._y = e.getHeight() / 2),
      t.appendChild(i),
      (this._container = t),
      (this._show = !1),
      this._hideTimeout;
    var r = this;
    (i.onmouseenter = function () {
      r._enterable && (clearTimeout(r._hideTimeout), (r._show = !0)), (r._inContent = !0);
    }),
      (i.onmousemove = function (e) {
        if (((e = e || window.event), !r._enterable)) {
          var i = n.handler;
          ye(t, e, !0), i.dispatch('mousemove', e);
        }
      }),
      (i.onmouseleave = function () {
        r._enterable && r._show && r.hideLater(r._hideDelay), (r._inContent = !1);
      });
  }
  function Kp(t) {
    (this._zr = t.getZr()), (this._show = !1), this._hideTimeout;
  }
  function $p(t) {
    for (var e = t.pop(); t.length; ) {
      var i = t.pop();
      i &&
        (Qa.isInstance(i) && (i = i.get('tooltip', !0)),
        'string' == typeof i && (i = { formatter: i }),
        (e = new Qa(i, e, e.ecModel)));
    }
    return e;
  }
  function Jp(t, e) {
    return t.dispatchAction || y(e.dispatchAction, e);
  }
  function Qp(t, e, i, n, r, a, o) {
    var s = i.getOuterSize(),
      l = s.width,
      u = s.height;
    return (
      null != a && (t + l + a > n ? (t -= l + a) : (t += a)),
      null != o && (e + u + o > r ? (e -= u + o) : (e += o)),
      [t, e]
    );
  }
  function tg(t, e, i, n, r) {
    var a = i.getOuterSize(),
      o = a.width,
      s = a.height;
    return (
      (t = Math.min(t + o, n) - o), (e = Math.min(e + s, r) - s), (t = Math.max(t, 0)), (e = Math.max(e, 0)), [t, e]
    );
  }
  function eg(t, e, i) {
    var n = i[0],
      r = i[1],
      a = 5,
      o = 0,
      s = 0,
      l = e.width,
      u = e.height;
    switch (t) {
      case 'inside':
        (o = e.x + l / 2 - n / 2), (s = e.y + u / 2 - r / 2);
        break;
      case 'top':
        (o = e.x + l / 2 - n / 2), (s = e.y - r - a);
        break;
      case 'bottom':
        (o = e.x + l / 2 - n / 2), (s = e.y + u + a);
        break;
      case 'left':
        (o = e.x - n - a), (s = e.y + u / 2 - r / 2);
        break;
      case 'right':
        (o = e.x + l + a), (s = e.y + u / 2 - r / 2);
    }
    return [o, s];
  }
  function ig(t) {
    return 'center' === t || 'middle' === t;
  }
  function ng(t) {
    Vn(t, 'label', ['show']);
  }
  function rg(t) {
    return !(isNaN(parseFloat(t.x)) && isNaN(parseFloat(t.y)));
  }
  function ag(t) {
    return !isNaN(parseFloat(t.x)) && !isNaN(parseFloat(t.y));
  }
  function og(t, e, i, n, r, a) {
    var o = [],
      s = Ku(e, n),
      l = s ? e.getCalculationInfo('stackResultDimension') : n,
      u = dg(e, l, t),
      h = e.indicesOfNearest(l, u)[0];
    (o[r] = e.get(i, h)), (o[a] = e.get(n, h));
    var c = ho(e.get(n, h));
    return (c = Math.min(c, 20)), c >= 0 && (o[a] = +o[a].toFixed(c)), o;
  }
  function sg(t, e) {
    var i = t.getData(),
      r = t.coordinateSystem;
    if (e && !ag(e) && !x(e.coord) && r) {
      var a = r.dimensions,
        o = lg(e, i, r, t);
      if (((e = n(e)), e.type && GC[e.type] && o.baseAxis && o.valueAxis)) {
        var s = NC(a, o.baseAxis.dim),
          l = NC(a, o.valueAxis.dim);
        (e.coord = GC[e.type](i, o.baseDataDim, o.valueDataDim, s, l)), (e.value = e.coord[l]);
      } else {
        for (
          var u = [null != e.xAxis ? e.xAxis : e.radiusAxis, null != e.yAxis ? e.yAxis : e.angleAxis], h = 0;
          2 > h;
          h++
        )
          GC[u[h]] && (u[h] = dg(i, i.mapDimension(a[h]), u[h]));
        e.coord = u;
      }
    }
    return e;
  }
  function lg(t, e, i, n) {
    var r = {};
    return (
      null != t.valueIndex || null != t.valueDim
        ? ((r.valueDataDim = null != t.valueIndex ? e.getDimension(t.valueIndex) : t.valueDim),
          (r.valueAxis = i.getAxis(ug(n, r.valueDataDim))),
          (r.baseAxis = i.getOtherAxis(r.valueAxis)),
          (r.baseDataDim = e.mapDimension(r.baseAxis.dim)))
        : ((r.baseAxis = n.getBaseAxis()),
          (r.valueAxis = i.getOtherAxis(r.baseAxis)),
          (r.baseDataDim = e.mapDimension(r.baseAxis.dim)),
          (r.valueDataDim = e.mapDimension(r.valueAxis.dim))),
      r
    );
  }
  function ug(t, e) {
    var i = t.getData(),
      n = i.dimensions;
    e = i.getDimension(e);
    for (var r = 0; r < n.length; r++) {
      var a = i.getDimensionInfo(n[r]);
      if (a.name === e) return a.coordDim;
    }
  }
  function hg(t, e) {
    return t && t.containData && e.coord && !rg(e) ? t.containData(e.coord) : !0;
  }
  function cg(t, e, i, n) {
    return 2 > n ? t.coord && t.coord[n] : t.value;
  }
  function dg(t, e, i) {
    if ('average' === i) {
      var n = 0,
        r = 0;
      return (
        t.each(e, function (t) {
          isNaN(t) || ((n += t), r++);
        }),
        n / r
      );
    }
    return 'median' === i ? t.getMedian(e) : t.getDataExtent(e, !0)['max' === i ? 1 : 0];
  }
  function fg(t, e, i) {
    var n = e.coordinateSystem;
    t.each(function (r) {
      var a,
        o = t.getItemModel(r),
        s = so(o.get('x'), i.getWidth()),
        l = so(o.get('y'), i.getHeight());
      if (isNaN(s) || isNaN(l)) {
        if (e.getMarkerPosition) a = e.getMarkerPosition(t.getValues(t.dimensions, r));
        else if (n) {
          var u = t.get(n.dimensions[0], r),
            h = t.get(n.dimensions[1], r);
          a = n.dataToPoint([u, h]);
        }
      } else a = [s, l];
      isNaN(s) || (a[0] = s), isNaN(l) || (a[1] = l), t.setItemLayout(r, a);
    });
  }
  function pg(t, e, i) {
    var n;
    n = t
      ? p(t && t.dimensions, function (t) {
          var i = e.getData().getDimensionInfo(e.getData().mapDimension(t)) || {};
          return s({ name: t }, i);
        })
      : [{ name: 'value', type: 'float' }];
    var r = new Rb(n, i),
      a = p(i.get('data'), _(sg, e));
    return (
      t && (a = m(a, _(hg, t))),
      r.initData(
        a,
        null,
        t
          ? cg
          : function (t) {
              return t.value;
            },
      ),
      r
    );
  }
  function gg(t) {
    return !isNaN(t) && !isFinite(t);
  }
  function mg(t, e, i, n) {
    var r = 1 - t,
      a = n.dimensions[t];
    return gg(e[r]) && gg(i[r]) && e[t] === i[t] && n.getAxis(a).containData(e[t]);
  }
  function vg(t, e) {
    if ('cartesian2d' === t.type) {
      var i = e[0].coord,
        n = e[1].coord;
      if (i && n && (mg(1, i, n, t) || mg(0, i, n, t))) return !0;
    }
    return hg(t, e[0]) && hg(t, e[1]);
  }
  function yg(t, e, i, n, r) {
    var a,
      o = n.coordinateSystem,
      s = t.getItemModel(e),
      l = so(s.get('x'), r.getWidth()),
      u = so(s.get('y'), r.getHeight());
    if (isNaN(l) || isNaN(u)) {
      if (n.getMarkerPosition) a = n.getMarkerPosition(t.getValues(t.dimensions, e));
      else {
        var h = o.dimensions,
          c = t.get(h[0], e),
          d = t.get(h[1], e);
        a = o.dataToPoint([c, d]);
      }
      if ('cartesian2d' === o.type) {
        var f = o.getAxis('x'),
          p = o.getAxis('y'),
          h = o.dimensions;
        gg(t.get(h[0], e))
          ? (a[0] = f.toGlobalCoord(f.getExtent()[i ? 0 : 1]))
          : gg(t.get(h[1], e)) && (a[1] = p.toGlobalCoord(p.getExtent()[i ? 0 : 1]));
      }
      isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
    } else a = [l, u];
    t.setItemLayout(e, a);
  }
  function _g(t, e, i) {
    var n;
    n = t
      ? p(t && t.dimensions, function (t) {
          var i = e.getData().getDimensionInfo(e.getData().mapDimension(t)) || {};
          return s({ name: t }, i);
        })
      : [{ name: 'value', type: 'float' }];
    var r = new Rb(n, i),
      a = new Rb(n, i),
      o = new Rb([], i),
      l = p(i.get('data'), _(HC, e, t, i));
    t && (l = m(l, _(vg, t)));
    var u = t
      ? cg
      : function (t) {
          return t.value;
        };
    return (
      r.initData(
        p(l, function (t) {
          return t[0];
        }),
        null,
        u,
      ),
      a.initData(
        p(l, function (t) {
          return t[1];
        }),
        null,
        u,
      ),
      o.initData(
        p(l, function (t) {
          return t[2];
        }),
      ),
      (o.hasItemOption = !0),
      { from: r, to: a, line: o }
    );
  }
  function xg(t) {
    return !isNaN(t) && !isFinite(t);
  }
  function wg(t, e, i) {
    var n = 1 - t;
    return xg(e[n]) && xg(i[n]);
  }
  function bg(t, e) {
    var i = e.coord[0],
      n = e.coord[1];
    return 'cartesian2d' === t.type && i && n && (wg(1, i, n, t) || wg(0, i, n, t))
      ? !0
      : hg(t, { coord: i, x: e.x0, y: e.y0 }) || hg(t, { coord: n, x: e.x1, y: e.y1 });
  }
  function Sg(t, e, i, n, r) {
    var a,
      o = n.coordinateSystem,
      s = t.getItemModel(e),
      l = so(s.get(i[0]), r.getWidth()),
      u = so(s.get(i[1]), r.getHeight());
    if (isNaN(l) || isNaN(u)) {
      if (n.getMarkerPosition) a = n.getMarkerPosition(t.getValues(i, e));
      else {
        var h = t.get(i[0], e),
          c = t.get(i[1], e),
          d = [h, c];
        o.clampData && o.clampData(d, d), (a = o.dataToPoint(d, !0));
      }
      if ('cartesian2d' === o.type) {
        var f = o.getAxis('x'),
          p = o.getAxis('y'),
          h = t.get(i[0], e),
          c = t.get(i[1], e);
        xg(h)
          ? (a[0] = f.toGlobalCoord(f.getExtent()['x0' === i[0] ? 0 : 1]))
          : xg(c) && (a[1] = p.toGlobalCoord(p.getExtent()['y0' === i[1] ? 0 : 1]));
      }
      isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
    } else a = [l, u];
    return a;
  }
  function Mg(t, e, i) {
    var n,
      r,
      a = ['x0', 'y0', 'x1', 'y1'];
    t
      ? ((n = p(t && t.dimensions, function (t) {
          var i = e.getData(),
            n = i.getDimensionInfo(i.mapDimension(t)) || {};
          return s({ name: t }, n);
        })),
        (r = new Rb(
          p(a, function (t, e) {
            return { name: t, type: n[e % 2].type };
          }),
          i,
        )))
      : ((n = [{ name: 'value', type: 'float' }]), (r = new Rb(n, i)));
    var o = p(i.get('data'), _(WC, e, t, i));
    t && (o = m(o, _(bg, t)));
    var l = t
      ? function (t, e, i, n) {
          return t.coord[Math.floor(n / 2)][n % 2];
        }
      : function (t) {
          return t.value;
        };
    return r.initData(o, null, l), (r.hasItemOption = !0), r;
  }
  var Ig;
  'undefined' != typeof window ? (Ig = window.__DEV__) : 'undefined' != typeof global && (Ig = global.__DEV__),
    'undefined' == typeof Ig && (Ig = !0);
  var Cg = Ig,
    Tg = 2311,
    Dg = function () {
      return Tg++;
    },
    Ag = {};
  Ag =
    'object' == typeof wx && 'function' == typeof wx.getSystemInfoSync
      ? {
          browser: {},
          os: {},
          node: !1,
          wxa: !0,
          canvasSupported: !0,
          svgSupported: !1,
          touchEventsSupported: !0,
          domSupported: !1,
        }
      : 'undefined' == typeof document && 'undefined' != typeof self
      ? { browser: {}, os: {}, node: !1, worker: !0, canvasSupported: !0, domSupported: !1 }
      : 'undefined' == typeof navigator
      ? { browser: {}, os: {}, node: !0, worker: !1, canvasSupported: !0, svgSupported: !0, domSupported: !1 }
      : e(navigator.userAgent);
  var kg = Ag,
    Pg = {
      '[object Function]': 1,
      '[object RegExp]': 1,
      '[object Date]': 1,
      '[object Error]': 1,
      '[object CanvasGradient]': 1,
      '[object CanvasPattern]': 1,
      '[object Image]': 1,
      '[object Canvas]': 1,
    },
    Lg = {
      '[object Int8Array]': 1,
      '[object Uint8Array]': 1,
      '[object Uint8ClampedArray]': 1,
      '[object Int16Array]': 1,
      '[object Uint16Array]': 1,
      '[object Int32Array]': 1,
      '[object Uint32Array]': 1,
      '[object Float32Array]': 1,
      '[object Float64Array]': 1,
    },
    Og = Object.prototype.toString,
    zg = Array.prototype,
    Eg = zg.forEach,
    Rg = zg.filter,
    Bg = zg.slice,
    Ng = zg.map,
    Fg = zg.reduce,
    Gg = {},
    Vg = function () {
      return Gg.createCanvas();
    };
  Gg.createCanvas = function () {
    return document.createElement('canvas');
  };
  var Hg,
    Wg = '__ec_primitive__';
  B.prototype = {
    constructor: B,
    get: function (t) {
      return this.data.hasOwnProperty(t) ? this.data[t] : null;
    },
    set: function (t, e) {
      return (this.data[t] = e);
    },
    each: function (t, e) {
      void 0 !== e && (t = y(t, e));
      for (var i in this.data) this.data.hasOwnProperty(i) && t(this.data[i], i);
    },
    removeKey: function (t) {
      delete this.data[t];
    },
  };
  var Ug = (Object.freeze || Object)({
      $override: i,
      clone: n,
      merge: r,
      mergeAll: a,
      extend: o,
      defaults: s,
      createCanvas: Vg,
      getContext: l,
      indexOf: u,
      inherits: h,
      mixin: c,
      isArrayLike: d,
      each: f,
      map: p,
      reduce: g,
      filter: m,
      find: v,
      bind: y,
      curry: _,
      isArray: x,
      isFunction: w,
      isString: b,
      isObject: S,
      isBuiltInObject: M,
      isTypedArray: I,
      isDom: C,
      eqNaN: T,
      retrieve: D,
      retrieve2: A,
      retrieve3: k,
      slice: P,
      normalizeCssArray: L,
      assert: O,
      trim: z,
      setAsPrimitive: E,
      isPrimitive: R,
      createHashMap: N,
      concatArray: F,
      noop: G,
    }),
    Xg = 'undefined' == typeof Float32Array ? Array : Float32Array,
    Yg = j,
    Zg = q,
    jg = ee,
    qg = ie,
    Kg = (Object.freeze || Object)({
      create: V,
      copy: H,
      clone: W,
      set: U,
      add: X,
      scaleAndAdd: Y,
      sub: Z,
      len: j,
      length: Yg,
      lenSquare: q,
      lengthSquare: Zg,
      mul: K,
      div: $,
      dot: J,
      scale: Q,
      normalize: te,
      distance: ee,
      dist: jg,
      distanceSquare: ie,
      distSquare: qg,
      negate: ne,
      lerp: re,
      applyTransform: ae,
      min: oe,
      max: se,
    });
  le.prototype = {
    constructor: le,
    _dragStart: function (t) {
      var e = t.target;
      e &&
        e.draggable &&
        ((this._draggingTarget = e),
        (e.dragging = !0),
        (this._x = t.offsetX),
        (this._y = t.offsetY),
        this.dispatchToElement(ue(e, t), 'dragstart', t.event));
    },
    _drag: function (t) {
      var e = this._draggingTarget;
      if (e) {
        var i = t.offsetX,
          n = t.offsetY,
          r = i - this._x,
          a = n - this._y;
        (this._x = i), (this._y = n), e.drift(r, a, t), this.dispatchToElement(ue(e, t), 'drag', t.event);
        var o = this.findHover(i, n, e).target,
          s = this._dropTarget;
        (this._dropTarget = o),
          e !== o &&
            (s && o !== s && this.dispatchToElement(ue(s, t), 'dragleave', t.event),
            o && o !== s && this.dispatchToElement(ue(o, t), 'dragenter', t.event));
      }
    },
    _dragEnd: function (t) {
      var e = this._draggingTarget;
      e && (e.dragging = !1),
        this.dispatchToElement(ue(e, t), 'dragend', t.event),
        this._dropTarget && this.dispatchToElement(ue(this._dropTarget, t), 'drop', t.event),
        (this._draggingTarget = null),
        (this._dropTarget = null);
    },
  };
  var $g = Array.prototype.slice,
    Jg = function (t) {
      (this._$handlers = {}), (this._$eventProcessor = t);
    };
  Jg.prototype = {
    constructor: Jg,
    one: function (t, e, i, n) {
      return ce(this, t, e, i, n, !0);
    },
    on: function (t, e, i, n) {
      return ce(this, t, e, i, n, !1);
    },
    isSilent: function (t) {
      var e = this._$handlers;
      return !e[t] || !e[t].length;
    },
    off: function (t, e) {
      var i = this._$handlers;
      if (!t) return (this._$handlers = {}), this;
      if (e) {
        if (i[t]) {
          for (var n = [], r = 0, a = i[t].length; a > r; r++) i[t][r].h !== e && n.push(i[t][r]);
          i[t] = n;
        }
        i[t] && 0 === i[t].length && delete i[t];
      } else delete i[t];
      return this;
    },
    trigger: function (t) {
      var e = this._$handlers[t],
        i = this._$eventProcessor;
      if (e) {
        var n = arguments,
          r = n.length;
        r > 3 && (n = $g.call(n, 1));
        for (var a = e.length, o = 0; a > o; ) {
          var s = e[o];
          if (i && i.filter && null != s.query && !i.filter(t, s.query)) o++;
          else {
            switch (r) {
              case 1:
                s.h.call(s.ctx);
                break;
              case 2:
                s.h.call(s.ctx, n[1]);
                break;
              case 3:
                s.h.call(s.ctx, n[1], n[2]);
                break;
              default:
                s.h.apply(s.ctx, n);
            }
            s.one ? (e.splice(o, 1), a--) : o++;
          }
        }
      }
      return i && i.afterTrigger && i.afterTrigger(t), this;
    },
    triggerWithContext: function (t) {
      var e = this._$handlers[t],
        i = this._$eventProcessor;
      if (e) {
        var n = arguments,
          r = n.length;
        r > 4 && (n = $g.call(n, 1, n.length - 1));
        for (var a = n[n.length - 1], o = e.length, s = 0; o > s; ) {
          var l = e[s];
          if (i && i.filter && null != l.query && !i.filter(t, l.query)) s++;
          else {
            switch (r) {
              case 1:
                l.h.call(a);
                break;
              case 2:
                l.h.call(a, n[1]);
                break;
              case 3:
                l.h.call(a, n[1], n[2]);
                break;
              default:
                l.h.apply(a, n);
            }
            l.one ? (e.splice(s, 1), o--) : s++;
          }
        }
      }
      return i && i.afterTrigger && i.afterTrigger(t), this;
    },
  };
  var Qg = Math.log(2),
    tm = 'undefined' != typeof window && !!window.addEventListener,
    em = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    im = '___zrEVENTSAVED',
    nm = [],
    rm = tm
      ? function (t) {
          t.preventDefault(), t.stopPropagation(), (t.cancelBubble = !0);
        }
      : function (t) {
          (t.returnValue = !1), (t.cancelBubble = !0);
        },
    am = function () {
      this._track = [];
    };
  am.prototype = {
    constructor: am,
    recognize: function (t, e, i) {
      return this._doTrack(t, e, i), this._recognize(t);
    },
    clear: function () {
      return (this._track.length = 0), this;
    },
    _doTrack: function (t, e, i) {
      var n = t.touches;
      if (n) {
        for (var r = { points: [], touches: [], target: e, event: t }, a = 0, o = n.length; o > a; a++) {
          var s = n[a],
            l = pe(i, s, {});
          r.points.push([l.zrX, l.zrY]), r.touches.push(s);
        }
        this._track.push(r);
      }
    },
    _recognize: function (t) {
      for (var e in om)
        if (om.hasOwnProperty(e)) {
          var i = om[e](this._track, t);
          if (i) return i;
        }
    },
  };
  var om = {
      pinch: function (t, e) {
        var i = t.length;
        if (i) {
          var n = (t[i - 1] || {}).points,
            r = (t[i - 2] || {}).points || n;
          if (r && r.length > 1 && n && n.length > 1) {
            var a = be(n) / be(r);
            !isFinite(a) && (a = 1), (e.pinchScale = a);
            var o = Se(n);
            return (e.pinchX = o[0]), (e.pinchY = o[1]), { type: 'pinch', target: t[0].target, event: e };
          }
        }
      },
    },
    sm = 'silent';
  Ce.prototype.dispose = function () {};
  var lm = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'],
    um = function (t, e, i, n) {
      Jg.call(this),
        (this.storage = t),
        (this.painter = e),
        (this.painterRoot = n),
        (i = i || new Ce()),
        (this.proxy = null),
        (this._hovered = {}),
        this._lastTouchMoment,
        this._lastX,
        this._lastY,
        this._gestureMgr,
        le.call(this),
        this.setHandlerProxy(i);
    };
  (um.prototype = {
    constructor: um,
    setHandlerProxy: function (t) {
      this.proxy && this.proxy.dispose(),
        t &&
          (f(
            lm,
            function (e) {
              t.on && t.on(e, this[e], this);
            },
            this,
          ),
          (t.handler = this)),
        (this.proxy = t);
    },
    mousemove: function (t) {
      var e = t.zrX,
        i = t.zrY,
        n = this._hovered,
        r = n.target;
      r && !r.__zr && ((n = this.findHover(n.x, n.y)), (r = n.target));
      var a = (this._hovered = this.findHover(e, i)),
        o = a.target,
        s = this.proxy;
      s.setCursor && s.setCursor(o ? o.cursor : 'default'),
        r && o !== r && this.dispatchToElement(n, 'mouseout', t),
        this.dispatchToElement(a, 'mousemove', t),
        o && o !== r && this.dispatchToElement(a, 'mouseover', t);
    },
    mouseout: function (t) {
      this.dispatchToElement(this._hovered, 'mouseout', t);
      var e,
        i = t.toElement || t.relatedTarget;
      do i = i && i.parentNode;
      while (i && 9 !== i.nodeType && !(e = i === this.painterRoot));
      !e && this.trigger('globalout', { event: t });
    },
    resize: function () {
      this._hovered = {};
    },
    dispatch: function (t, e) {
      var i = this[t];
      i && i.call(this, e);
    },
    dispose: function () {
      this.proxy.dispose(), (this.storage = this.proxy = this.painter = null);
    },
    setCursorStyle: function (t) {
      var e = this.proxy;
      e.setCursor && e.setCursor(t);
    },
    dispatchToElement: function (t, e, i) {
      t = t || {};
      var n = t.target;
      if (!n || !n.silent) {
        for (
          var r = 'on' + e, a = Me(e, t, i);
          n && (n[r] && (a.cancelBubble = n[r].call(n, a)), n.trigger(e, a), (n = n.parent), !a.cancelBubble);

        );
        a.cancelBubble ||
          (this.trigger(e, a),
          this.painter &&
            this.painter.eachOtherLayer(function (t) {
              'function' == typeof t[r] && t[r].call(t, a), t.trigger && t.trigger(e, a);
            }));
      }
    },
    findHover: function (t, e, i) {
      for (var n = this.storage.getDisplayList(), r = { x: t, y: e }, a = n.length - 1; a >= 0; a--) {
        var o;
        if (n[a] !== i && !n[a].ignore && (o = Te(n[a], t, e)) && (!r.topTarget && (r.topTarget = n[a]), o !== sm)) {
          r.target = n[a];
          break;
        }
      }
      return r;
    },
    processGesture: function (t, e) {
      this._gestureMgr || (this._gestureMgr = new am());
      var i = this._gestureMgr;
      'start' === e && i.clear();
      var n = i.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom);
      if (('end' === e && i.clear(), n)) {
        var r = n.type;
        (t.gestureEvent = r), this.dispatchToElement({ target: n.target }, r, n.event);
      }
    },
  }),
    f(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (t) {
      um.prototype[t] = function (e) {
        var i = this.findHover(e.zrX, e.zrY),
          n = i.target;
        if ('mousedown' === t) (this._downEl = n), (this._downPoint = [e.zrX, e.zrY]), (this._upEl = n);
        else if ('mouseup' === t) this._upEl = n;
        else if ('click' === t) {
          if (this._downEl !== this._upEl || !this._downPoint || jg(this._downPoint, [e.zrX, e.zrY]) > 4) return;
          this._downPoint = null;
        }
        this.dispatchToElement(i, t, e);
      };
    }),
    c(um, Jg),
    c(um, le);
  var hm = 'undefined' == typeof Float32Array ? Array : Float32Array,
    cm = (Object.freeze || Object)({
      create: De,
      identity: Ae,
      copy: ke,
      mul: Pe,
      translate: Le,
      rotate: Oe,
      scale: ze,
      invert: Ee,
      clone: Re,
    }),
    dm = Ae,
    fm = 5e-5,
    pm = function (t) {
      (t = t || {}),
        t.position || (this.position = [0, 0]),
        null == t.rotation && (this.rotation = 0),
        t.scale || (this.scale = [1, 1]),
        (this.origin = this.origin || null);
    },
    gm = pm.prototype;
  (gm.transform = null),
    (gm.needLocalTransform = function () {
      return (
        Be(this.rotation) ||
        Be(this.position[0]) ||
        Be(this.position[1]) ||
        Be(this.scale[0] - 1) ||
        Be(this.scale[1] - 1)
      );
    });
  var mm = [];
  (gm.updateTransform = function () {
    var t = this.parent,
      e = t && t.transform,
      i = this.needLocalTransform(),
      n = this.transform;
    if (!i && !e) return void (n && dm(n));
    (n = n || De()),
      i ? this.getLocalTransform(n) : dm(n),
      e && (i ? Pe(n, t.transform, n) : ke(n, t.transform)),
      (this.transform = n);
    var r = this.globalScaleRatio;
    if (null != r && 1 !== r) {
      this.getGlobalScale(mm);
      var a = mm[0] < 0 ? -1 : 1,
        o = mm[1] < 0 ? -1 : 1,
        s = ((mm[0] - a) * r + a) / mm[0] || 0,
        l = ((mm[1] - o) * r + o) / mm[1] || 0;
      (n[0] *= s), (n[1] *= s), (n[2] *= l), (n[3] *= l);
    }
    (this.invTransform = this.invTransform || De()), Ee(this.invTransform, n);
  }),
    (gm.getLocalTransform = function (t) {
      return pm.getLocalTransform(this, t);
    }),
    (gm.setTransform = function (t) {
      var e = this.transform,
        i = t.dpr || 1;
      e ? t.setTransform(i * e[0], i * e[1], i * e[2], i * e[3], i * e[4], i * e[5]) : t.setTransform(i, 0, 0, i, 0, 0);
    }),
    (gm.restoreTransform = function (t) {
      var e = t.dpr || 1;
      t.setTransform(e, 0, 0, e, 0, 0);
    });
  var vm = [],
    ym = De();
  (gm.setLocalTransform = function (t) {
    if (t) {
      var e = t[0] * t[0] + t[1] * t[1],
        i = t[2] * t[2] + t[3] * t[3],
        n = this.position,
        r = this.scale;
      Be(e - 1) && (e = Math.sqrt(e)),
        Be(i - 1) && (i = Math.sqrt(i)),
        t[0] < 0 && (e = -e),
        t[3] < 0 && (i = -i),
        (n[0] = t[4]),
        (n[1] = t[5]),
        (r[0] = e),
        (r[1] = i),
        (this.rotation = Math.atan2(-t[1] / i, t[0] / e));
    }
  }),
    (gm.decomposeTransform = function () {
      if (this.transform) {
        var t = this.parent,
          e = this.transform;
        t && t.transform && (Pe(vm, t.invTransform, e), (e = vm));
        var i = this.origin;
        i &&
          (i[0] || i[1]) &&
          ((ym[4] = i[0]), (ym[5] = i[1]), Pe(vm, e, ym), (vm[4] -= i[0]), (vm[5] -= i[1]), (e = vm)),
          this.setLocalTransform(e);
      }
    }),
    (gm.getGlobalScale = function (t) {
      var e = this.transform;
      return (
        (t = t || []),
        e
          ? ((t[0] = Math.sqrt(e[0] * e[0] + e[1] * e[1])),
            (t[1] = Math.sqrt(e[2] * e[2] + e[3] * e[3])),
            e[0] < 0 && (t[0] = -t[0]),
            e[3] < 0 && (t[1] = -t[1]),
            t)
          : ((t[0] = 1), (t[1] = 1), t)
      );
    }),
    (gm.transformCoordToLocal = function (t, e) {
      var i = [t, e],
        n = this.invTransform;
      return n && ae(i, i, n), i;
    }),
    (gm.transformCoordToGlobal = function (t, e) {
      var i = [t, e],
        n = this.transform;
      return n && ae(i, i, n), i;
    }),
    (pm.getLocalTransform = function (t, e) {
      (e = e || []), dm(e);
      var i = t.origin,
        n = t.scale || [1, 1],
        r = t.rotation || 0,
        a = t.position || [0, 0];
      return (
        i && ((e[4] -= i[0]), (e[5] -= i[1])),
        ze(e, e, n),
        r && Oe(e, e, r),
        i && ((e[4] += i[0]), (e[5] += i[1])),
        (e[4] += a[0]),
        (e[5] += a[1]),
        e
      );
    });
  var _m = {
    linear: function (t) {
      return t;
    },
    quadraticIn: function (t) {
      return t * t;
    },
    quadraticOut: function (t) {
      return t * (2 - t);
    },
    quadraticInOut: function (t) {
      return (t *= 2) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);
    },
    cubicIn: function (t) {
      return t * t * t;
    },
    cubicOut: function (t) {
      return --t * t * t + 1;
    },
    cubicInOut: function (t) {
      return (t *= 2) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);
    },
    quarticIn: function (t) {
      return t * t * t * t;
    },
    quarticOut: function (t) {
      return 1 - --t * t * t * t;
    },
    quarticInOut: function (t) {
      return (t *= 2) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);
    },
    quinticIn: function (t) {
      return t * t * t * t * t;
    },
    quinticOut: function (t) {
      return --t * t * t * t * t + 1;
    },
    quinticInOut: function (t) {
      return (t *= 2) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);
    },
    sinusoidalIn: function (t) {
      return 1 - Math.cos((t * Math.PI) / 2);
    },
    sinusoidalOut: function (t) {
      return Math.sin((t * Math.PI) / 2);
    },
    sinusoidalInOut: function (t) {
      return 0.5 * (1 - Math.cos(Math.PI * t));
    },
    exponentialIn: function (t) {
      return 0 === t ? 0 : Math.pow(1024, t - 1);
    },
    exponentialOut: function (t) {
      return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
    },
    exponentialInOut: function (t) {
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : (t *= 2) < 1
        ? 0.5 * Math.pow(1024, t - 1)
        : 0.5 * (-Math.pow(2, -10 * (t - 1)) + 2);
    },
    circularIn: function (t) {
      return 1 - Math.sqrt(1 - t * t);
    },
    circularOut: function (t) {
      return Math.sqrt(1 - --t * t);
    },
    circularInOut: function (t) {
      return (t *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
    },
    elasticIn: function (t) {
      var e,
        i = 0.1,
        n = 0.4;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : (!i || 1 > i ? ((i = 1), (e = n / 4)) : (e = (n * Math.asin(1 / i)) / (2 * Math.PI)),
          -(i * Math.pow(2, 10 * (t -= 1)) * Math.sin((2 * (t - e) * Math.PI) / n)));
    },
    elasticOut: function (t) {
      var e,
        i = 0.1,
        n = 0.4;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : (!i || 1 > i ? ((i = 1), (e = n / 4)) : (e = (n * Math.asin(1 / i)) / (2 * Math.PI)),
          i * Math.pow(2, -10 * t) * Math.sin((2 * (t - e) * Math.PI) / n) + 1);
    },
    elasticInOut: function (t) {
      var e,
        i = 0.1,
        n = 0.4;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : (!i || 1 > i ? ((i = 1), (e = n / 4)) : (e = (n * Math.asin(1 / i)) / (2 * Math.PI)),
          (t *= 2) < 1
            ? -0.5 * i * Math.pow(2, 10 * (t -= 1)) * Math.sin((2 * (t - e) * Math.PI) / n)
            : i * Math.pow(2, -10 * (t -= 1)) * Math.sin((2 * (t - e) * Math.PI) / n) * 0.5 + 1);
    },
    backIn: function (t) {
      var e = 1.70158;
      return t * t * ((e + 1) * t - e);
    },
    backOut: function (t) {
      var e = 1.70158;
      return --t * t * ((e + 1) * t + e) + 1;
    },
    backInOut: function (t) {
      var e = 2.5949095;
      return (t *= 2) < 1 ? 0.5 * t * t * ((e + 1) * t - e) : 0.5 * ((t -= 2) * t * ((e + 1) * t + e) + 2);
    },
    bounceIn: function (t) {
      return 1 - _m.bounceOut(1 - t);
    },
    bounceOut: function (t) {
      return 1 / 2.75 > t
        ? 7.5625 * t * t
        : 2 / 2.75 > t
        ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
        : 2.5 / 2.75 > t
        ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
        : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
    },
    bounceInOut: function (t) {
      return 0.5 > t ? 0.5 * _m.bounceIn(2 * t) : 0.5 * _m.bounceOut(2 * t - 1) + 0.5;
    },
  };
  Ne.prototype = {
    constructor: Ne,
    step: function (t, e) {
      if ((this._initialized || ((this._startTime = t + this._delay), (this._initialized = !0)), this._paused))
        return void (this._pausedTime += e);
      var i = (t - this._startTime - this._pausedTime) / this._life;
      if (!(0 > i)) {
        i = Math.min(i, 1);
        var n = this.easing,
          r = 'string' == typeof n ? _m[n] : n,
          a = 'function' == typeof r ? r(i) : i;
        return (
          this.fire('frame', a),
          1 === i ? (this.loop ? (this.restart(t), 'restart') : ((this._needsRemove = !0), 'destroy')) : null
        );
      }
    },
    restart: function (t) {
      var e = (t - this._startTime - this._pausedTime) % this._life;
      (this._startTime = t - e + this.gap), (this._pausedTime = 0), (this._needsRemove = !1);
    },
    fire: function (t, e) {
      (t = 'on' + t), this[t] && this[t](this._target, e);
    },
    pause: function () {
      this._paused = !0;
    },
    resume: function () {
      this._paused = !1;
    },
  };
  var xm = function () {
      (this.head = null), (this.tail = null), (this._len = 0);
    },
    wm = xm.prototype;
  (wm.insert = function (t) {
    var e = new bm(t);
    return this.insertEntry(e), e;
  }),
    (wm.insertEntry = function (t) {
      this.head
        ? ((this.tail.next = t), (t.prev = this.tail), (t.next = null), (this.tail = t))
        : (this.head = this.tail = t),
        this._len++;
    }),
    (wm.remove = function (t) {
      var e = t.prev,
        i = t.next;
      e ? (e.next = i) : (this.head = i), i ? (i.prev = e) : (this.tail = e), (t.next = t.prev = null), this._len--;
    }),
    (wm.len = function () {
      return this._len;
    }),
    (wm.clear = function () {
      (this.head = this.tail = null), (this._len = 0);
    });
  var bm = function (t) {
      (this.value = t), this.next, this.prev;
    },
    Sm = function (t) {
      (this._list = new xm()), (this._map = {}), (this._maxSize = t || 10), (this._lastRemovedEntry = null);
    },
    Mm = Sm.prototype;
  (Mm.put = function (t, e) {
    var i = this._list,
      n = this._map,
      r = null;
    if (null == n[t]) {
      var a = i.len(),
        o = this._lastRemovedEntry;
      if (a >= this._maxSize && a > 0) {
        var s = i.head;
        i.remove(s), delete n[s.key], (r = s.value), (this._lastRemovedEntry = s);
      }
      o ? (o.value = e) : (o = new bm(e)), (o.key = t), i.insertEntry(o), (n[t] = o);
    }
    return r;
  }),
    (Mm.get = function (t) {
      var e = this._map[t],
        i = this._list;
      return null != e ? (e !== i.tail && (i.remove(e), i.insertEntry(e)), e.value) : void 0;
    }),
    (Mm.clear = function () {
      this._list.clear(), (this._map = {});
    });
  var Im = {
      transparent: [0, 0, 0, 0],
      aliceblue: [240, 248, 255, 1],
      antiquewhite: [250, 235, 215, 1],
      aqua: [0, 255, 255, 1],
      aquamarine: [127, 255, 212, 1],
      azure: [240, 255, 255, 1],
      beige: [245, 245, 220, 1],
      bisque: [255, 228, 196, 1],
      black: [0, 0, 0, 1],
      blanchedalmond: [255, 235, 205, 1],
      blue: [0, 0, 255, 1],
      blueviolet: [138, 43, 226, 1],
      brown: [165, 42, 42, 1],
      burlywood: [222, 184, 135, 1],
      cadetblue: [95, 158, 160, 1],
      chartreuse: [127, 255, 0, 1],
      chocolate: [210, 105, 30, 1],
      coral: [255, 127, 80, 1],
      cornflowerblue: [100, 149, 237, 1],
      cornsilk: [255, 248, 220, 1],
      crimson: [220, 20, 60, 1],
      cyan: [0, 255, 255, 1],
      darkblue: [0, 0, 139, 1],
      darkcyan: [0, 139, 139, 1],
      darkgoldenrod: [184, 134, 11, 1],
      darkgray: [169, 169, 169, 1],
      darkgreen: [0, 100, 0, 1],
      darkgrey: [169, 169, 169, 1],
      darkkhaki: [189, 183, 107, 1],
      darkmagenta: [139, 0, 139, 1],
      darkolivegreen: [85, 107, 47, 1],
      darkorange: [255, 140, 0, 1],
      darkorchid: [153, 50, 204, 1],
      darkred: [139, 0, 0, 1],
      darksalmon: [233, 150, 122, 1],
      darkseagreen: [143, 188, 143, 1],
      darkslateblue: [72, 61, 139, 1],
      darkslategray: [47, 79, 79, 1],
      darkslategrey: [47, 79, 79, 1],
      darkturquoise: [0, 206, 209, 1],
      darkviolet: [148, 0, 211, 1],
      deeppink: [255, 20, 147, 1],
      deepskyblue: [0, 191, 255, 1],
      dimgray: [105, 105, 105, 1],
      dimgrey: [105, 105, 105, 1],
      dodgerblue: [30, 144, 255, 1],
      firebrick: [178, 34, 34, 1],
      floralwhite: [255, 250, 240, 1],
      forestgreen: [34, 139, 34, 1],
      fuchsia: [255, 0, 255, 1],
      gainsboro: [220, 220, 220, 1],
      ghostwhite: [248, 248, 255, 1],
      gold: [255, 215, 0, 1],
      goldenrod: [218, 165, 32, 1],
      gray: [128, 128, 128, 1],
      green: [0, 128, 0, 1],
      greenyellow: [173, 255, 47, 1],
      grey: [128, 128, 128, 1],
      honeydew: [240, 255, 240, 1],
      hotpink: [255, 105, 180, 1],
      indianred: [205, 92, 92, 1],
      indigo: [75, 0, 130, 1],
      ivory: [255, 255, 240, 1],
      khaki: [240, 230, 140, 1],
      lavender: [230, 230, 250, 1],
      lavenderblush: [255, 240, 245, 1],
      lawngreen: [124, 252, 0, 1],
      lemonchiffon: [255, 250, 205, 1],
      lightblue: [173, 216, 230, 1],
      lightcoral: [240, 128, 128, 1],
      lightcyan: [224, 255, 255, 1],
      lightgoldenrodyellow: [250, 250, 210, 1],
      lightgray: [211, 211, 211, 1],
      lightgreen: [144, 238, 144, 1],
      lightgrey: [211, 211, 211, 1],
      lightpink: [255, 182, 193, 1],
      lightsalmon: [255, 160, 122, 1],
      lightseagreen: [32, 178, 170, 1],
      lightskyblue: [135, 206, 250, 1],
      lightslategray: [119, 136, 153, 1],
      lightslategrey: [119, 136, 153, 1],
      lightsteelblue: [176, 196, 222, 1],
      lightyellow: [255, 255, 224, 1],
      lime: [0, 255, 0, 1],
      limegreen: [50, 205, 50, 1],
      linen: [250, 240, 230, 1],
      magenta: [255, 0, 255, 1],
      maroon: [128, 0, 0, 1],
      mediumaquamarine: [102, 205, 170, 1],
      mediumblue: [0, 0, 205, 1],
      mediumorchid: [186, 85, 211, 1],
      mediumpurple: [147, 112, 219, 1],
      mediumseagreen: [60, 179, 113, 1],
      mediumslateblue: [123, 104, 238, 1],
      mediumspringgreen: [0, 250, 154, 1],
      mediumturquoise: [72, 209, 204, 1],
      mediumvioletred: [199, 21, 133, 1],
      midnightblue: [25, 25, 112, 1],
      mintcream: [245, 255, 250, 1],
      mistyrose: [255, 228, 225, 1],
      moccasin: [255, 228, 181, 1],
      navajowhite: [255, 222, 173, 1],
      navy: [0, 0, 128, 1],
      oldlace: [253, 245, 230, 1],
      olive: [128, 128, 0, 1],
      olivedrab: [107, 142, 35, 1],
      orange: [255, 165, 0, 1],
      orangered: [255, 69, 0, 1],
      orchid: [218, 112, 214, 1],
      palegoldenrod: [238, 232, 170, 1],
      palegreen: [152, 251, 152, 1],
      paleturquoise: [175, 238, 238, 1],
      palevioletred: [219, 112, 147, 1],
      papayawhip: [255, 239, 213, 1],
      peachpuff: [255, 218, 185, 1],
      peru: [205, 133, 63, 1],
      pink: [255, 192, 203, 1],
      plum: [221, 160, 221, 1],
      powderblue: [176, 224, 230, 1],
      purple: [128, 0, 128, 1],
      red: [255, 0, 0, 1],
      rosybrown: [188, 143, 143, 1],
      royalblue: [65, 105, 225, 1],
      saddlebrown: [139, 69, 19, 1],
      salmon: [250, 128, 114, 1],
      sandybrown: [244, 164, 96, 1],
      seagreen: [46, 139, 87, 1],
      seashell: [255, 245, 238, 1],
      sienna: [160, 82, 45, 1],
      silver: [192, 192, 192, 1],
      skyblue: [135, 206, 235, 1],
      slateblue: [106, 90, 205, 1],
      slategray: [112, 128, 144, 1],
      slategrey: [112, 128, 144, 1],
      snow: [255, 250, 250, 1],
      springgreen: [0, 255, 127, 1],
      steelblue: [70, 130, 180, 1],
      tan: [210, 180, 140, 1],
      teal: [0, 128, 128, 1],
      thistle: [216, 191, 216, 1],
      tomato: [255, 99, 71, 1],
      turquoise: [64, 224, 208, 1],
      violet: [238, 130, 238, 1],
      wheat: [245, 222, 179, 1],
      white: [255, 255, 255, 1],
      whitesmoke: [245, 245, 245, 1],
      yellow: [255, 255, 0, 1],
      yellowgreen: [154, 205, 50, 1],
    },
    Cm = new Sm(20),
    Tm = null,
    Dm = ti,
    Am = ei,
    km = (Object.freeze || Object)({
      parse: qe,
      lift: Je,
      toHex: Qe,
      fastLerp: ti,
      fastMapToColor: Dm,
      lerp: ei,
      mapToColor: Am,
      modifyHSL: ii,
      modifyAlpha: ni,
      stringify: ri,
    }),
    Pm = Array.prototype.slice,
    Lm = function (t, e, i, n) {
      (this._tracks = {}),
        (this._target = t),
        (this._loop = e || !1),
        (this._getter = i || ai),
        (this._setter = n || oi),
        (this._clipCount = 0),
        (this._delay = 0),
        (this._doneList = []),
        (this._onframeList = []),
        (this._clipList = []);
    };
  Lm.prototype = {
    when: function (t, e) {
      var i = this._tracks;
      for (var n in e)
        if (e.hasOwnProperty(n)) {
          if (!i[n]) {
            i[n] = [];
            var r = this._getter(this._target, n);
            if (null == r) continue;
            0 !== t && i[n].push({ time: 0, value: pi(r) });
          }
          i[n].push({ time: t, value: e[n] });
        }
      return this;
    },
    during: function (t) {
      return this._onframeList.push(t), this;
    },
    pause: function () {
      for (var t = 0; t < this._clipList.length; t++) this._clipList[t].pause();
      this._paused = !0;
    },
    resume: function () {
      for (var t = 0; t < this._clipList.length; t++) this._clipList[t].resume();
      this._paused = !1;
    },
    isPaused: function () {
      return !!this._paused;
    },
    _doneCallback: function () {
      (this._tracks = {}), (this._clipList.length = 0);
      for (var t = this._doneList, e = t.length, i = 0; e > i; i++) t[i].call(this);
    },
    start: function (t, e) {
      var i,
        n = this,
        r = 0,
        a = function () {
          r--, r || n._doneCallback();
        };
      for (var o in this._tracks)
        if (this._tracks.hasOwnProperty(o)) {
          var s = vi(this, t, a, this._tracks[o], o, e);
          s && (this._clipList.push(s), r++, this.animation && this.animation.addClip(s), (i = s));
        }
      if (i) {
        var l = i.onframe;
        i.onframe = function (t, e) {
          l(t, e);
          for (var i = 0; i < n._onframeList.length; i++) n._onframeList[i](t, e);
        };
      }
      return r || this._doneCallback(), this;
    },
    stop: function (t) {
      for (var e = this._clipList, i = this.animation, n = 0; n < e.length; n++) {
        var r = e[n];
        t && r.onframe(this._target, 1), i && i.removeClip(r);
      }
      e.length = 0;
    },
    delay: function (t) {
      return (this._delay = t), this;
    },
    done: function (t) {
      return t && this._doneList.push(t), this;
    },
    getClips: function () {
      return this._clipList;
    },
  };
  var Om = 1;
  'undefined' != typeof window && (Om = Math.max(window.devicePixelRatio || 1, 1));
  var zm = 0,
    Em = Om,
    Rm = function () {};
  1 === zm && (Rm = console.error);
  var Bm = Rm,
    Nm = function () {
      this.animators = [];
    };
  Nm.prototype = {
    constructor: Nm,
    animate: function (t, e) {
      var i,
        n = !1,
        r = this,
        a = this.__zr;
      if (t) {
        var o = t.split('.'),
          s = r;
        n = 'shape' === o[0];
        for (var l = 0, h = o.length; h > l; l++) s && (s = s[o[l]]);
        s && (i = s);
      } else i = r;
      if (!i) return void Bm('Property "' + t + '" is not existed in element ' + r.id);
      var c = r.animators,
        d = new Lm(i, e);
      return (
        d
          .during(function () {
            r.dirty(n);
          })
          .done(function () {
            c.splice(u(c, d), 1);
          }),
        c.push(d),
        a && a.animation.addAnimator(d),
        d
      );
    },
    stopAnimation: function (t) {
      for (var e = this.animators, i = e.length, n = 0; i > n; n++) e[n].stop(t);
      return (e.length = 0), this;
    },
    animateTo: function (t, e, i, n, r, a) {
      yi(this, t, e, i, n, r, a);
    },
    animateFrom: function (t, e, i, n, r, a) {
      yi(this, t, e, i, n, r, a, !0);
    },
  };
  var Fm = function (t) {
    pm.call(this, t), Jg.call(this, t), Nm.call(this, t), (this.id = t.id || Dg());
  };
  (Fm.prototype = {
    type: 'element',
    name: '',
    __zr: null,
    ignore: !1,
    clipPath: null,
    isGroup: !1,
    drift: function (t, e) {
      switch (this.draggable) {
        case 'horizontal':
          e = 0;
          break;
        case 'vertical':
          t = 0;
      }
      var i = this.transform;
      i || (i = this.transform = [1, 0, 0, 1, 0, 0]),
        (i[4] += t),
        (i[5] += e),
        this.decomposeTransform(),
        this.dirty(!1);
    },
    beforeUpdate: function () {},
    afterUpdate: function () {},
    update: function () {
      this.updateTransform();
    },
    traverse: function () {},
    attrKV: function (t, e) {
      if ('position' === t || 'scale' === t || 'origin' === t) {
        if (e) {
          var i = this[t];
          i || (i = this[t] = []), (i[0] = e[0]), (i[1] = e[1]);
        }
      } else this[t] = e;
    },
    hide: function () {
      (this.ignore = !0), this.__zr && this.__zr.refresh();
    },
    show: function () {
      (this.ignore = !1), this.__zr && this.__zr.refresh();
    },
    attr: function (t, e) {
      if ('string' == typeof t) this.attrKV(t, e);
      else if (S(t)) for (var i in t) t.hasOwnProperty(i) && this.attrKV(i, t[i]);
      return this.dirty(!1), this;
    },
    setClipPath: function (t) {
      var e = this.__zr;
      e && t.addSelfToZr(e),
        this.clipPath && this.clipPath !== t && this.removeClipPath(),
        (this.clipPath = t),
        (t.__zr = e),
        (t.__clipTarget = this),
        this.dirty(!1);
    },
    removeClipPath: function () {
      var t = this.clipPath;
      t &&
        (t.__zr && t.removeSelfFromZr(t.__zr),
        (t.__zr = null),
        (t.__clipTarget = null),
        (this.clipPath = null),
        this.dirty(!1));
    },
    addSelfToZr: function (t) {
      this.__zr = t;
      var e = this.animators;
      if (e) for (var i = 0; i < e.length; i++) t.animation.addAnimator(e[i]);
      this.clipPath && this.clipPath.addSelfToZr(t);
    },
    removeSelfFromZr: function (t) {
      this.__zr = null;
      var e = this.animators;
      if (e) for (var i = 0; i < e.length; i++) t.animation.removeAnimator(e[i]);
      this.clipPath && this.clipPath.removeSelfFromZr(t);
    },
  }),
    c(Fm, Nm),
    c(Fm, pm),
    c(Fm, Jg);
  var Gm = ae,
    Vm = Math.min,
    Hm = Math.max;
  (wi.prototype = {
    constructor: wi,
    union: function (t) {
      var e = Vm(t.x, this.x),
        i = Vm(t.y, this.y);
      (this.width = Hm(t.x + t.width, this.x + this.width) - e),
        (this.height = Hm(t.y + t.height, this.y + this.height) - i),
        (this.x = e),
        (this.y = i);
    },
    applyTransform: (function () {
      var t = [],
        e = [],
        i = [],
        n = [];
      return function (r) {
        if (r) {
          (t[0] = i[0] = this.x),
            (t[1] = n[1] = this.y),
            (e[0] = n[0] = this.x + this.width),
            (e[1] = i[1] = this.y + this.height),
            Gm(t, t, r),
            Gm(e, e, r),
            Gm(i, i, r),
            Gm(n, n, r),
            (this.x = Vm(t[0], e[0], i[0], n[0])),
            (this.y = Vm(t[1], e[1], i[1], n[1]));
          var a = Hm(t[0], e[0], i[0], n[0]),
            o = Hm(t[1], e[1], i[1], n[1]);
          (this.width = a - this.x), (this.height = o - this.y);
        }
      };
    })(),
    calculateTransform: function (t) {
      var e = this,
        i = t.width / e.width,
        n = t.height / e.height,
        r = De();
      return Le(r, r, [-e.x, -e.y]), ze(r, r, [i, n]), Le(r, r, [t.x, t.y]), r;
    },
    intersect: function (t) {
      if (!t) return !1;
      t instanceof wi || (t = wi.create(t));
      var e = this,
        i = e.x,
        n = e.x + e.width,
        r = e.y,
        a = e.y + e.height,
        o = t.x,
        s = t.x + t.width,
        l = t.y,
        u = t.y + t.height;
      return !(o > n || i > s || l > a || r > u);
    },
    contain: function (t, e) {
      var i = this;
      return t >= i.x && t <= i.x + i.width && e >= i.y && e <= i.y + i.height;
    },
    clone: function () {
      return new wi(this.x, this.y, this.width, this.height);
    },
    copy: function (t) {
      (this.x = t.x), (this.y = t.y), (this.width = t.width), (this.height = t.height);
    },
    plain: function () {
      return { x: this.x, y: this.y, width: this.width, height: this.height };
    },
  }),
    (wi.create = function (t) {
      return new wi(t.x, t.y, t.width, t.height);
    });
  var Wm = function (t) {
    (t = t || {}), Fm.call(this, t);
    for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
    (this._children = []), (this.__storage = null), (this.__dirty = !0);
  };
  (Wm.prototype = {
    constructor: Wm,
    isGroup: !0,
    type: 'group',
    silent: !1,
    children: function () {
      return this._children.slice();
    },
    childAt: function (t) {
      return this._children[t];
    },
    childOfName: function (t) {
      for (var e = this._children, i = 0; i < e.length; i++) if (e[i].name === t) return e[i];
    },
    childCount: function () {
      return this._children.length;
    },
    add: function (t) {
      return t && t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), this;
    },
    addBefore: function (t, e) {
      if (t && t !== this && t.parent !== this && e && e.parent === this) {
        var i = this._children,
          n = i.indexOf(e);
        n >= 0 && (i.splice(n, 0, t), this._doAdd(t));
      }
      return this;
    },
    _doAdd: function (t) {
      t.parent && t.parent.remove(t), (t.parent = this);
      var e = this.__storage,
        i = this.__zr;
      e && e !== t.__storage && (e.addToStorage(t), t instanceof Wm && t.addChildrenToStorage(e)), i && i.refresh();
    },
    remove: function (t) {
      var e = this.__zr,
        i = this.__storage,
        n = this._children,
        r = u(n, t);
      return 0 > r
        ? this
        : (n.splice(r, 1),
          (t.parent = null),
          i && (i.delFromStorage(t), t instanceof Wm && t.delChildrenFromStorage(i)),
          e && e.refresh(),
          this);
    },
    removeAll: function () {
      var t,
        e,
        i = this._children,
        n = this.__storage;
      for (e = 0; e < i.length; e++)
        (t = i[e]), n && (n.delFromStorage(t), t instanceof Wm && t.delChildrenFromStorage(n)), (t.parent = null);
      return (i.length = 0), this;
    },
    eachChild: function (t, e) {
      for (var i = this._children, n = 0; n < i.length; n++) {
        var r = i[n];
        t.call(e, r, n);
      }
      return this;
    },
    traverse: function (t, e) {
      for (var i = 0; i < this._children.length; i++) {
        var n = this._children[i];
        t.call(e, n), 'group' === n.type && n.traverse(t, e);
      }
      return this;
    },
    addChildrenToStorage: function (t) {
      for (var e = 0; e < this._children.length; e++) {
        var i = this._children[e];
        t.addToStorage(i), i instanceof Wm && i.addChildrenToStorage(t);
      }
    },
    delChildrenFromStorage: function (t) {
      for (var e = 0; e < this._children.length; e++) {
        var i = this._children[e];
        t.delFromStorage(i), i instanceof Wm && i.delChildrenFromStorage(t);
      }
    },
    dirty: function () {
      return (this.__dirty = !0), this.__zr && this.__zr.refresh(), this;
    },
    getBoundingRect: function (t) {
      for (var e = null, i = new wi(0, 0, 0, 0), n = t || this._children, r = [], a = 0; a < n.length; a++) {
        var o = n[a];
        if (!o.ignore && !o.invisible) {
          var s = o.getBoundingRect(),
            l = o.getLocalTransform(r);
          l ? (i.copy(s), i.applyTransform(l), (e = e || i.clone()), e.union(i)) : ((e = e || s.clone()), e.union(s));
        }
      }
      return e || i;
    },
  }),
    h(Wm, Fm);
  var Um = 32,
    Xm = 7,
    Ym = function () {
      (this._roots = []), (this._displayList = []), (this._displayListLen = 0);
    };
  Ym.prototype = {
    constructor: Ym,
    traverse: function (t, e) {
      for (var i = 0; i < this._roots.length; i++) this._roots[i].traverse(t, e);
    },
    getDisplayList: function (t, e) {
      return (e = e || !1), t && this.updateDisplayList(e), this._displayList;
    },
    updateDisplayList: function (t) {
      this._displayListLen = 0;
      for (var e = this._roots, i = this._displayList, n = 0, r = e.length; r > n; n++)
        this._updateAndAddDisplayable(e[n], null, t);
      (i.length = this._displayListLen), kg.canvasSupported && Ai(i, ki);
    },
    _updateAndAddDisplayable: function (t, e, i) {
      if (!t.ignore || i) {
        t.beforeUpdate(), t.__dirty && t.update(), t.afterUpdate();
        var n = t.clipPath;
        if (n) {
          e = e ? e.slice() : [];
          for (var r = n, a = t; r; ) (r.parent = a), r.updateTransform(), e.push(r), (a = r), (r = r.clipPath);
        }
        if (t.isGroup) {
          for (var o = t._children, s = 0; s < o.length; s++) {
            var l = o[s];
            t.__dirty && (l.__dirty = !0), this._updateAndAddDisplayable(l, e, i);
          }
          t.__dirty = !1;
        } else (t.__clipPaths = e), (this._displayList[this._displayListLen++] = t);
      }
    },
    addRoot: function (t) {
      t.__storage !== this &&
        (t instanceof Wm && t.addChildrenToStorage(this), this.addToStorage(t), this._roots.push(t));
    },
    delRoot: function (t) {
      if (null == t) {
        for (var e = 0; e < this._roots.length; e++) {
          var i = this._roots[e];
          i instanceof Wm && i.delChildrenFromStorage(this);
        }
        return (this._roots = []), (this._displayList = []), void (this._displayListLen = 0);
      }
      if (t instanceof Array) for (var e = 0, n = t.length; n > e; e++) this.delRoot(t[e]);
      else {
        var r = u(this._roots, t);
        r >= 0 && (this.delFromStorage(t), this._roots.splice(r, 1), t instanceof Wm && t.delChildrenFromStorage(this));
      }
    },
    addToStorage: function (t) {
      return t && ((t.__storage = this), t.dirty(!1)), this;
    },
    delFromStorage: function (t) {
      return t && (t.__storage = null), this;
    },
    dispose: function () {
      this._renderList = this._roots = null;
    },
    displayableSortFunc: ki,
  };
  var Zm = {
      shadowBlur: 1,
      shadowOffsetX: 1,
      shadowOffsetY: 1,
      textShadowBlur: 1,
      textShadowOffsetX: 1,
      textShadowOffsetY: 1,
      textBoxShadowBlur: 1,
      textBoxShadowOffsetX: 1,
      textBoxShadowOffsetY: 1,
    },
    jm = function (t, e, i) {
      return Zm.hasOwnProperty(e) ? (i *= t.dpr) : i;
    },
    qm = { NONE: 0, STYLE_BIND: 1, PLAIN_TEXT: 2 },
    Km = 9,
    $m = [
      ['shadowBlur', 0],
      ['shadowOffsetX', 0],
      ['shadowOffsetY', 0],
      ['shadowColor', '#000'],
      ['lineCap', 'butt'],
      ['lineJoin', 'miter'],
      ['miterLimit', 10],
    ],
    Jm = function (t) {
      this.extendFrom(t, !1);
    };
  Jm.prototype = {
    constructor: Jm,
    fill: '#000',
    stroke: null,
    opacity: 1,
    fillOpacity: null,
    strokeOpacity: null,
    lineDash: null,
    lineDashOffset: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    lineWidth: 1,
    strokeNoScale: !1,
    text: null,
    font: null,
    textFont: null,
    fontStyle: null,
    fontWeight: null,
    fontSize: null,
    fontFamily: null,
    textTag: null,
    textFill: '#000',
    textStroke: null,
    textWidth: null,
    textHeight: null,
    textStrokeWidth: 0,
    textLineHeight: null,
    textPosition: 'inside',
    textRect: null,
    textOffset: null,
    textAlign: null,
    textVerticalAlign: null,
    textDistance: 5,
    textShadowColor: 'transparent',
    textShadowBlur: 0,
    textShadowOffsetX: 0,
    textShadowOffsetY: 0,
    textBoxShadowColor: 'transparent',
    textBoxShadowBlur: 0,
    textBoxShadowOffsetX: 0,
    textBoxShadowOffsetY: 0,
    transformText: !1,
    textRotation: 0,
    textOrigin: null,
    textBackgroundColor: null,
    textBorderColor: null,
    textBorderWidth: 0,
    textBorderRadius: 0,
    textPadding: null,
    rich: null,
    truncate: null,
    blend: null,
    bind: function (t, e, i) {
      var n = this,
        r = i && i.style,
        a = !r || t.__attrCachedBy !== qm.STYLE_BIND;
      t.__attrCachedBy = qm.STYLE_BIND;
      for (var o = 0; o < $m.length; o++) {
        var s = $m[o],
          l = s[0];
        (a || n[l] !== r[l]) && (t[l] = jm(t, l, n[l] || s[1]));
      }
      if (
        ((a || n.fill !== r.fill) && (t.fillStyle = n.fill),
        (a || n.stroke !== r.stroke) && (t.strokeStyle = n.stroke),
        (a || n.opacity !== r.opacity) && (t.globalAlpha = null == n.opacity ? 1 : n.opacity),
        (a || n.blend !== r.blend) && (t.globalCompositeOperation = n.blend || 'source-over'),
        this.hasStroke())
      ) {
        var u = n.lineWidth;
        t.lineWidth = u / (this.strokeNoScale && e && e.getLineScale ? e.getLineScale() : 1);
      }
    },
    hasFill: function () {
      var t = this.fill;
      return null != t && 'none' !== t;
    },
    hasStroke: function () {
      var t = this.stroke;
      return null != t && 'none' !== t && this.lineWidth > 0;
    },
    extendFrom: function (t, e) {
      if (t)
        for (var i in t)
          !t.hasOwnProperty(i) || (e !== !0 && (e === !1 ? this.hasOwnProperty(i) : null == t[i])) || (this[i] = t[i]);
    },
    set: function (t, e) {
      'string' == typeof t ? (this[t] = e) : this.extendFrom(t, !0);
    },
    clone: function () {
      var t = new this.constructor();
      return t.extendFrom(this, !0), t;
    },
    getGradient: function (t, e, i) {
      for (var n = 'radial' === e.type ? Li : Pi, r = n(t, e, i), a = e.colorStops, o = 0; o < a.length; o++)
        r.addColorStop(a[o].offset, a[o].color);
      return r;
    },
  };
  for (var Qm = Jm.prototype, tv = 0; tv < $m.length; tv++) {
    var ev = $m[tv];
    ev[0] in Qm || (Qm[ev[0]] = ev[1]);
  }
  Jm.getGradient = Qm.getGradient;
  var iv = function (t, e) {
    (this.image = t), (this.repeat = e), (this.type = 'pattern');
  };
  iv.prototype.getCanvasPattern = function (t) {
    return t.createPattern(this.image, this.repeat || 'repeat');
  };
  var nv = function (t, e, i) {
    var n;
    (i = i || Em),
      'string' == typeof t ? (n = zi(t, e, i)) : S(t) && ((n = t), (t = n.id)),
      (this.id = t),
      (this.dom = n);
    var r = n.style;
    r &&
      ((n.onselectstart = Oi),
      (r['-webkit-user-select'] = 'none'),
      (r['user-select'] = 'none'),
      (r['-webkit-touch-callout'] = 'none'),
      (r['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)'),
      (r.padding = 0),
      (r.margin = 0),
      (r['border-width'] = 0)),
      (this.domBack = null),
      (this.ctxBack = null),
      (this.painter = e),
      (this.config = null),
      (this.clearColor = 0),
      (this.motionBlur = !1),
      (this.lastFrameAlpha = 0.7),
      (this.dpr = i);
  };
  nv.prototype = {
    constructor: nv,
    __dirty: !0,
    __used: !1,
    __drawIndex: 0,
    __startIndex: 0,
    __endIndex: 0,
    incremental: !1,
    getElementCount: function () {
      return this.__endIndex - this.__startIndex;
    },
    initContext: function () {
      (this.ctx = this.dom.getContext('2d')), (this.ctx.dpr = this.dpr);
    },
    createBackBuffer: function () {
      var t = this.dpr;
      (this.domBack = zi('back-' + this.id, this.painter, t)),
        (this.ctxBack = this.domBack.getContext('2d')),
        1 !== t && this.ctxBack.scale(t, t);
    },
    resize: function (t, e) {
      var i = this.dpr,
        n = this.dom,
        r = n.style,
        a = this.domBack;
      r && ((r.width = t + 'px'), (r.height = e + 'px')),
        (n.width = t * i),
        (n.height = e * i),
        a && ((a.width = t * i), (a.height = e * i), 1 !== i && this.ctxBack.scale(i, i));
    },
    clear: function (t, e) {
      var i = this.dom,
        n = this.ctx,
        r = i.width,
        a = i.height,
        e = e || this.clearColor,
        o = this.motionBlur && !t,
        s = this.lastFrameAlpha,
        l = this.dpr;
      if (
        (o &&
          (this.domBack || this.createBackBuffer(),
          (this.ctxBack.globalCompositeOperation = 'copy'),
          this.ctxBack.drawImage(i, 0, 0, r / l, a / l)),
        n.clearRect(0, 0, r, a),
        e && 'transparent' !== e)
      ) {
        var u;
        e.colorStops
          ? ((u = e.__canvasGradient || Jm.getGradient(n, e, { x: 0, y: 0, width: r, height: a })),
            (e.__canvasGradient = u))
          : e.image && (u = iv.prototype.getCanvasPattern.call(e, n)),
          n.save(),
          (n.fillStyle = u || e),
          n.fillRect(0, 0, r, a),
          n.restore();
      }
      if (o) {
        var h = this.domBack;
        n.save(), (n.globalAlpha = s), n.drawImage(h, 0, 0, r, a), n.restore();
      }
    },
  };
  var rv =
      ('undefined' != typeof window &&
        ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window)) ||
          (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window)) ||
          window.mozRequestAnimationFrame ||
          window.webkitRequestAnimationFrame)) ||
      function (t) {
        setTimeout(t, 16);
      },
    av = new Sm(50),
    ov = {},
    sv = 0,
    lv = 5e3,
    uv = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,
    hv = '12px sans-serif',
    cv = {};
  cv.measureText = function (t, e) {
    var i = l();
    return (i.font = e || hv), i.measureText(t);
  };
  var dv = hv,
    fv = { left: 1, right: 1, center: 1 },
    pv = { top: 1, bottom: 1, middle: 1 },
    gv = [
      ['textShadowBlur', 'shadowBlur', 0],
      ['textShadowOffsetX', 'shadowOffsetX', 0],
      ['textShadowOffsetY', 'shadowOffsetY', 0],
      ['textShadowColor', 'shadowColor', 'transparent'],
    ],
    mv = {},
    vv = {},
    yv = new wi(),
    _v = function () {};
  (_v.prototype = {
    constructor: _v,
    drawRectText: function (t, e) {
      var i = this.style;
      (e = i.textRect || e), this.__dirty && rn(i, !0);
      var n = i.text;
      if ((null != n && (n += ''), wn(n, i))) {
        t.save();
        var r = this.transform;
        i.transformText ? this.setTransform(t) : r && (yv.copy(e), yv.applyTransform(r), (e = yv)),
          on(this, t, n, i, e, Km),
          t.restore();
      }
    },
  }),
    (bn.prototype = {
      constructor: bn,
      type: 'displayable',
      __dirty: !0,
      invisible: !1,
      z: 0,
      z2: 0,
      zlevel: 0,
      draggable: !1,
      dragging: !1,
      silent: !1,
      culling: !1,
      cursor: 'pointer',
      rectHover: !1,
      progressive: !1,
      incremental: !1,
      globalScaleRatio: 1,
      beforeBrush: function () {},
      afterBrush: function () {},
      brush: function () {},
      getBoundingRect: function () {},
      contain: function (t, e) {
        return this.rectContain(t, e);
      },
      traverse: function (t, e) {
        t.call(e, this);
      },
      rectContain: function (t, e) {
        var i = this.transformCoordToLocal(t, e),
          n = this.getBoundingRect();
        return n.contain(i[0], i[1]);
      },
      dirty: function () {
        (this.__dirty = this.__dirtyText = !0), (this._rect = null), this.__zr && this.__zr.refresh();
      },
      animateStyle: function (t) {
        return this.animate('style', t);
      },
      attrKV: function (t, e) {
        'style' !== t ? Fm.prototype.attrKV.call(this, t, e) : this.style.set(e);
      },
      setStyle: function (t, e) {
        return this.style.set(t, e), this.dirty(!1), this;
      },
      useStyle: function (t) {
        return (this.style = new Jm(t, this)), this.dirty(!1), this;
      },
      calculateTextPosition: null,
    }),
    h(bn, Fm),
    c(bn, _v),
    (Sn.prototype = {
      constructor: Sn,
      type: 'image',
      brush: function (t, e) {
        var i = this.style,
          n = i.image;
        i.bind(t, this, e);
        var r = (this._image = Ri(n, this._image, this, this.onload));
        if (r && Ni(r)) {
          var a = i.x || 0,
            o = i.y || 0,
            s = i.width,
            l = i.height,
            u = r.width / r.height;
          if (
            (null == s && null != l
              ? (s = l * u)
              : null == l && null != s
              ? (l = s / u)
              : null == s && null == l && ((s = r.width), (l = r.height)),
            this.setTransform(t),
            i.sWidth && i.sHeight)
          ) {
            var h = i.sx || 0,
              c = i.sy || 0;
            t.drawImage(r, h, c, i.sWidth, i.sHeight, a, o, s, l);
          } else if (i.sx && i.sy) {
            var h = i.sx,
              c = i.sy,
              d = s - h,
              f = l - c;
            t.drawImage(r, h, c, d, f, a, o, s, l);
          } else t.drawImage(r, a, o, s, l);
          null != i.text && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect()));
        }
      },
      getBoundingRect: function () {
        var t = this.style;
        return this._rect || (this._rect = new wi(t.x || 0, t.y || 0, t.width || 0, t.height || 0)), this._rect;
      },
    }),
    h(Sn, bn);
  var xv = 1e5,
    wv = 314159,
    bv = 0.01,
    Sv = 0.001,
    Mv = new wi(0, 0, 0, 0),
    Iv = new wi(0, 0, 0, 0),
    Cv = function (t, e, i) {
      this.type = 'canvas';
      var n = !t.nodeName || 'CANVAS' === t.nodeName.toUpperCase();
      (this._opts = i = o({}, i || {})),
        (this.dpr = i.devicePixelRatio || Em),
        (this._singleCanvas = n),
        (this.root = t);
      var r = t.style;
      r &&
        ((r['-webkit-tap-highlight-color'] = 'transparent'),
        (r['-webkit-user-select'] = r['user-select'] = r['-webkit-touch-callout'] = 'none'),
        (t.innerHTML = '')),
        (this.storage = e);
      var a = (this._zlevelList = []),
        s = (this._layers = {});
      if (((this._layerConfig = {}), (this._needsManuallyCompositing = !1), n)) {
        var l = t.width,
          u = t.height;
        null != i.width && (l = i.width),
          null != i.height && (u = i.height),
          (this.dpr = i.devicePixelRatio || 1),
          (t.width = l * this.dpr),
          (t.height = u * this.dpr),
          (this._width = l),
          (this._height = u);
        var h = new nv(t, this, this.dpr);
        (h.__builtin__ = !0), h.initContext(), (s[wv] = h), (h.zlevel = wv), a.push(wv), (this._domRoot = t);
      } else {
        (this._width = this._getSize(0)), (this._height = this._getSize(1));
        var c = (this._domRoot = An(this._width, this._height));
        t.appendChild(c);
      }
      (this._hoverlayer = null), (this._hoverElements = []);
    };
  Cv.prototype = {
    constructor: Cv,
    getType: function () {
      return 'canvas';
    },
    isSingleCanvas: function () {
      return this._singleCanvas;
    },
    getViewportRoot: function () {
      return this._domRoot;
    },
    getViewportRootOffset: function () {
      var t = this.getViewportRoot();
      return t ? { offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0 } : void 0;
    },
    refresh: function (t) {
      var e = this.storage.getDisplayList(!0),
        i = this._zlevelList;
      (this._redrawId = Math.random()), this._paintList(e, t, this._redrawId);
      for (var n = 0; n < i.length; n++) {
        var r = i[n],
          a = this._layers[r];
        if (!a.__builtin__ && a.refresh) {
          var o = 0 === n ? this._backgroundColor : null;
          a.refresh(o);
        }
      }
      return this.refreshHover(), this;
    },
    addHover: function (t, e) {
      if (!t.__hoverMir) {
        var i = new t.constructor({ style: t.style, shape: t.shape, z: t.z, z2: t.z2, silent: t.silent });
        return (i.__from = t), (t.__hoverMir = i), e && i.setStyle(e), this._hoverElements.push(i), i;
      }
    },
    removeHover: function (t) {
      var e = t.__hoverMir,
        i = this._hoverElements,
        n = u(i, e);
      n >= 0 && i.splice(n, 1), (t.__hoverMir = null);
    },
    clearHover: function () {
      for (var t = this._hoverElements, e = 0; e < t.length; e++) {
        var i = t[e].__from;
        i && (i.__hoverMir = null);
      }
      t.length = 0;
    },
    refreshHover: function () {
      var t = this._hoverElements,
        e = t.length,
        i = this._hoverlayer;
      if ((i && i.clear(), e)) {
        Ai(t, this.storage.displayableSortFunc), i || (i = this._hoverlayer = this.getLayer(xv));
        var n = {};
        i.ctx.save();
        for (var r = 0; e > r; ) {
          var a = t[r],
            o = a.__from;
          o && o.__zr
            ? (r++,
              o.invisible ||
                ((a.transform = o.transform),
                (a.invTransform = o.invTransform),
                (a.__clipPaths = o.__clipPaths),
                this._doPaintEl(a, i, !0, n)))
            : (t.splice(r, 1), (o.__hoverMir = null), e--);
        }
        i.ctx.restore();
      }
    },
    getHoverLayer: function () {
      return this.getLayer(xv);
    },
    _paintList: function (t, e, i) {
      if (this._redrawId === i) {
        (e = e || !1), this._updateLayerStatus(t);
        var n = this._doPaintList(t, e);
        if ((this._needsManuallyCompositing && this._compositeManually(), !n)) {
          var r = this;
          rv(function () {
            r._paintList(t, e, i);
          });
        }
      }
    },
    _compositeManually: function () {
      var t = this.getLayer(wv).ctx,
        e = this._domRoot.width,
        i = this._domRoot.height;
      t.clearRect(0, 0, e, i),
        this.eachBuiltinLayer(function (n) {
          n.virtual && t.drawImage(n.dom, 0, 0, e, i);
        });
    },
    _doPaintList: function (t, e) {
      for (var i = [], n = 0; n < this._zlevelList.length; n++) {
        var r = this._zlevelList[n],
          a = this._layers[r];
        a.__builtin__ && a !== this._hoverlayer && (a.__dirty || e) && i.push(a);
      }
      for (var o = !0, s = 0; s < i.length; s++) {
        var a = i[s],
          l = a.ctx,
          u = {};
        l.save();
        var h = e ? a.__startIndex : a.__drawIndex,
          c = !e && a.incremental && Date.now,
          d = c && Date.now(),
          p = a.zlevel === this._zlevelList[0] ? this._backgroundColor : null;
        if (a.__startIndex === a.__endIndex) a.clear(!1, p);
        else if (h === a.__startIndex) {
          var g = t[h];
          (g.incremental && g.notClear && !e) || a.clear(!1, p);
        }
        -1 === h && (console.error('For some unknown reason. drawIndex is -1'), (h = a.__startIndex));
        for (var m = h; m < a.__endIndex; m++) {
          var v = t[m];
          if ((this._doPaintEl(v, a, e, u), (v.__dirty = v.__dirtyText = !1), c)) {
            var y = Date.now() - d;
            if (y > 15) break;
          }
        }
        (a.__drawIndex = m), a.__drawIndex < a.__endIndex && (o = !1), u.prevElClipPaths && l.restore(), l.restore();
      }
      return (
        kg.wxa &&
          f(this._layers, function (t) {
            t && t.ctx && t.ctx.draw && t.ctx.draw();
          }),
        o
      );
    },
    _doPaintEl: function (t, e, i, n) {
      var r = e.ctx,
        a = t.transform;
      if (
        !(
          (!e.__dirty && !i) ||
          t.invisible ||
          0 === t.style.opacity ||
          (a && !a[0] && !a[3]) ||
          (t.culling && Cn(t, this._width, this._height))
        )
      ) {
        var o = t.__clipPaths,
          s = n.prevElClipPaths;
        (!s || Tn(o, s)) &&
          (s && (r.restore(), (n.prevElClipPaths = null), (n.prevEl = null)),
          o && (r.save(), Dn(o, r), (n.prevElClipPaths = o))),
          t.beforeBrush && t.beforeBrush(r),
          t.brush(r, n.prevEl || null),
          (n.prevEl = t),
          t.afterBrush && t.afterBrush(r);
      }
    },
    getLayer: function (t, e) {
      this._singleCanvas && !this._needsManuallyCompositing && (t = wv);
      var i = this._layers[t];
      return (
        i ||
          ((i = new nv('zr_' + t, this, this.dpr)),
          (i.zlevel = t),
          (i.__builtin__ = !0),
          this._layerConfig[t] && r(i, this._layerConfig[t], !0),
          e && (i.virtual = e),
          this.insertLayer(t, i),
          i.initContext()),
        i
      );
    },
    insertLayer: function (t, e) {
      var i = this._layers,
        n = this._zlevelList,
        r = n.length,
        a = null,
        o = -1,
        s = this._domRoot;
      if (i[t]) return void Bm('ZLevel ' + t + ' has been used already');
      if (!In(e)) return void Bm('Layer of zlevel ' + t + ' is not valid');
      if (r > 0 && t > n[0]) {
        for (o = 0; r - 1 > o && !(n[o] < t && n[o + 1] > t); o++);
        a = i[n[o]];
      }
      if ((n.splice(o + 1, 0, t), (i[t] = e), !e.virtual))
        if (a) {
          var l = a.dom;
          l.nextSibling ? s.insertBefore(e.dom, l.nextSibling) : s.appendChild(e.dom);
        } else s.firstChild ? s.insertBefore(e.dom, s.firstChild) : s.appendChild(e.dom);
    },
    eachLayer: function (t, e) {
      var i,
        n,
        r = this._zlevelList;
      for (n = 0; n < r.length; n++) (i = r[n]), t.call(e, this._layers[i], i);
    },
    eachBuiltinLayer: function (t, e) {
      var i,
        n,
        r,
        a = this._zlevelList;
      for (r = 0; r < a.length; r++) (n = a[r]), (i = this._layers[n]), i.__builtin__ && t.call(e, i, n);
    },
    eachOtherLayer: function (t, e) {
      var i,
        n,
        r,
        a = this._zlevelList;
      for (r = 0; r < a.length; r++) (n = a[r]), (i = this._layers[n]), i.__builtin__ || t.call(e, i, n);
    },
    getLayers: function () {
      return this._layers;
    },
    _updateLayerStatus: function (t) {
      function e(t) {
        r && (r.__endIndex !== t && (r.__dirty = !0), (r.__endIndex = t));
      }
      if (
        (this.eachBuiltinLayer(function (t) {
          t.__dirty = t.__used = !1;
        }),
        this._singleCanvas)
      )
        for (var i = 1; i < t.length; i++) {
          var n = t[i];
          if (n.zlevel !== t[i - 1].zlevel || n.incremental) {
            this._needsManuallyCompositing = !0;
            break;
          }
        }
      for (var r = null, a = 0, i = 0; i < t.length; i++) {
        var o,
          n = t[i],
          s = n.zlevel;
        n.incremental
          ? ((o = this.getLayer(s + Sv, this._needsManuallyCompositing)), (o.incremental = !0), (a = 1))
          : (o = this.getLayer(s + (a > 0 ? bv : 0), this._needsManuallyCompositing)),
          o.__builtin__ || Bm('ZLevel ' + s + ' has been used by unkown layer ' + o.id),
          o !== r &&
            ((o.__used = !0),
            o.__startIndex !== i && (o.__dirty = !0),
            (o.__startIndex = i),
            (o.__drawIndex = o.incremental ? -1 : i),
            e(i),
            (r = o)),
          n.__dirty && ((o.__dirty = !0), o.incremental && o.__drawIndex < 0 && (o.__drawIndex = i));
      }
      e(i),
        this.eachBuiltinLayer(function (t) {
          !t.__used &&
            t.getElementCount() > 0 &&
            ((t.__dirty = !0), (t.__startIndex = t.__endIndex = t.__drawIndex = 0)),
            t.__dirty && t.__drawIndex < 0 && (t.__drawIndex = t.__startIndex);
        });
    },
    clear: function () {
      return this.eachBuiltinLayer(this._clearLayer), this;
    },
    _clearLayer: function (t) {
      t.clear();
    },
    setBackgroundColor: function (t) {
      this._backgroundColor = t;
    },
    configLayer: function (t, e) {
      if (e) {
        var i = this._layerConfig;
        i[t] ? r(i[t], e, !0) : (i[t] = e);
        for (var n = 0; n < this._zlevelList.length; n++) {
          var a = this._zlevelList[n];
          if (a === t || a === t + bv) {
            var o = this._layers[a];
            r(o, i[t], !0);
          }
        }
      }
    },
    delLayer: function (t) {
      var e = this._layers,
        i = this._zlevelList,
        n = e[t];
      n && (n.dom.parentNode.removeChild(n.dom), delete e[t], i.splice(u(i, t), 1));
    },
    resize: function (t, e) {
      if (this._domRoot.style) {
        var i = this._domRoot;
        i.style.display = 'none';
        var n = this._opts;
        if (
          (null != t && (n.width = t),
          null != e && (n.height = e),
          (t = this._getSize(0)),
          (e = this._getSize(1)),
          (i.style.display = ''),
          this._width !== t || e !== this._height)
        ) {
          (i.style.width = t + 'px'), (i.style.height = e + 'px');
          for (var r in this._layers) this._layers.hasOwnProperty(r) && this._layers[r].resize(t, e);
          f(this._progressiveLayers, function (i) {
            i.resize(t, e);
          }),
            this.refresh(!0);
        }
        (this._width = t), (this._height = e);
      } else {
        if (null == t || null == e) return;
        (this._width = t), (this._height = e), this.getLayer(wv).resize(t, e);
      }
      return this;
    },
    clearLayer: function (t) {
      var e = this._layers[t];
      e && e.clear();
    },
    dispose: function () {
      (this.root.innerHTML = ''), (this.root = this.storage = this._domRoot = this._layers = null);
    },
    getRenderedCanvas: function (t) {
      if (((t = t || {}), this._singleCanvas && !this._compositeManually)) return this._layers[wv].dom;
      var e = new nv('image', this, t.pixelRatio || this.dpr);
      if ((e.initContext(), e.clear(!1, t.backgroundColor || this._backgroundColor), t.pixelRatio <= this.dpr)) {
        this.refresh();
        var i = e.dom.width,
          n = e.dom.height,
          r = e.ctx;
        this.eachLayer(function (t) {
          t.__builtin__
            ? r.drawImage(t.dom, 0, 0, i, n)
            : t.renderToCanvas && (e.ctx.save(), t.renderToCanvas(e.ctx), e.ctx.restore());
        });
      } else
        for (var a = {}, o = this.storage.getDisplayList(!0), s = 0; s < o.length; s++) {
          var l = o[s];
          this._doPaintEl(l, e, !0, a);
        }
      return e.dom;
    },
    getWidth: function () {
      return this._width;
    },
    getHeight: function () {
      return this._height;
    },
    _getSize: function (t) {
      var e = this._opts,
        i = ['width', 'height'][t],
        n = ['clientWidth', 'clientHeight'][t],
        r = ['paddingLeft', 'paddingTop'][t],
        a = ['paddingRight', 'paddingBottom'][t];
      if (null != e[i] && 'auto' !== e[i]) return parseFloat(e[i]);
      var o = this.root,
        s = document.defaultView.getComputedStyle(o);
      return ((o[n] || Mn(s[i]) || Mn(o.style[i])) - (Mn(s[r]) || 0) - (Mn(s[a]) || 0)) | 0;
    },
    pathToImage: function (t, e) {
      e = e || this.dpr;
      var i = document.createElement('canvas'),
        n = i.getContext('2d'),
        r = t.getBoundingRect(),
        a = t.style,
        o = a.shadowBlur * e,
        s = a.shadowOffsetX * e,
        l = a.shadowOffsetY * e,
        u = a.hasStroke() ? a.lineWidth : 0,
        h = Math.max(u / 2, -s + o),
        c = Math.max(u / 2, s + o),
        d = Math.max(u / 2, -l + o),
        f = Math.max(u / 2, l + o),
        p = r.width + h + c,
        g = r.height + d + f;
      (i.width = p * e), (i.height = g * e), n.scale(e, e), n.clearRect(0, 0, p, g), (n.dpr = e);
      var m = { position: t.position, rotation: t.rotation, scale: t.scale };
      (t.position = [h - r.x, d - r.y]), (t.rotation = 0), (t.scale = [1, 1]), t.updateTransform(), t && t.brush(n);
      var v = Sn,
        y = new v({ style: { x: 0, y: 0, image: i } });
      return (
        null != m.position && (y.position = t.position = m.position),
        null != m.rotation && (y.rotation = t.rotation = m.rotation),
        null != m.scale && (y.scale = t.scale = m.scale),
        y
      );
    },
  };
  var Tv = function (t) {
    (t = t || {}),
      (this.stage = t.stage || {}),
      (this.onframe = t.onframe || function () {}),
      (this._clips = []),
      (this._running = !1),
      this._time,
      this._pausedTime,
      this._pauseStart,
      (this._paused = !1),
      Jg.call(this);
  };
  (Tv.prototype = {
    constructor: Tv,
    addClip: function (t) {
      this._clips.push(t);
    },
    addAnimator: function (t) {
      t.animation = this;
      for (var e = t.getClips(), i = 0; i < e.length; i++) this.addClip(e[i]);
    },
    removeClip: function (t) {
      var e = u(this._clips, t);
      e >= 0 && this._clips.splice(e, 1);
    },
    removeAnimator: function (t) {
      for (var e = t.getClips(), i = 0; i < e.length; i++) this.removeClip(e[i]);
      t.animation = null;
    },
    _update: function () {
      for (
        var t = new Date().getTime() - this._pausedTime,
          e = t - this._time,
          i = this._clips,
          n = i.length,
          r = [],
          a = [],
          o = 0;
        n > o;
        o++
      ) {
        var s = i[o],
          l = s.step(t, e);
        l && (r.push(l), a.push(s));
      }
      for (var o = 0; n > o; ) i[o]._needsRemove ? ((i[o] = i[n - 1]), i.pop(), n--) : o++;
      n = r.length;
      for (var o = 0; n > o; o++) a[o].fire(r[o]);
      (this._time = t), this.onframe(e), this.trigger('frame', e), this.stage.update && this.stage.update();
    },
    _startLoop: function () {
      function t() {
        e._running && (rv(t), !e._paused && e._update());
      }
      var e = this;
      (this._running = !0), rv(t);
    },
    start: function () {
      (this._time = new Date().getTime()), (this._pausedTime = 0), this._startLoop();
    },
    stop: function () {
      this._running = !1;
    },
    pause: function () {
      this._paused || ((this._pauseStart = new Date().getTime()), (this._paused = !0));
    },
    resume: function () {
      this._paused && ((this._pausedTime += new Date().getTime() - this._pauseStart), (this._paused = !1));
    },
    clear: function () {
      this._clips = [];
    },
    isFinished: function () {
      return !this._clips.length;
    },
    animate: function (t, e) {
      e = e || {};
      var i = new Lm(t, e.loop, e.getter, e.setter);
      return this.addAnimator(i), i;
    },
  }),
    c(Tv, Jg);
  var Dv = 300,
    Av = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'],
    kv = ['touchstart', 'touchend', 'touchmove'],
    Pv = { pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1 },
    Lv = p(Av, function (t) {
      var e = t.replace('mouse', 'pointer');
      return Pv[e] ? e : t;
    }),
    Ov = {
      mousemove: function (t) {
        (t = ye(this.dom, t)), this.trigger('mousemove', t);
      },
      mouseout: function (t) {
        t = ye(this.dom, t);
        var e = t.toElement || t.relatedTarget;
        if (e !== this.dom)
          for (; e && 9 !== e.nodeType; ) {
            if (e === this.dom) return;
            e = e.parentNode;
          }
        this.trigger('mouseout', t);
      },
      touchstart: function (t) {
        (t = ye(this.dom, t)),
          (t.zrByTouch = !0),
          (this._lastTouchMoment = new Date()),
          this.handler.processGesture(this, t, 'start'),
          Ov.mousemove.call(this, t),
          Ov.mousedown.call(this, t),
          Pn(this);
      },
      touchmove: function (t) {
        (t = ye(this.dom, t)),
          (t.zrByTouch = !0),
          this.handler.processGesture(this, t, 'change'),
          Ov.mousemove.call(this, t),
          Pn(this);
      },
      touchend: function (t) {
        (t = ye(this.dom, t)),
          (t.zrByTouch = !0),
          this.handler.processGesture(this, t, 'end'),
          Ov.mouseup.call(this, t),
          +new Date() - this._lastTouchMoment < Dv && Ov.click.call(this, t),
          Pn(this);
      },
      pointerdown: function (t) {
        Ov.mousedown.call(this, t);
      },
      pointermove: function (t) {
        Ln(t) || Ov.mousemove.call(this, t);
      },
      pointerup: function (t) {
        Ov.mouseup.call(this, t);
      },
      pointerout: function (t) {
        Ln(t) || Ov.mouseout.call(this, t);
      },
    };
  f(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (t) {
    Ov[t] = function (e) {
      (e = ye(this.dom, e)), this.trigger(t, e);
    };
  });
  var zv = zn.prototype;
  (zv.dispose = function () {
    for (var t = Av.concat(kv), e = 0; e < t.length; e++) {
      var i = t[e];
      xe(this.dom, kn(i), this._handlers[i]);
    }
  }),
    (zv.setCursor = function (t) {
      this.dom.style && (this.dom.style.cursor = t || 'default');
    }),
    c(zn, Jg);
  var Ev = !kg.canvasSupported,
    Rv = { canvas: Cv },
    Bv = {},
    Nv = '4.1.1',
    Fv = function (t, e, i) {
      (i = i || {}), (this.dom = e), (this.id = t);
      var n = this,
        r = new Ym(),
        a = i.renderer;
      if (Ev) {
        if (!Rv.vml) throw new Error("You need to require 'zrender/vml/vml' to support IE8");
        a = 'vml';
      } else (a && Rv[a]) || (a = 'canvas');
      var o = new Rv[a](e, r, i, t);
      (this.storage = r), (this.painter = o);
      var s = kg.node || kg.worker ? null : new zn(o.getViewportRoot());
      (this.handler = new um(r, o, s, o.root)),
        (this.animation = new Tv({ stage: { update: y(this.flush, this) } })),
        this.animation.start(),
        this._needsRefresh;
      var l = r.delFromStorage,
        u = r.addToStorage;
      (r.delFromStorage = function (t) {
        l.call(r, t), t && t.removeSelfFromZr(n);
      }),
        (r.addToStorage = function (t) {
          u.call(r, t), t.addSelfToZr(n);
        });
    };
  Fv.prototype = {
    constructor: Fv,
    getId: function () {
      return this.id;
    },
    add: function (t) {
      this.storage.addRoot(t), (this._needsRefresh = !0);
    },
    remove: function (t) {
      this.storage.delRoot(t), (this._needsRefresh = !0);
    },
    configLayer: function (t, e) {
      this.painter.configLayer && this.painter.configLayer(t, e), (this._needsRefresh = !0);
    },
    setBackgroundColor: function (t) {
      this.painter.setBackgroundColor && this.painter.setBackgroundColor(t), (this._needsRefresh = !0);
    },
    refreshImmediately: function () {
      (this._needsRefresh = this._needsRefreshHover = !1),
        this.painter.refresh(),
        (this._needsRefresh = this._needsRefreshHover = !1);
    },
    refresh: function () {
      this._needsRefresh = !0;
    },
    flush: function () {
      var t;
      this._needsRefresh && ((t = !0), this.refreshImmediately()),
        this._needsRefreshHover && ((t = !0), this.refreshHoverImmediately()),
        t && this.trigger('rendered');
    },
    addHover: function (t, e) {
      if (this.painter.addHover) {
        var i = this.painter.addHover(t, e);
        return this.refreshHover(), i;
      }
    },
    removeHover: function (t) {
      this.painter.removeHover && (this.painter.removeHover(t), this.refreshHover());
    },
    clearHover: function () {
      this.painter.clearHover && (this.painter.clearHover(), this.refreshHover());
    },
    refreshHover: function () {
      this._needsRefreshHover = !0;
    },
    refreshHoverImmediately: function () {
      (this._needsRefreshHover = !1), this.painter.refreshHover && this.painter.refreshHover();
    },
    resize: function (t) {
      (t = t || {}), this.painter.resize(t.width, t.height), this.handler.resize();
    },
    clearAnimation: function () {
      this.animation.clear();
    },
    getWidth: function () {
      return this.painter.getWidth();
    },
    getHeight: function () {
      return this.painter.getHeight();
    },
    pathToImage: function (t, e) {
      return this.painter.pathToImage(t, e);
    },
    setCursorStyle: function (t) {
      this.handler.setCursorStyle(t);
    },
    findHover: function (t, e) {
      return this.handler.findHover(t, e);
    },
    on: function (t, e, i) {
      this.handler.on(t, e, i);
    },
    off: function (t, e) {
      this.handler.off(t, e);
    },
    trigger: function (t, e) {
      this.handler.trigger(t, e);
    },
    clear: function () {
      this.storage.delRoot(), this.painter.clear();
    },
    dispose: function () {
      this.animation.stop(),
        this.clear(),
        this.storage.dispose(),
        this.painter.dispose(),
        this.handler.dispose(),
        (this.animation = this.storage = this.painter = this.handler = null),
        Fn(this.id);
    },
  };
  var Gv = (Object.freeze || Object)({ version: Nv, init: En, dispose: Rn, getInstance: Bn, registerPainter: Nn }),
    Vv = f,
    Hv = S,
    Wv = x,
    Uv = 'series\x00',
    Xv = [
      'fontStyle',
      'fontWeight',
      'fontSize',
      'fontFamily',
      'rich',
      'tag',
      'color',
      'textBorderColor',
      'textBorderWidth',
      'width',
      'height',
      'lineHeight',
      'align',
      'verticalAlign',
      'baseline',
      'shadowColor',
      'shadowBlur',
      'shadowOffsetX',
      'shadowOffsetY',
      'textShadowColor',
      'textShadowBlur',
      'textShadowOffsetX',
      'textShadowOffsetY',
      'backgroundColor',
      'borderColor',
      'borderWidth',
      'borderRadius',
      'padding',
    ],
    Yv = 0,
    Zv = '.',
    jv = '___EC__COMPONENT__CONTAINER___',
    qv = 0,
    Kv = function (t) {
      for (var e = 0; e < t.length; e++) t[e][1] || (t[e][1] = t[e][0]);
      return function (e, i, n) {
        for (var r = {}, a = 0; a < t.length; a++) {
          var o = t[a][1];
          if (!((i && u(i, o) >= 0) || (n && u(n, o) < 0))) {
            var s = e.getShallow(o);
            null != s && (r[t[a][0]] = s);
          }
        }
        return r;
      };
    },
    $v = Kv([
      ['lineWidth', 'width'],
      ['stroke', 'color'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
    ]),
    Jv = {
      getLineStyle: function (t) {
        var e = $v(this, t);
        return (e.lineDash = this.getLineDash(e.lineWidth)), e;
      },
      getLineDash: function (t) {
        null == t && (t = 1);
        var e = this.get('type'),
          i = Math.max(t, 2),
          n = 4 * t;
        return 'solid' === e || null == e ? !1 : 'dashed' === e ? [n, n] : [i, i];
      },
    },
    Qv = Kv([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]),
    ty = {
      getAreaStyle: function (t, e) {
        return Qv(this, t, e);
      },
    },
    ey = Math.pow,
    iy = Math.sqrt,
    ny = 1e-8,
    ry = 1e-4,
    ay = iy(3),
    oy = 1 / 3,
    sy = V(),
    ly = V(),
    uy = V(),
    hy = Math.min,
    cy = Math.max,
    dy = Math.sin,
    fy = Math.cos,
    py = 2 * Math.PI,
    gy = V(),
    my = V(),
    vy = V(),
    yy = [],
    _y = [],
    xy = { M: 1, L: 2, C: 3, Q: 4, A: 5, Z: 6, R: 7 },
    wy = [],
    by = [],
    Sy = [],
    My = [],
    Iy = Math.min,
    Cy = Math.max,
    Ty = Math.cos,
    Dy = Math.sin,
    Ay = Math.sqrt,
    ky = Math.abs,
    Py = 'undefined' != typeof Float32Array,
    Ly = function (t) {
      (this._saveData = !t), this._saveData && (this.data = []), (this._ctx = null);
    };
  (Ly.prototype = {
    constructor: Ly,
    _xi: 0,
    _yi: 0,
    _x0: 0,
    _y0: 0,
    _ux: 0,
    _uy: 0,
    _len: 0,
    _lineDash: null,
    _dashOffset: 0,
    _dashIdx: 0,
    _dashSum: 0,
    setScale: function (t, e, i) {
      (i = i || 0), (this._ux = ky(i / Em / t) || 0), (this._uy = ky(i / Em / e) || 0);
    },
    getContext: function () {
      return this._ctx;
    },
    beginPath: function (t) {
      return (
        (this._ctx = t),
        t && t.beginPath(),
        t && (this.dpr = t.dpr),
        this._saveData && (this._len = 0),
        this._lineDash && ((this._lineDash = null), (this._dashOffset = 0)),
        this
      );
    },
    moveTo: function (t, e) {
      return (
        this.addData(xy.M, t, e),
        this._ctx && this._ctx.moveTo(t, e),
        (this._x0 = t),
        (this._y0 = e),
        (this._xi = t),
        (this._yi = e),
        this
      );
    },
    lineTo: function (t, e) {
      var i = ky(t - this._xi) > this._ux || ky(e - this._yi) > this._uy || this._len < 5;
      return (
        this.addData(xy.L, t, e),
        this._ctx && i && (this._needsDash() ? this._dashedLineTo(t, e) : this._ctx.lineTo(t, e)),
        i && ((this._xi = t), (this._yi = e)),
        this
      );
    },
    bezierCurveTo: function (t, e, i, n, r, a) {
      return (
        this.addData(xy.C, t, e, i, n, r, a),
        this._ctx &&
          (this._needsDash() ? this._dashedBezierTo(t, e, i, n, r, a) : this._ctx.bezierCurveTo(t, e, i, n, r, a)),
        (this._xi = r),
        (this._yi = a),
        this
      );
    },
    quadraticCurveTo: function (t, e, i, n) {
      return (
        this.addData(xy.Q, t, e, i, n),
        this._ctx && (this._needsDash() ? this._dashedQuadraticTo(t, e, i, n) : this._ctx.quadraticCurveTo(t, e, i, n)),
        (this._xi = i),
        (this._yi = n),
        this
      );
    },
    arc: function (t, e, i, n, r, a) {
      return (
        this.addData(xy.A, t, e, i, i, n, r - n, 0, a ? 0 : 1),
        this._ctx && this._ctx.arc(t, e, i, n, r, a),
        (this._xi = Ty(r) * i + t),
        (this._yi = Dy(r) * i + e),
        this
      );
    },
    arcTo: function (t, e, i, n, r) {
      return this._ctx && this._ctx.arcTo(t, e, i, n, r), this;
    },
    rect: function (t, e, i, n) {
      return this._ctx && this._ctx.rect(t, e, i, n), this.addData(xy.R, t, e, i, n), this;
    },
    closePath: function () {
      this.addData(xy.Z);
      var t = this._ctx,
        e = this._x0,
        i = this._y0;
      return t && (this._needsDash() && this._dashedLineTo(e, i), t.closePath()), (this._xi = e), (this._yi = i), this;
    },
    fill: function (t) {
      t && t.fill(), this.toStatic();
    },
    stroke: function (t) {
      t && t.stroke(), this.toStatic();
    },
    setLineDash: function (t) {
      if (t instanceof Array) {
        (this._lineDash = t), (this._dashIdx = 0);
        for (var e = 0, i = 0; i < t.length; i++) e += t[i];
        this._dashSum = e;
      }
      return this;
    },
    setLineDashOffset: function (t) {
      return (this._dashOffset = t), this;
    },
    len: function () {
      return this._len;
    },
    setData: function (t) {
      var e = t.length;
      (this.data && this.data.length === e) || !Py || (this.data = new Float32Array(e));
      for (var i = 0; e > i; i++) this.data[i] = t[i];
      this._len = e;
    },
    appendPath: function (t) {
      t instanceof Array || (t = [t]);
      for (var e = t.length, i = 0, n = this._len, r = 0; e > r; r++) i += t[r].len();
      Py && this.data instanceof Float32Array && (this.data = new Float32Array(n + i));
      for (var r = 0; e > r; r++) for (var a = t[r].data, o = 0; o < a.length; o++) this.data[n++] = a[o];
      this._len = n;
    },
    addData: function (t) {
      if (this._saveData) {
        var e = this.data;
        this._len + arguments.length > e.length && (this._expandData(), (e = this.data));
        for (var i = 0; i < arguments.length; i++) e[this._len++] = arguments[i];
        this._prevCmd = t;
      }
    },
    _expandData: function () {
      if (!(this.data instanceof Array)) {
        for (var t = [], e = 0; e < this._len; e++) t[e] = this.data[e];
        this.data = t;
      }
    },
    _needsDash: function () {
      return this._lineDash;
    },
    _dashedLineTo: function (t, e) {
      var i,
        n,
        r = this._dashSum,
        a = this._dashOffset,
        o = this._lineDash,
        s = this._ctx,
        l = this._xi,
        u = this._yi,
        h = t - l,
        c = e - u,
        d = Ay(h * h + c * c),
        f = l,
        p = u,
        g = o.length;
      for (
        h /= d, c /= d, 0 > a && (a = r + a), a %= r, f -= a * h, p -= a * c;
        (h > 0 && t >= f) || (0 > h && f >= t) || (0 === h && ((c > 0 && e >= p) || (0 > c && p >= e)));

      )
        (n = this._dashIdx),
          (i = o[n]),
          (f += h * i),
          (p += c * i),
          (this._dashIdx = (n + 1) % g),
          (h > 0 && l > f) ||
            (0 > h && f > l) ||
            (c > 0 && u > p) ||
            (0 > c && p > u) ||
            s[n % 2 ? 'moveTo' : 'lineTo'](h >= 0 ? Iy(f, t) : Cy(f, t), c >= 0 ? Iy(p, e) : Cy(p, e));
      (h = f - t), (c = p - e), (this._dashOffset = -Ay(h * h + c * c));
    },
    _dashedBezierTo: function (t, e, i, n, r, a) {
      var o,
        s,
        l,
        u,
        h,
        c = this._dashSum,
        d = this._dashOffset,
        f = this._lineDash,
        p = this._ctx,
        g = this._xi,
        m = this._yi,
        v = hr,
        y = 0,
        _ = this._dashIdx,
        x = f.length,
        w = 0;
      for (0 > d && (d = c + d), d %= c, o = 0; 1 > o; o += 0.1)
        (s = v(g, t, i, r, o + 0.1) - v(g, t, i, r, o)),
          (l = v(m, e, n, a, o + 0.1) - v(m, e, n, a, o)),
          (y += Ay(s * s + l * l));
      for (; x > _ && ((w += f[_]), !(w > d)); _++);
      for (o = (w - d) / y; 1 >= o; )
        (u = v(g, t, i, r, o)),
          (h = v(m, e, n, a, o)),
          _ % 2 ? p.moveTo(u, h) : p.lineTo(u, h),
          (o += f[_] / y),
          (_ = (_ + 1) % x);
      _ % 2 !== 0 && p.lineTo(r, a), (s = r - u), (l = a - h), (this._dashOffset = -Ay(s * s + l * l));
    },
    _dashedQuadraticTo: function (t, e, i, n) {
      var r = i,
        a = n;
      (i = (i + 2 * t) / 3),
        (n = (n + 2 * e) / 3),
        (t = (this._xi + 2 * t) / 3),
        (e = (this._yi + 2 * e) / 3),
        this._dashedBezierTo(t, e, i, n, r, a);
    },
    toStatic: function () {
      var t = this.data;
      t instanceof Array && ((t.length = this._len), Py && (this.data = new Float32Array(t)));
    },
    getBoundingRect: function () {
      (wy[0] = wy[1] = Sy[0] = Sy[1] = Number.MAX_VALUE), (by[0] = by[1] = My[0] = My[1] = -Number.MAX_VALUE);
      for (var t = this.data, e = 0, i = 0, n = 0, r = 0, a = 0; a < t.length; ) {
        var o = t[a++];
        switch ((1 === a && ((e = t[a]), (i = t[a + 1]), (n = e), (r = i)), o)) {
          case xy.M:
            (n = t[a++]), (r = t[a++]), (e = n), (i = r), (Sy[0] = n), (Sy[1] = r), (My[0] = n), (My[1] = r);
            break;
          case xy.L:
            Sr(e, i, t[a], t[a + 1], Sy, My), (e = t[a++]), (i = t[a++]);
            break;
          case xy.C:
            Mr(e, i, t[a++], t[a++], t[a++], t[a++], t[a], t[a + 1], Sy, My), (e = t[a++]), (i = t[a++]);
            break;
          case xy.Q:
            Ir(e, i, t[a++], t[a++], t[a], t[a + 1], Sy, My), (e = t[a++]), (i = t[a++]);
            break;
          case xy.A:
            var s = t[a++],
              l = t[a++],
              u = t[a++],
              h = t[a++],
              c = t[a++],
              d = t[a++] + c;
            a += 1;
            var f = 1 - t[a++];
            1 === a && ((n = Ty(c) * u + s), (r = Dy(c) * h + l)),
              Cr(s, l, u, h, c, d, f, Sy, My),
              (e = Ty(d) * u + s),
              (i = Dy(d) * h + l);
            break;
          case xy.R:
            (n = e = t[a++]), (r = i = t[a++]);
            var p = t[a++],
              g = t[a++];
            Sr(n, r, n + p, r + g, Sy, My);
            break;
          case xy.Z:
            (e = n), (i = r);
        }
        oe(wy, wy, Sy), se(by, by, My);
      }
      return 0 === a && (wy[0] = wy[1] = by[0] = by[1] = 0), new wi(wy[0], wy[1], by[0] - wy[0], by[1] - wy[1]);
    },
    rebuildPath: function (t) {
      for (var e, i, n, r, a, o, s = this.data, l = this._ux, u = this._uy, h = this._len, c = 0; h > c; ) {
        var d = s[c++];
        switch ((1 === c && ((n = s[c]), (r = s[c + 1]), (e = n), (i = r)), d)) {
          case xy.M:
            (e = n = s[c++]), (i = r = s[c++]), t.moveTo(n, r);
            break;
          case xy.L:
            (a = s[c++]),
              (o = s[c++]),
              (ky(a - n) > l || ky(o - r) > u || c === h - 1) && (t.lineTo(a, o), (n = a), (r = o));
            break;
          case xy.C:
            t.bezierCurveTo(s[c++], s[c++], s[c++], s[c++], s[c++], s[c++]), (n = s[c - 2]), (r = s[c - 1]);
            break;
          case xy.Q:
            t.quadraticCurveTo(s[c++], s[c++], s[c++], s[c++]), (n = s[c - 2]), (r = s[c - 1]);
            break;
          case xy.A:
            var f = s[c++],
              p = s[c++],
              g = s[c++],
              m = s[c++],
              v = s[c++],
              y = s[c++],
              _ = s[c++],
              x = s[c++],
              w = g > m ? g : m,
              b = g > m ? 1 : g / m,
              S = g > m ? m / g : 1,
              M = Math.abs(g - m) > 0.001,
              I = v + y;
            M
              ? (t.translate(f, p),
                t.rotate(_),
                t.scale(b, S),
                t.arc(0, 0, w, v, I, 1 - x),
                t.scale(1 / b, 1 / S),
                t.rotate(-_),
                t.translate(-f, -p))
              : t.arc(f, p, w, v, I, 1 - x),
              1 === c && ((e = Ty(v) * g + f), (i = Dy(v) * m + p)),
              (n = Ty(I) * g + f),
              (r = Dy(I) * m + p);
            break;
          case xy.R:
            (e = n = s[c]), (i = r = s[c + 1]), t.rect(s[c++], s[c++], s[c++], s[c++]);
            break;
          case xy.Z:
            t.closePath(), (n = e), (r = i);
        }
      }
    },
  }),
    (Ly.CMD = xy);
  var Oy = 2 * Math.PI,
    zy = 2 * Math.PI,
    Ey = Ly.CMD,
    Ry = 2 * Math.PI,
    By = 1e-4,
    Ny = [-1, -1, -1],
    Fy = [-1, -1],
    Gy = iv.prototype.getCanvasPattern,
    Vy = Math.abs,
    Hy = new Ly(!0);
  (Vr.prototype = {
    constructor: Vr,
    type: 'path',
    __dirtyPath: !0,
    strokeContainThreshold: 5,
    segmentIgnoreThreshold: 0,
    subPixelOptimize: !1,
    brush: function (t, e) {
      var i = this.style,
        n = this.path || Hy,
        r = i.hasStroke(),
        a = i.hasFill(),
        o = i.fill,
        s = i.stroke,
        l = a && !!o.colorStops,
        u = r && !!s.colorStops,
        h = a && !!o.image,
        c = r && !!s.image;
      if ((i.bind(t, this, e), this.setTransform(t), this.__dirty)) {
        var d;
        l && ((d = d || this.getBoundingRect()), (this._fillGradient = i.getGradient(t, o, d))),
          u && ((d = d || this.getBoundingRect()), (this._strokeGradient = i.getGradient(t, s, d)));
      }
      l ? (t.fillStyle = this._fillGradient) : h && (t.fillStyle = Gy.call(o, t)),
        u ? (t.strokeStyle = this._strokeGradient) : c && (t.strokeStyle = Gy.call(s, t));
      var f = i.lineDash,
        p = i.lineDashOffset,
        g = !!t.setLineDash,
        m = this.getGlobalScale();
      if (
        (n.setScale(m[0], m[1], this.segmentIgnoreThreshold),
        this.__dirtyPath || (f && !g && r)
          ? (n.beginPath(t),
            f && !g && (n.setLineDash(f), n.setLineDashOffset(p)),
            this.buildPath(n, this.shape, !1),
            this.path && (this.__dirtyPath = !1))
          : (t.beginPath(), this.path.rebuildPath(t)),
        a)
      )
        if (null != i.fillOpacity) {
          var v = t.globalAlpha;
          (t.globalAlpha = i.fillOpacity * i.opacity), n.fill(t), (t.globalAlpha = v);
        } else n.fill(t);
      if ((f && g && (t.setLineDash(f), (t.lineDashOffset = p)), r))
        if (null != i.strokeOpacity) {
          var v = t.globalAlpha;
          (t.globalAlpha = i.strokeOpacity * i.opacity), n.stroke(t), (t.globalAlpha = v);
        } else n.stroke(t);
      f && g && t.setLineDash([]),
        null != i.text && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect()));
    },
    buildPath: function () {},
    createPathProxy: function () {
      this.path = new Ly();
    },
    getBoundingRect: function () {
      var t = this._rect,
        e = this.style,
        i = !t;
      if (i) {
        var n = this.path;
        n || (n = this.path = new Ly()),
          this.__dirtyPath && (n.beginPath(), this.buildPath(n, this.shape, !1)),
          (t = n.getBoundingRect());
      }
      if (((this._rect = t), e.hasStroke())) {
        var r = this._rectWithStroke || (this._rectWithStroke = t.clone());
        if (this.__dirty || i) {
          r.copy(t);
          var a = e.lineWidth,
            o = e.strokeNoScale ? this.getLineScale() : 1;
          e.hasFill() || (a = Math.max(a, this.strokeContainThreshold || 4)),
            o > 1e-10 && ((r.width += a / o), (r.height += a / o), (r.x -= a / o / 2), (r.y -= a / o / 2));
        }
        return r;
      }
      return t;
    },
    contain: function (t, e) {
      var i = this.transformCoordToLocal(t, e),
        n = this.getBoundingRect(),
        r = this.style;
      if (((t = i[0]), (e = i[1]), n.contain(t, e))) {
        var a = this.path.data;
        if (r.hasStroke()) {
          var o = r.lineWidth,
            s = r.strokeNoScale ? this.getLineScale() : 1;
          if (s > 1e-10 && (r.hasFill() || (o = Math.max(o, this.strokeContainThreshold)), Gr(a, o / s, t, e)))
            return !0;
        }
        if (r.hasFill()) return Fr(a, t, e);
      }
      return !1;
    },
    dirty: function (t) {
      null == t && (t = !0),
        t && ((this.__dirtyPath = t), (this._rect = null)),
        (this.__dirty = this.__dirtyText = !0),
        this.__zr && this.__zr.refresh(),
        this.__clipTarget && this.__clipTarget.dirty();
    },
    animateShape: function (t) {
      return this.animate('shape', t);
    },
    attrKV: function (t, e) {
      'shape' === t
        ? (this.setShape(e), (this.__dirtyPath = !0), (this._rect = null))
        : bn.prototype.attrKV.call(this, t, e);
    },
    setShape: function (t, e) {
      var i = this.shape;
      if (i) {
        if (S(t)) for (var n in t) t.hasOwnProperty(n) && (i[n] = t[n]);
        else i[t] = e;
        this.dirty(!0);
      }
      return this;
    },
    getLineScale: function () {
      var t = this.transform;
      return t && Vy(t[0] - 1) > 1e-10 && Vy(t[3] - 1) > 1e-10 ? Math.sqrt(Vy(t[0] * t[3] - t[2] * t[1])) : 1;
    },
  }),
    (Vr.extend = function (t) {
      var e = function (e) {
        Vr.call(this, e), t.style && this.style.extendFrom(t.style, !1);
        var i = t.shape;
        if (i) {
          this.shape = this.shape || {};
          var n = this.shape;
          for (var r in i) !n.hasOwnProperty(r) && i.hasOwnProperty(r) && (n[r] = i[r]);
        }
        t.init && t.init.call(this, e);
      };
      h(e, Vr);
      for (var i in t) 'style' !== i && 'shape' !== i && (e.prototype[i] = t[i]);
      return e;
    }),
    h(Vr, bn);
  var Wy = Ly.CMD,
    Uy = [[], [], []],
    Xy = Math.sqrt,
    Yy = Math.atan2,
    Zy = function (t, e) {
      var i,
        n,
        r,
        a,
        o,
        s,
        l = t.data,
        u = Wy.M,
        h = Wy.C,
        c = Wy.L,
        d = Wy.R,
        f = Wy.A,
        p = Wy.Q;
      for (r = 0, a = 0; r < l.length; ) {
        switch (((i = l[r++]), (a = r), (n = 0), i)) {
          case u:
            n = 1;
            break;
          case c:
            n = 1;
            break;
          case h:
            n = 3;
            break;
          case p:
            n = 2;
            break;
          case f:
            var g = e[4],
              m = e[5],
              v = Xy(e[0] * e[0] + e[1] * e[1]),
              y = Xy(e[2] * e[2] + e[3] * e[3]),
              _ = Yy(-e[1] / y, e[0] / v);
            (l[r] *= v),
              (l[r++] += g),
              (l[r] *= y),
              (l[r++] += m),
              (l[r++] *= v),
              (l[r++] *= y),
              (l[r++] += _),
              (l[r++] += _),
              (r += 2),
              (a = r);
            break;
          case d:
            (s[0] = l[r++]),
              (s[1] = l[r++]),
              ae(s, s, e),
              (l[a++] = s[0]),
              (l[a++] = s[1]),
              (s[0] += l[r++]),
              (s[1] += l[r++]),
              ae(s, s, e),
              (l[a++] = s[0]),
              (l[a++] = s[1]);
        }
        for (o = 0; n > o; o++) {
          var s = Uy[o];
          (s[0] = l[r++]), (s[1] = l[r++]), ae(s, s, e), (l[a++] = s[0]), (l[a++] = s[1]);
        }
      }
    },
    jy = Math.sqrt,
    qy = Math.sin,
    Ky = Math.cos,
    $y = Math.PI,
    Jy = function (t) {
      return Math.sqrt(t[0] * t[0] + t[1] * t[1]);
    },
    Qy = function (t, e) {
      return (t[0] * e[0] + t[1] * e[1]) / (Jy(t) * Jy(e));
    },
    t_ = function (t, e) {
      return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(Qy(t, e));
    },
    e_ = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,
    i_ = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g,
    n_ = function (t) {
      bn.call(this, t);
    };
  (n_.prototype = {
    constructor: n_,
    type: 'text',
    brush: function (t, e) {
      var i = this.style;
      this.__dirty && rn(i, !0),
        (i.fill = i.stroke = i.shadowBlur = i.shadowColor = i.shadowOffsetX = i.shadowOffsetY = null);
      var n = i.text;
      return (
        null != n && (n += ''),
        wn(n, i)
          ? (this.setTransform(t), on(this, t, n, i, null, e), void this.restoreTransform(t))
          : void (t.__attrCachedBy = qm.NONE)
      );
    },
    getBoundingRect: function () {
      var t = this.style;
      if ((this.__dirty && rn(t, !0), !this._rect)) {
        var e = t.text;
        null != e ? (e += '') : (e = '');
        var i = Gi(t.text + '', t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich);
        if (((i.x += t.x || 0), (i.y += t.y || 0), vn(t.textStroke, t.textStrokeWidth))) {
          var n = t.textStrokeWidth;
          (i.x -= n / 2), (i.y -= n / 2), (i.width += n), (i.height += n);
        }
        this._rect = i;
      }
      return this._rect;
    },
  }),
    h(n_, bn);
  var r_ = Vr.extend({
      type: 'circle',
      shape: { cx: 0, cy: 0, r: 0 },
      buildPath: function (t, e, i) {
        i && t.moveTo(e.cx + e.r, e.cy), t.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI, !0);
      },
    }),
    a_ = [
      ['shadowBlur', 0],
      ['shadowColor', '#000'],
      ['shadowOffsetX', 0],
      ['shadowOffsetY', 0],
    ],
    o_ = function (t) {
      return kg.browser.ie && kg.browser.version >= 11
        ? function () {
            var e,
              i = this.__clipPaths,
              n = this.style;
            if (i)
              for (var r = 0; r < i.length; r++) {
                var a = i[r],
                  o = a && a.shape,
                  s = a && a.type;
                if (
                  o &&
                  (('sector' === s && o.startAngle === o.endAngle) || ('rect' === s && (!o.width || !o.height)))
                ) {
                  for (var l = 0; l < a_.length; l++) (a_[l][2] = n[a_[l][0]]), (n[a_[l][0]] = a_[l][1]);
                  e = !0;
                  break;
                }
              }
            if ((t.apply(this, arguments), e)) for (var l = 0; l < a_.length; l++) n[a_[l][0]] = a_[l][2];
          }
        : t;
    },
    s_ = Vr.extend({
      type: 'sector',
      shape: { cx: 0, cy: 0, r0: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0 },
      brush: o_(Vr.prototype.brush),
      buildPath: function (t, e) {
        var i = e.cx,
          n = e.cy,
          r = Math.max(e.r0 || 0, 0),
          a = Math.max(e.r, 0),
          o = e.startAngle,
          s = e.endAngle,
          l = e.clockwise,
          u = Math.cos(o),
          h = Math.sin(o);
        t.moveTo(u * r + i, h * r + n),
          t.lineTo(u * a + i, h * a + n),
          t.arc(i, n, a, o, s, !l),
          t.lineTo(Math.cos(s) * r + i, Math.sin(s) * r + n),
          0 !== r && t.arc(i, n, r, s, o, l),
          t.closePath();
      },
    }),
    l_ = Vr.extend({
      type: 'ring',
      shape: { cx: 0, cy: 0, r: 0, r0: 0 },
      buildPath: function (t, e) {
        var i = e.cx,
          n = e.cy,
          r = 2 * Math.PI;
        t.moveTo(i + e.r, n), t.arc(i, n, e.r, 0, r, !1), t.moveTo(i + e.r0, n), t.arc(i, n, e.r0, 0, r, !0);
      },
    }),
    u_ = function (t, e) {
      for (var i = t.length, n = [], r = 0, a = 1; i > a; a++) r += ee(t[a - 1], t[a]);
      var o = r / 2;
      o = i > o ? i : o;
      for (var a = 0; o > a; a++) {
        var s,
          l,
          u,
          h = (a / (o - 1)) * (e ? i : i - 1),
          c = Math.floor(h),
          d = h - c,
          f = t[c % i];
        e
          ? ((s = t[(c - 1 + i) % i]), (l = t[(c + 1) % i]), (u = t[(c + 2) % i]))
          : ((s = t[0 === c ? c : c - 1]), (l = t[c > i - 2 ? i - 1 : c + 1]), (u = t[c > i - 3 ? i - 1 : c + 2]));
        var p = d * d,
          g = d * p;
        n.push([jr(s[0], f[0], l[0], u[0], d, p, g), jr(s[1], f[1], l[1], u[1], d, p, g)]);
      }
      return n;
    },
    h_ = function (t, e, i, n) {
      var r,
        a,
        o,
        s,
        l = [],
        u = [],
        h = [],
        c = [];
      if (n) {
        (o = [1 / 0, 1 / 0]), (s = [-1 / 0, -1 / 0]);
        for (var d = 0, f = t.length; f > d; d++) oe(o, o, t[d]), se(s, s, t[d]);
        oe(o, o, n[0]), se(s, s, n[1]);
      }
      for (var d = 0, f = t.length; f > d; d++) {
        var p = t[d];
        if (i) (r = t[d ? d - 1 : f - 1]), (a = t[(d + 1) % f]);
        else {
          if (0 === d || d === f - 1) {
            l.push(W(t[d]));
            continue;
          }
          (r = t[d - 1]), (a = t[d + 1]);
        }
        Z(u, a, r), Q(u, u, e);
        var g = ee(p, r),
          m = ee(p, a),
          v = g + m;
        0 !== v && ((g /= v), (m /= v)), Q(h, u, -g), Q(c, u, m);
        var y = X([], p, h),
          _ = X([], p, c);
        n && (se(y, y, o), oe(y, y, s), se(_, _, o), oe(_, _, s)), l.push(y), l.push(_);
      }
      return i && l.push(l.shift()), l;
    },
    c_ = Vr.extend({
      type: 'polygon',
      shape: { points: null, smooth: !1, smoothConstraint: null },
      buildPath: function (t, e) {
        qr(t, e, !0);
      },
    }),
    d_ = Vr.extend({
      type: 'polyline',
      shape: { points: null, smooth: !1, smoothConstraint: null },
      style: { stroke: '#000', fill: null },
      buildPath: function (t, e) {
        qr(t, e, !1);
      },
    }),
    f_ = Math.round,
    p_ = {},
    g_ = Vr.extend({
      type: 'rect',
      shape: { r: 0, x: 0, y: 0, width: 0, height: 0 },
      buildPath: function (t, e) {
        var i, n, r, a;
        this.subPixelOptimize
          ? ($r(p_, e, this.style), (i = p_.x), (n = p_.y), (r = p_.width), (a = p_.height), (p_.r = e.r), (e = p_))
          : ((i = e.x), (n = e.y), (r = e.width), (a = e.height)),
          e.r ? nn(t, e) : t.rect(i, n, r, a),
          t.closePath();
      },
    }),
    m_ = {},
    v_ = Vr.extend({
      type: 'line',
      shape: { x1: 0, y1: 0, x2: 0, y2: 0, percent: 1 },
      style: { stroke: '#000', fill: null },
      buildPath: function (t, e) {
        var i, n, r, a;
        this.subPixelOptimize
          ? (Kr(m_, e, this.style), (i = m_.x1), (n = m_.y1), (r = m_.x2), (a = m_.y2))
          : ((i = e.x1), (n = e.y1), (r = e.x2), (a = e.y2));
        var o = e.percent;
        0 !== o && (t.moveTo(i, n), 1 > o && ((r = i * (1 - o) + r * o), (a = n * (1 - o) + a * o)), t.lineTo(r, a));
      },
      pointAt: function (t) {
        var e = this.shape;
        return [e.x1 * (1 - t) + e.x2 * t, e.y1 * (1 - t) + e.y2 * t];
      },
    }),
    y_ = [],
    __ = Vr.extend({
      type: 'bezier-curve',
      shape: { x1: 0, y1: 0, x2: 0, y2: 0, cpx1: 0, cpy1: 0, percent: 1 },
      style: { stroke: '#000', fill: null },
      buildPath: function (t, e) {
        var i = e.x1,
          n = e.y1,
          r = e.x2,
          a = e.y2,
          o = e.cpx1,
          s = e.cpy1,
          l = e.cpx2,
          u = e.cpy2,
          h = e.percent;
        0 !== h &&
          (t.moveTo(i, n),
          null == l || null == u
            ? (1 > h && (xr(i, o, r, h, y_), (o = y_[1]), (r = y_[2]), xr(n, s, a, h, y_), (s = y_[1]), (a = y_[2])),
              t.quadraticCurveTo(o, s, r, a))
            : (1 > h &&
                (pr(i, o, l, r, h, y_),
                (o = y_[1]),
                (l = y_[2]),
                (r = y_[3]),
                pr(n, s, u, a, h, y_),
                (s = y_[1]),
                (u = y_[2]),
                (a = y_[3])),
              t.bezierCurveTo(o, s, l, u, r, a)));
      },
      pointAt: function (t) {
        return Qr(this.shape, t, !1);
      },
      tangentAt: function (t) {
        var e = Qr(this.shape, t, !0);
        return te(e, e);
      },
    }),
    x_ = Vr.extend({
      type: 'arc',
      shape: { cx: 0, cy: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0 },
      style: { stroke: '#000', fill: null },
      buildPath: function (t, e) {
        var i = e.cx,
          n = e.cy,
          r = Math.max(e.r, 0),
          a = e.startAngle,
          o = e.endAngle,
          s = e.clockwise,
          l = Math.cos(a),
          u = Math.sin(a);
        t.moveTo(l * r + i, u * r + n), t.arc(i, n, r, a, o, !s);
      },
    }),
    w_ = Vr.extend({
      type: 'compound',
      shape: { paths: null },
      _updatePathDirty: function () {
        for (var t = this.__dirtyPath, e = this.shape.paths, i = 0; i < e.length; i++) t = t || e[i].__dirtyPath;
        (this.__dirtyPath = t), (this.__dirty = this.__dirty || t);
      },
      beforeBrush: function () {
        this._updatePathDirty();
        for (var t = this.shape.paths || [], e = this.getGlobalScale(), i = 0; i < t.length; i++)
          t[i].path || t[i].createPathProxy(), t[i].path.setScale(e[0], e[1], t[i].segmentIgnoreThreshold);
      },
      buildPath: function (t, e) {
        for (var i = e.paths || [], n = 0; n < i.length; n++) i[n].buildPath(t, i[n].shape, !0);
      },
      afterBrush: function () {
        for (var t = this.shape.paths || [], e = 0; e < t.length; e++) t[e].__dirtyPath = !1;
      },
      getBoundingRect: function () {
        return this._updatePathDirty(), Vr.prototype.getBoundingRect.call(this);
      },
    }),
    b_ = function (t) {
      this.colorStops = t || [];
    };
  b_.prototype = {
    constructor: b_,
    addColorStop: function (t, e) {
      this.colorStops.push({ offset: t, color: e });
    },
  };
  var S_ = function (t, e, i, n, r, a) {
    (this.x = null == t ? 0 : t),
      (this.y = null == e ? 0 : e),
      (this.x2 = null == i ? 1 : i),
      (this.y2 = null == n ? 0 : n),
      (this.type = 'linear'),
      (this.global = a || !1),
      b_.call(this, r);
  };
  (S_.prototype = { constructor: S_ }), h(S_, b_);
  var M_ = function (t, e, i, n, r) {
    (this.x = null == t ? 0.5 : t),
      (this.y = null == e ? 0.5 : e),
      (this.r = null == i ? 0.5 : i),
      (this.type = 'radial'),
      (this.global = r || !1),
      b_.call(this, n);
  };
  (M_.prototype = { constructor: M_ }),
    h(M_, b_),
    (ta.prototype.incremental = !0),
    (ta.prototype.clearDisplaybles = function () {
      (this._displayables = []),
        (this._temporaryDisplayables = []),
        (this._cursor = 0),
        this.dirty(),
        (this.notClear = !1);
    }),
    (ta.prototype.addDisplayable = function (t, e) {
      e ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.dirty();
    }),
    (ta.prototype.addDisplayables = function (t, e) {
      e = e || !1;
      for (var i = 0; i < t.length; i++) this.addDisplayable(t[i], e);
    }),
    (ta.prototype.eachPendingDisplayable = function (t) {
      for (var e = this._cursor; e < this._displayables.length; e++) t && t(this._displayables[e]);
      for (var e = 0; e < this._temporaryDisplayables.length; e++) t && t(this._temporaryDisplayables[e]);
    }),
    (ta.prototype.update = function () {
      this.updateTransform();
      for (var t = this._cursor; t < this._displayables.length; t++) {
        var e = this._displayables[t];
        (e.parent = this), e.update(), (e.parent = null);
      }
      for (var t = 0; t < this._temporaryDisplayables.length; t++) {
        var e = this._temporaryDisplayables[t];
        (e.parent = this), e.update(), (e.parent = null);
      }
    }),
    (ta.prototype.brush = function (t) {
      for (var e = this._cursor; e < this._displayables.length; e++) {
        var i = this._displayables[e];
        i.beforeBrush && i.beforeBrush(t),
          i.brush(t, e === this._cursor ? null : this._displayables[e - 1]),
          i.afterBrush && i.afterBrush(t);
      }
      this._cursor = e;
      for (var e = 0; e < this._temporaryDisplayables.length; e++) {
        var i = this._temporaryDisplayables[e];
        i.beforeBrush && i.beforeBrush(t),
          i.brush(t, 0 === e ? null : this._temporaryDisplayables[e - 1]),
          i.afterBrush && i.afterBrush(t);
      }
      (this._temporaryDisplayables = []), (this.notClear = !0);
    });
  var I_ = [];
  (ta.prototype.getBoundingRect = function () {
    if (!this._rect) {
      for (var t = new wi(1 / 0, 1 / 0, -1 / 0, -1 / 0), e = 0; e < this._displayables.length; e++) {
        var i = this._displayables[e],
          n = i.getBoundingRect().clone();
        i.needLocalTransform() && n.applyTransform(i.getLocalTransform(I_)), t.union(n);
      }
      this._rect = t;
    }
    return this._rect;
  }),
    (ta.prototype.contain = function (t, e) {
      var i = this.transformCoordToLocal(t, e),
        n = this.getBoundingRect();
      if (n.contain(i[0], i[1]))
        for (var r = 0; r < this._displayables.length; r++) {
          var a = this._displayables[r];
          if (a.contain(t, e)) return !0;
        }
      return !1;
    }),
    h(ta, bn);
  var C_ = Math.max,
    T_ = Math.min,
    D_ = {},
    A_ = 1,
    k_ = { color: 'textFill', textBorderColor: 'textStroke', textBorderWidth: 'textStrokeWidth' },
    P_ = 'emphasis',
    L_ = 'normal',
    O_ = 1,
    z_ = {},
    E_ = {},
    R_ = Zr,
    B_ = Jr,
    N_ = N(),
    F_ = 0;
  na('circle', r_),
    na('sector', s_),
    na('ring', l_),
    na('polygon', c_),
    na('polyline', d_),
    na('rect', g_),
    na('line', v_),
    na('bezierCurve', __),
    na('arc', x_);
  var G_ = (Object.freeze || Object)({
      Z2_EMPHASIS_LIFT: A_,
      CACHED_LABEL_STYLE_PROPERTIES: k_,
      extendShape: ea,
      extendPath: ia,
      registerShape: na,
      getShapeClass: ra,
      makePath: aa,
      makeImage: oa,
      mergePath: R_,
      resizePath: la,
      subPixelOptimizeLine: ua,
      subPixelOptimizeRect: ha,
      subPixelOptimize: B_,
      setElementHoverStyle: ya,
      setHoverStyle: Ma,
      setAsHighDownDispatcher: Ia,
      isHighDownDispatcher: Ca,
      getHighlightDigit: Ta,
      setLabelStyle: Da,
      modifyLabelStyle: Aa,
      setTextStyle: ka,
      setText: Pa,
      getFont: Na,
      updateProps: Ga,
      initProps: Va,
      getTransform: Ha,
      applyTransform: Wa,
      transformDirection: Ua,
      groupTransition: Xa,
      clipPointsByRect: Ya,
      clipRectByRect: Za,
      createIcon: ja,
      linePolygonIntersect: qa,
      lineLineIntersect: Ka,
      Group: Wm,
      Image: Sn,
      Text: n_,
      Circle: r_,
      Sector: s_,
      Ring: l_,
      Polygon: c_,
      Polyline: d_,
      Rect: g_,
      Line: v_,
      BezierCurve: __,
      Arc: x_,
      IncrementalDisplayable: ta,
      CompoundPath: w_,
      LinearGradient: S_,
      RadialGradient: M_,
      BoundingRect: wi,
    }),
    V_ = ['textStyle', 'color'],
    H_ = {
      getTextColor: function (t) {
        var e = this.ecModel;
        return this.getShallow('color') || (!t && e ? e.get(V_) : null);
      },
      getFont: function () {
        return Na(
          {
            fontStyle: this.getShallow('fontStyle'),
            fontWeight: this.getShallow('fontWeight'),
            fontSize: this.getShallow('fontSize'),
            fontFamily: this.getShallow('fontFamily'),
          },
          this.ecModel,
        );
      },
      getTextRect: function (t) {
        return Gi(
          t,
          this.getFont(),
          this.getShallow('align'),
          this.getShallow('verticalAlign') || this.getShallow('baseline'),
          this.getShallow('padding'),
          this.getShallow('lineHeight'),
          this.getShallow('rich'),
          this.getShallow('truncateText'),
        );
      },
    },
    W_ = Kv([
      ['fill', 'color'],
      ['stroke', 'borderColor'],
      ['lineWidth', 'borderWidth'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
      ['textPosition'],
      ['textAlign'],
    ]),
    U_ = {
      getItemStyle: function (t, e) {
        var i = W_(this, t, e),
          n = this.getBorderLineDash();
        return n && (i.lineDash = n), i;
      },
      getBorderLineDash: function () {
        var t = this.get('borderType');
        return 'solid' === t || null == t ? null : 'dashed' === t ? [5, 5] : [1, 1];
      },
    },
    X_ = c,
    Y_ = qn();
  (Qa.prototype = {
    constructor: Qa,
    init: null,
    mergeOption: function (t) {
      r(this.option, t, !0);
    },
    get: function (t, e) {
      return null == t ? this.option : to(this.option, this.parsePath(t), !e && eo(this, t));
    },
    getShallow: function (t, e) {
      var i = this.option,
        n = null == i ? i : i[t],
        r = !e && eo(this, t);
      return null == n && r && (n = r.getShallow(t)), n;
    },
    getModel: function (t, e) {
      var i,
        n = null == t ? this.option : to(this.option, (t = this.parsePath(t)));
      return (e = e || ((i = eo(this, t)) && i.getModel(t))), new Qa(n, e, this.ecModel);
    },
    isEmpty: function () {
      return null == this.option;
    },
    restoreData: function () {},
    clone: function () {
      var t = this.constructor;
      return new t(n(this.option));
    },
    setReadOnly: function () {},
    parsePath: function (t) {
      return 'string' == typeof t && (t = t.split('.')), t;
    },
    customizeGetParent: function (t) {
      Y_(this).getParent = t;
    },
    isAnimationEnabled: function () {
      if (!kg.node) {
        if (null != this.option.animation) return !!this.option.animation;
        if (this.parentModel) return this.parentModel.isAnimationEnabled();
      }
    },
  }),
    nr(Qa),
    rr(Qa),
    X_(Qa, Jv),
    X_(Qa, ty),
    X_(Qa, H_),
    X_(Qa, U_);
  var Z_ = 0,
    j_ = 1e-4,
    q_ = 9007199254740991,
    K_ =
      /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/,
    $_ = (Object.freeze || Object)({
      linearMap: oo,
      parsePercent: so,
      round: lo,
      asc: uo,
      getPrecision: ho,
      getPrecisionSafe: co,
      getPixelPrecision: fo,
      getPercentWithPrecision: po,
      MAX_SAFE_INTEGER: q_,
      remRadian: go,
      isRadianAroundZero: mo,
      parseDate: vo,
      quantity: yo,
      nice: xo,
      quantile: wo,
      reformIntervals: bo,
      isNumeric: So,
    }),
    J_ = L,
    Q_ = /([&<>"'])/g,
    tx = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;' },
    ex = ['a', 'b', 'c', 'd', 'e', 'f', 'g'],
    ix = function (t, e) {
      return '{' + t + (null == e ? '' : e) + '}';
    },
    nx = Yi,
    rx = (Object.freeze || Object)({
      addCommas: Mo,
      toCamelCase: Io,
      normalizeCssArray: J_,
      encodeHTML: Co,
      formatTpl: To,
      formatTplSimple: Do,
      getTooltipMarker: Ao,
      formatTime: Po,
      capitalFirst: Lo,
      truncateText: nx,
      getTextBoundingRect: Oo,
      getTextRect: zo,
    }),
    ax = f,
    ox = ['left', 'right', 'top', 'bottom', 'width', 'height'],
    sx = [
      ['width', 'left', 'right'],
      ['height', 'top', 'bottom'],
    ],
    lx = Eo,
    ux =
      (_(Eo, 'vertical'),
      _(Eo, 'horizontal'),
      {
        getBoxLayoutParams: function () {
          return {
            left: this.get('left'),
            top: this.get('top'),
            right: this.get('right'),
            bottom: this.get('bottom'),
            width: this.get('width'),
            height: this.get('height'),
          };
        },
      }),
    hx = qn(),
    cx = Qa.extend({
      type: 'component',
      id: '',
      name: '',
      mainType: '',
      subType: '',
      componentIndex: 0,
      defaultOption: null,
      ecModel: null,
      dependentModels: [],
      uid: null,
      layoutMode: null,
      $constructor: function (t, e, i, n) {
        Qa.call(this, t, e, i, n), (this.uid = io('ec_cpt_model'));
      },
      init: function (t, e, i) {
        this.mergeDefaultAndTheme(t, i);
      },
      mergeDefaultAndTheme: function (t, e) {
        var i = this.layoutMode,
          n = i ? No(t) : {},
          a = e.getTheme();
        r(t, a.get(this.mainType)), r(t, this.getDefaultOption()), i && Bo(t, n, i);
      },
      mergeOption: function (t) {
        r(this.option, t, !0);
        var e = this.layoutMode;
        e && Bo(this.option, t, e);
      },
      optionUpdated: function () {},
      getDefaultOption: function () {
        var t = hx(this);
        if (!t.defaultOption) {
          for (var e = [], i = this.constructor; i; ) {
            var n = i.prototype.defaultOption;
            n && e.push(n), (i = i.superClass);
          }
          for (var a = {}, o = e.length - 1; o >= 0; o--) a = r(a, e[o], !0);
          t.defaultOption = a;
        }
        return t.defaultOption;
      },
      getReferringComponents: function (t) {
        return this.ecModel.queryComponents({
          mainType: t,
          index: this.get(t + 'Index', !0),
          id: this.get(t + 'Id', !0),
        });
      },
    });
  sr(cx, { registerWhenExtend: !0 }), no(cx), ro(cx, Go), c(cx, ux);
  var dx = '';
  'undefined' != typeof navigator && (dx = navigator.platform || '');
  var fx = {
      color: [
        '#c23531',
        '#2f4554',
        '#61a0a8',
        '#d48265',
        '#91c7ae',
        '#749f83',
        '#ca8622',
        '#bda29a',
        '#6e7074',
        '#546570',
        '#c4ccd3',
      ],
      gradientColor: ['#f6efa6', '#d88273', '#bf444c'],
      textStyle: {
        fontFamily: dx.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',
        fontSize: 12,
        fontStyle: 'normal',
        fontWeight: 'normal',
      },
      blendMode: null,
      animation: 'auto',
      animationDuration: 1e3,
      animationDurationUpdate: 300,
      animationEasing: 'exponentialOut',
      animationEasingUpdate: 'cubicOut',
      animationThreshold: 2e3,
      progressiveThreshold: 3e3,
      progressive: 400,
      hoverLayerThreshold: 3e3,
      useUTC: !1,
    },
    px = qn(),
    gx = {
      clearColorPalette: function () {
        (px(this).colorIdx = 0), (px(this).colorNameMap = {});
      },
      getColorFromPalette: function (t, e, i) {
        e = e || this;
        var n = px(e),
          r = n.colorIdx || 0,
          a = (n.colorNameMap = n.colorNameMap || {});
        if (a.hasOwnProperty(t)) return a[t];
        var o = Gn(this.get('color', !0)),
          s = this.get('colorLayer', !0),
          l = null != i && s ? Vo(s, i) : o;
        if (((l = l || o), l && l.length)) {
          var u = l[r];
          return t && (a[t] = u), (n.colorIdx = (r + 1) % l.length), u;
        }
      },
    },
    mx = {
      cartesian2d: function (t, e, i, n) {
        var r = t.getReferringComponents('xAxis')[0],
          a = t.getReferringComponents('yAxis')[0];
        if (Cg) {
          if (!r) throw new Error('xAxis "' + D(t.get('xAxisIndex'), t.get('xAxisId'), 0) + '" not found');
          if (!a) throw new Error('yAxis "' + D(t.get('xAxisIndex'), t.get('yAxisId'), 0) + '" not found');
        }
        (e.coordSysDims = ['x', 'y']),
          i.set('x', r),
          i.set('y', a),
          Wo(r) && (n.set('x', r), (e.firstCategoryDimIndex = 0)),
          Wo(a) && (n.set('y', a), (e.firstCategoryDimIndex = 1));
      },
      singleAxis: function (t, e, i, n) {
        var r = t.getReferringComponents('singleAxis')[0];
        if (Cg && !r) throw new Error('singleAxis should be specified.');
        (e.coordSysDims = ['single']), i.set('single', r), Wo(r) && (n.set('single', r), (e.firstCategoryDimIndex = 0));
      },
      polar: function (t, e, i, n) {
        var r = t.getReferringComponents('polar')[0],
          a = r.findAxisModel('radiusAxis'),
          o = r.findAxisModel('angleAxis');
        if (Cg) {
          if (!o) throw new Error('angleAxis option not found');
          if (!a) throw new Error('radiusAxis option not found');
        }
        (e.coordSysDims = ['radius', 'angle']),
          i.set('radius', a),
          i.set('angle', o),
          Wo(a) && (n.set('radius', a), (e.firstCategoryDimIndex = 0)),
          Wo(o) && (n.set('angle', o), (e.firstCategoryDimIndex = 1));
      },
      geo: function (t, e) {
        e.coordSysDims = ['lng', 'lat'];
      },
      parallel: function (t, e, i, n) {
        var r = t.ecModel,
          a = r.getComponent('parallel', t.get('parallelIndex')),
          o = (e.coordSysDims = a.dimensions.slice());
        f(a.parallelAxisIndex, function (t, a) {
          var s = r.getComponent('parallelAxis', t),
            l = o[a];
          i.set(l, s), Wo(s) && null == e.firstCategoryDimIndex && (n.set(l, s), (e.firstCategoryDimIndex = a));
        });
      },
    },
    vx = 'original',
    yx = 'arrayRows',
    _x = 'objectRows',
    xx = 'keyedColumns',
    bx = 'unknown',
    Sx = 'typedArray',
    Mx = 'column',
    Ix = 'row';
  (Uo.seriesDataToSource = function (t) {
    return new Uo({ data: t, sourceFormat: I(t) ? Sx : vx, fromDataset: !1 });
  }),
    rr(Uo);
  var Cx = qn(),
    Tx = '\x00_ec_inner',
    Dx = Qa.extend({
      init: function (t, e, i, n) {
        (i = i || {}), (this.option = null), (this._theme = new Qa(i)), (this._optionManager = n);
      },
      setOption: function (t, e) {
        O(!(Tx in t), 'please use chart.getOption()'), this._optionManager.setOption(t, e), this.resetOption(null);
      },
      resetOption: function (t) {
        var e = !1,
          i = this._optionManager;
        if (!t || 'recreate' === t) {
          var n = i.mountOption('recreate' === t);
          this.option && 'recreate' !== t ? (this.restoreData(), this.mergeOption(n)) : as.call(this, n), (e = !0);
        }
        if ((('timeline' === t || 'media' === t) && this.restoreData(), !t || 'recreate' === t || 'timeline' === t)) {
          var r = i.getTimelineOption(this);
          r && (this.mergeOption(r), (e = !0));
        }
        if (!t || 'recreate' === t || 'media' === t) {
          var a = i.getMediaOption(this, this._api);
          a.length &&
            f(
              a,
              function (t) {
                this.mergeOption(t, (e = !0));
              },
              this,
            );
        }
        return e;
      },
      mergeOption: function (t) {
        function e(e, n) {
          var r = Gn(t[e]),
            s = Un(a.get(e), r);
          Xn(s),
            f(s, function (t) {
              var i = t.option;
              S(i) && ((t.keyInfo.mainType = e), (t.keyInfo.subType = ss(e, i, t.exist)));
            });
          var l = os(a, n);
          (i[e] = []),
            a.set(e, []),
            f(
              s,
              function (t, n) {
                var r = t.exist,
                  s = t.option;
                if ((O(S(s) || r, 'Empty component definition'), s)) {
                  var u = cx.getClass(e, t.keyInfo.subType, !0);
                  if (r && r instanceof u) (r.name = t.keyInfo.name), r.mergeOption(s, this), r.optionUpdated(s, !1);
                  else {
                    var h = o({ dependentModels: l, componentIndex: n }, t.keyInfo);
                    (r = new u(s, this, this, h)), o(r, h), r.init(s, this, this, h), r.optionUpdated(null, !0);
                  }
                } else r.mergeOption({}, this), r.optionUpdated({}, !1);
                (a.get(e)[n] = r), (i[e][n] = r.option);
              },
              this,
            ),
            'series' === e && ls(this, a.get('series'));
        }
        var i = this.option,
          a = this._componentsMap,
          s = [];
        Zo(this),
          f(t, function (t, e) {
            null != t && (cx.hasClass(e) ? e && s.push(e) : (i[e] = null == i[e] ? n(t) : r(i[e], t, !0)));
          }),
          cx.topologicalTravel(s, cx.getAllClassMainTypes(), e, this),
          (this._seriesIndicesMap = N((this._seriesIndices = this._seriesIndices || [])));
      },
      getOption: function () {
        var t = n(this.option);
        return (
          f(t, function (e, i) {
            if (cx.hasClass(i)) {
              for (var e = Gn(e), n = e.length - 1; n >= 0; n--) Zn(e[n]) && e.splice(n, 1);
              t[i] = e;
            }
          }),
          delete t[Tx],
          t
        );
      },
      getTheme: function () {
        return this._theme;
      },
      getComponent: function (t, e) {
        var i = this._componentsMap.get(t);
        return i ? i[e || 0] : void 0;
      },
      queryComponents: function (t) {
        var e = t.mainType;
        if (!e) return [];
        var i = t.index,
          n = t.id,
          r = t.name,
          a = this._componentsMap.get(e);
        if (!a || !a.length) return [];
        var o;
        if (null != i)
          x(i) || (i = [i]),
            (o = m(
              p(i, function (t) {
                return a[t];
              }),
              function (t) {
                return !!t;
              },
            ));
        else if (null != n) {
          var s = x(n);
          o = m(a, function (t) {
            return (s && u(n, t.id) >= 0) || (!s && t.id === n);
          });
        } else if (null != r) {
          var l = x(r);
          o = m(a, function (t) {
            return (l && u(r, t.name) >= 0) || (!l && t.name === r);
          });
        } else o = a.slice();
        return us(o, t);
      },
      findComponents: function (t) {
        function e(t) {
          var e = r + 'Index',
            i = r + 'Id',
            n = r + 'Name';
          return !t || (null == t[e] && null == t[i] && null == t[n])
            ? null
            : { mainType: r, index: t[e], id: t[i], name: t[n] };
        }
        function i(e) {
          return t.filter ? m(e, t.filter) : e;
        }
        var n = t.query,
          r = t.mainType,
          a = e(n),
          o = a ? this.queryComponents(a) : this._componentsMap.get(r);
        return i(us(o, t));
      },
      eachComponent: function (t, e, i) {
        var n = this._componentsMap;
        if ('function' == typeof t)
          (i = e),
            (e = t),
            n.each(function (t, n) {
              f(t, function (t, r) {
                e.call(i, n, t, r);
              });
            });
        else if (b(t)) f(n.get(t), e, i);
        else if (S(t)) {
          var r = this.findComponents(t);
          f(r, e, i);
        }
      },
      getSeriesByName: function (t) {
        var e = this._componentsMap.get('series');
        return m(e, function (e) {
          return e.name === t;
        });
      },
      getSeriesByIndex: function (t) {
        return this._componentsMap.get('series')[t];
      },
      getSeriesByType: function (t) {
        var e = this._componentsMap.get('series');
        return m(e, function (e) {
          return e.subType === t;
        });
      },
      getSeries: function () {
        return this._componentsMap.get('series').slice();
      },
      getSeriesCount: function () {
        return this._componentsMap.get('series').length;
      },
      eachSeries: function (t, e) {
        hs(this),
          f(
            this._seriesIndices,
            function (i) {
              var n = this._componentsMap.get('series')[i];
              t.call(e, n, i);
            },
            this,
          );
      },
      eachRawSeries: function (t, e) {
        f(this._componentsMap.get('series'), t, e);
      },
      eachSeriesByType: function (t, e, i) {
        hs(this),
          f(
            this._seriesIndices,
            function (n) {
              var r = this._componentsMap.get('series')[n];
              r.subType === t && e.call(i, r, n);
            },
            this,
          );
      },
      eachRawSeriesByType: function (t, e, i) {
        return f(this.getSeriesByType(t), e, i);
      },
      isSeriesFiltered: function (t) {
        return hs(this), null == this._seriesIndicesMap.get(t.componentIndex);
      },
      getCurrentSeriesIndices: function () {
        return (this._seriesIndices || []).slice();
      },
      filterSeries: function (t, e) {
        hs(this);
        var i = m(this._componentsMap.get('series'), t, e);
        ls(this, i);
      },
      restoreData: function (t) {
        var e = this._componentsMap;
        ls(this, e.get('series'));
        var i = [];
        e.each(function (t, e) {
          i.push(e);
        }),
          cx.topologicalTravel(i, cx.getAllClassMainTypes(), function (i) {
            f(e.get(i), function (e) {
              ('series' !== i || !ns(e, t)) && e.restoreData();
            });
          });
      },
    });
  c(Dx, gx);
  var Ax = [
      'getDom',
      'getZr',
      'getWidth',
      'getHeight',
      'getDevicePixelRatio',
      'dispatchAction',
      'isDisposed',
      'on',
      'off',
      'getDataURL',
      'getConnectedDataURL',
      'getModel',
      'getOption',
      'getViewOfComponentModel',
      'getViewOfSeriesModel',
    ],
    kx = {};
  (ds.prototype = {
    constructor: ds,
    create: function (t, e) {
      var i = [];
      f(kx, function (n) {
        var r = n.create(t, e);
        i = i.concat(r || []);
      }),
        (this._coordinateSystems = i);
    },
    update: function (t, e) {
      f(this._coordinateSystems, function (i) {
        i.update && i.update(t, e);
      });
    },
    getCoordinateSystems: function () {
      return this._coordinateSystems.slice();
    },
  }),
    (ds.register = function (t, e) {
      kx[t] = e;
    }),
    (ds.get = function (t) {
      return kx[t];
    });
  var Px = f,
    Lx = n,
    Ox = p,
    zx = r,
    Ex = /^(min|max)?(.+)$/;
  fs.prototype = {
    constructor: fs,
    setOption: function (t, e) {
      t &&
        f(Gn(t.series), function (t) {
          t && t.data && I(t.data) && E(t.data);
        }),
        (t = Lx(t));
      var i = this._optionBackup,
        n = ps.call(this, t, e, !i);
      (this._newBaseOption = n.baseOption),
        i
          ? (ys(i.baseOption, n.baseOption),
            n.timelineOptions.length && (i.timelineOptions = n.timelineOptions),
            n.mediaList.length && (i.mediaList = n.mediaList),
            n.mediaDefault && (i.mediaDefault = n.mediaDefault))
          : (this._optionBackup = n);
    },
    mountOption: function (t) {
      var e = this._optionBackup;
      return (
        (this._timelineOptions = Ox(e.timelineOptions, Lx)),
        (this._mediaList = Ox(e.mediaList, Lx)),
        (this._mediaDefault = Lx(e.mediaDefault)),
        (this._currentMediaIndices = []),
        Lx(t ? e.baseOption : this._newBaseOption)
      );
    },
    getTimelineOption: function (t) {
      var e,
        i = this._timelineOptions;
      if (i.length) {
        var n = t.getComponent('timeline');
        n && (e = Lx(i[n.getCurrentIndex()], !0));
      }
      return e;
    },
    getMediaOption: function () {
      var t = this._api.getWidth(),
        e = this._api.getHeight(),
        i = this._mediaList,
        n = this._mediaDefault,
        r = [],
        a = [];
      if (!i.length && !n) return a;
      for (var o = 0, s = i.length; s > o; o++) gs(i[o].query, t, e) && r.push(o);
      return (
        !r.length && n && (r = [-1]),
        r.length &&
          !vs(r, this._currentMediaIndices) &&
          (a = Ox(r, function (t) {
            return Lx(-1 === t ? n.option : i[t].option);
          })),
        (this._currentMediaIndices = r),
        a
      );
    },
  };
  var Rx = f,
    Bx = S,
    Nx = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'],
    Fx = function (t, e) {
      Rx(Is(t.series), function (t) {
        Bx(t) && Ms(t);
      });
      var i = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];
      e && i.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis'),
        Rx(i, function (e) {
          Rx(Is(t[e]), function (t) {
            t && (bs(t, 'axisLabel'), bs(t.axisPointer, 'label'));
          });
        }),
        Rx(Is(t.parallel), function (t) {
          var e = t && t.parallelAxisDefault;
          bs(e, 'axisLabel'), bs(e && e.axisPointer, 'label');
        }),
        Rx(Is(t.calendar), function (t) {
          xs(t, 'itemStyle'), bs(t, 'dayLabel'), bs(t, 'monthLabel'), bs(t, 'yearLabel');
        }),
        Rx(Is(t.radar), function (t) {
          bs(t, 'name');
        }),
        Rx(Is(t.geo), function (t) {
          Bx(t) &&
            (Ss(t),
            Rx(Is(t.regions), function (t) {
              Ss(t);
            }));
        }),
        Rx(Is(t.timeline), function (t) {
          Ss(t), xs(t, 'label'), xs(t, 'itemStyle'), xs(t, 'controlStyle', !0);
          var e = t.data;
          x(e) &&
            f(e, function (t) {
              S(t) && (xs(t, 'label'), xs(t, 'itemStyle'));
            });
        }),
        Rx(Is(t.toolbox), function (t) {
          xs(t, 'iconStyle'),
            Rx(t.feature, function (t) {
              xs(t, 'iconStyle');
            });
        }),
        bs(Cs(t.axisPointer), 'label'),
        bs(Cs(t.tooltip).axisPointer, 'label');
    },
    Gx = [
      ['x', 'left'],
      ['y', 'top'],
      ['x2', 'right'],
      ['y2', 'bottom'],
    ],
    Vx = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'],
    Hx = function (t, e) {
      Fx(t, e),
        (t.series = Gn(t.series)),
        f(t.series, function (t) {
          if (S(t)) {
            var e = t.type;
            if ('line' === e) null != t.clipOverflow && (t.clip = t.clipOverflow);
            else if ('pie' === e || 'gauge' === e) null != t.clockWise && (t.clockwise = t.clockWise);
            else if ('gauge' === e) {
              var i = Ts(t, 'pointer.color');
              null != i && Ds(t, 'itemStyle.color', i);
            }
            As(t);
          }
        }),
        t.dataRange && (t.visualMap = t.dataRange),
        f(Vx, function (e) {
          var i = t[e];
          i &&
            (x(i) || (i = [i]),
            f(i, function (t) {
              As(t);
            }));
        });
    },
    Wx = function (t) {
      var e = N();
      t.eachSeries(function (t) {
        var i = t.get('stack');
        if (i) {
          var n = e.get(i) || e.set(i, []),
            r = t.getData(),
            a = {
              stackResultDimension: r.getCalculationInfo('stackResultDimension'),
              stackedOverDimension: r.getCalculationInfo('stackedOverDimension'),
              stackedDimension: r.getCalculationInfo('stackedDimension'),
              stackedByDimension: r.getCalculationInfo('stackedByDimension'),
              isStackedByIndex: r.getCalculationInfo('isStackedByIndex'),
              data: r,
              seriesModel: t,
            };
          if (!a.stackedDimension || (!a.isStackedByIndex && !a.stackedByDimension)) return;
          n.length && r.setCalculationInfo('stackedOnSeries', n[n.length - 1].seriesModel), n.push(a);
        }
      }),
        e.each(ks);
    },
    Ux = Ps.prototype;
  (Ux.pure = !1),
    (Ux.persistent = !0),
    (Ux.getSource = function () {
      return this._source;
    });
  var Xx = {
      arrayRows_column: {
        pure: !0,
        count: function () {
          return Math.max(0, this._data.length - this._source.startIndex);
        },
        getItem: function (t) {
          return this._data[t + this._source.startIndex];
        },
        appendData: zs,
      },
      arrayRows_row: {
        pure: !0,
        count: function () {
          var t = this._data[0];
          return t ? Math.max(0, t.length - this._source.startIndex) : 0;
        },
        getItem: function (t) {
          t += this._source.startIndex;
          for (var e = [], i = this._data, n = 0; n < i.length; n++) {
            var r = i[n];
            e.push(r ? r[t] : null);
          }
          return e;
        },
        appendData: function () {
          throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
        },
      },
      objectRows: { pure: !0, count: Ls, getItem: Os, appendData: zs },
      keyedColumns: {
        pure: !0,
        count: function () {
          var t = this._source.dimensionsDefine[0].name,
            e = this._data[t];
          return e ? e.length : 0;
        },
        getItem: function (t) {
          for (var e = [], i = this._source.dimensionsDefine, n = 0; n < i.length; n++) {
            var r = this._data[i[n].name];
            e.push(r ? r[t] : null);
          }
          return e;
        },
        appendData: function (t) {
          var e = this._data;
          f(t, function (t, i) {
            for (var n = e[i] || (e[i] = []), r = 0; r < (t || []).length; r++) n.push(t[r]);
          });
        },
      },
      original: { count: Ls, getItem: Os, appendData: zs },
      typedArray: {
        persistent: !1,
        pure: !0,
        count: function () {
          return this._data ? this._data.length / this._dimSize : 0;
        },
        getItem: function (t, e) {
          (t -= this._offset), (e = e || []);
          for (var i = this._dimSize * t, n = 0; n < this._dimSize; n++) e[n] = this._data[i + n];
          return e;
        },
        appendData: function (t) {
          Cg && O(I(t), 'Added data must be TypedArray if data in initialization is TypedArray'), (this._data = t);
        },
        clean: function () {
          (this._offset += this.count()), (this._data = null);
        },
      },
    },
    Yx = {
      arrayRows: Es,
      objectRows: function (t, e, i, n) {
        return null != i ? t[n] : t;
      },
      keyedColumns: Es,
      original: function (t, e, i) {
        var n = Hn(t);
        return null != i && n instanceof Array ? n[i] : n;
      },
      typedArray: Es,
    },
    Zx = {
      arrayRows: Rs,
      objectRows: function (t, e) {
        return Bs(t[e], this._dimensionInfos[e]);
      },
      keyedColumns: Rs,
      original: function (t, e, i, n) {
        var r = t && (null == t.value ? t : t.value);
        return (
          !this._rawData.pure && Wn(t) && (this.hasItemOption = !0),
          Bs(r instanceof Array ? r[n] : r, this._dimensionInfos[e])
        );
      },
      typedArray: function (t, e, i, n) {
        return t[n];
      },
    },
    jx = /\{@(.+?)\}/g,
    qx = {
      getDataParams: function (t, e) {
        var i = this.getData(e),
          n = this.getRawValue(t, e),
          r = i.getRawIndex(t),
          a = i.getName(t),
          o = i.getRawDataItem(t),
          s = i.getItemVisual(t, 'color'),
          l = i.getItemVisual(t, 'borderColor'),
          u = this.ecModel.getComponent('tooltip'),
          h = u && u.get('renderMode'),
          c = tr(h),
          d = this.mainType,
          f = 'series' === d,
          p = i.userOutput;
        return {
          componentType: d,
          componentSubType: this.subType,
          componentIndex: this.componentIndex,
          seriesType: f ? this.subType : null,
          seriesIndex: this.seriesIndex,
          seriesId: f ? this.id : null,
          seriesName: f ? this.name : null,
          name: a,
          dataIndex: r,
          data: o,
          dataType: e,
          value: n,
          color: s,
          borderColor: l,
          dimensionNames: p ? p.dimensionNames : null,
          encode: p ? p.encode : null,
          marker: Ao({ color: s, renderMode: c }),
          $vars: ['seriesName', 'name', 'value'],
        };
      },
      getFormattedLabel: function (t, e, i, n, r) {
        e = e || 'normal';
        var a = this.getData(i),
          o = a.getItemModel(t),
          s = this.getDataParams(t, i);
        null != n && s.value instanceof Array && (s.value = s.value[n]);
        var l = o.get('normal' === e ? [r || 'label', 'formatter'] : [e, r || 'label', 'formatter']);
        if ('function' == typeof l) return (s.status = e), (s.dimensionIndex = n), l(s);
        if ('string' == typeof l) {
          var u = To(l, s);
          return u.replace(jx, function (e, i) {
            var n = i.length;
            return '[' === i.charAt(0) && ']' === i.charAt(n - 1) && (i = +i.slice(1, n - 1)), Ns(a, t, i);
          });
        }
      },
      getRawValue: function (t, e) {
        return Ns(this.getData(e), t);
      },
      formatTooltip: function () {},
    },
    Kx = Vs.prototype;
  Kx.perform = function (t) {
    function e(t) {
      return !(t >= 1) && (t = 1), t;
    }
    var i = this._upstream,
      n = t && t.skip;
    if (this._dirty && i) {
      var r = this.context;
      r.data = r.outputData = i.context.outputData;
    }
    this.__pipeline && (this.__pipeline.currentTask = this);
    var a;
    this._plan && !n && (a = this._plan(this.context));
    var o = e(this._modBy),
      s = this._modDataCount || 0,
      l = e(t && t.modBy),
      u = (t && t.modDataCount) || 0;
    (o !== l || s !== u) && (a = 'reset');
    var h;
    (this._dirty || 'reset' === a) && ((this._dirty = !1), (h = Ws(this, n))),
      (this._modBy = l),
      (this._modDataCount = u);
    var c = t && t.step;
    if (
      (i
        ? (Cg && O(null != i._outputDueEnd), (this._dueEnd = i._outputDueEnd))
        : (Cg && O(!this._progress || this._count), (this._dueEnd = this._count ? this._count(this.context) : 1 / 0)),
      this._progress)
    ) {
      var d = this._dueIndex,
        f = Math.min(null != c ? this._dueIndex + c : 1 / 0, this._dueEnd);
      if (!n && (h || f > d)) {
        var p = this._progress;
        if (x(p)) for (var g = 0; g < p.length; g++) Hs(this, p[g], d, f, l, u);
        else Hs(this, p, d, f, l, u);
      }
      this._dueIndex = f;
      var m = null != this._settedOutputEnd ? this._settedOutputEnd : f;
      Cg && O(m >= this._outputDueEnd), (this._outputDueEnd = m);
    } else this._dueIndex = this._outputDueEnd = null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
    return this.unfinished();
  };
  var $x = (function () {
    function t() {
      return i > n ? n++ : null;
    }
    function e() {
      var t = (n % o) * r + Math.ceil(n / o),
        e = n >= i ? null : a > t ? t : n;
      return n++, e;
    }
    var i,
      n,
      r,
      a,
      o,
      s = {
        reset: function (l, u, h, c) {
          (n = l), (i = u), (r = h), (a = c), (o = Math.ceil(a / r)), (s.next = r > 1 && a > 0 ? e : t);
        },
      };
    return s;
  })();
  (Kx.dirty = function () {
    (this._dirty = !0), this._onDirty && this._onDirty(this.context);
  }),
    (Kx.unfinished = function () {
      return this._progress && this._dueIndex < this._dueEnd;
    }),
    (Kx.pipe = function (t) {
      Cg && O(t && !t._disposed && t !== this),
        (this._downstream !== t || this._dirty) && ((this._downstream = t), (t._upstream = this), t.dirty());
    }),
    (Kx.dispose = function () {
      this._disposed ||
        (this._upstream && (this._upstream._downstream = null),
        this._downstream && (this._downstream._upstream = null),
        (this._dirty = !1),
        (this._disposed = !0));
    }),
    (Kx.getUpstream = function () {
      return this._upstream;
    }),
    (Kx.getDownstream = function () {
      return this._downstream;
    }),
    (Kx.setOutputEnd = function (t) {
      this._outputDueEnd = this._settedOutputEnd = t;
    });
  var Jx = qn(),
    Qx = cx.extend({
      type: 'series.__base__',
      seriesIndex: 0,
      coordinateSystem: null,
      defaultOption: null,
      legendDataProvider: null,
      visualColorAccessPath: 'itemStyle.color',
      visualBorderColorAccessPath: 'itemStyle.borderColor',
      layoutMode: null,
      init: function (t, e, i) {
        (this.seriesIndex = this.componentIndex),
          (this.dataTask = Gs({ count: Ys, reset: Zs })),
          (this.dataTask.context = { model: this }),
          this.mergeDefaultAndTheme(t, i),
          jo(this);
        var n = this.getInitialData(t, i);
        qs(n, this),
          (this.dataTask.context.data = n),
          Cg && O(n, 'getInitialData returned invalid data.'),
          (Jx(this).dataBeforeProcessed = n),
          Us(this);
      },
      mergeDefaultAndTheme: function (t, e) {
        var i = this.layoutMode,
          n = i ? No(t) : {},
          a = this.subType;
        cx.hasClass(a) && (a += 'Series'),
          r(t, e.getTheme().get(this.subType)),
          r(t, this.getDefaultOption()),
          Vn(t, 'label', ['show']),
          this.fillDataTextStyle(t.data),
          i && Bo(t, n, i);
      },
      mergeOption: function (t, e) {
        (t = r(this.option, t, !0)), this.fillDataTextStyle(t.data);
        var i = this.layoutMode;
        i && Bo(this.option, t, i), jo(this);
        var n = this.getInitialData(t, e);
        qs(n, this),
          this.dataTask.dirty(),
          (this.dataTask.context.data = n),
          (Jx(this).dataBeforeProcessed = n),
          Us(this);
      },
      fillDataTextStyle: function (t) {
        if (t && !I(t)) for (var e = ['show'], i = 0; i < t.length; i++) t[i] && t[i].label && Vn(t[i], 'label', e);
      },
      getInitialData: function () {},
      appendData: function (t) {
        var e = this.getRawData();
        e.appendData(t.data);
      },
      getData: function (t) {
        var e = $s(this);
        if (e) {
          var i = e.context.data;
          return null == t ? i : i.getLinkedData(t);
        }
        return Jx(this).data;
      },
      setData: function (t) {
        var e = $s(this);
        if (e) {
          var i = e.context;
          i.data !== t && e.modifyOutputEnd && e.setOutputEnd(t.count()),
            (i.outputData = t),
            e !== this.dataTask && (i.data = t);
        }
        Jx(this).data = t;
      },
      getSource: function () {
        return Yo(this);
      },
      getRawData: function () {
        return Jx(this).dataBeforeProcessed;
      },
      getBaseAxis: function () {
        var t = this.coordinateSystem;
        return t && t.getBaseAxis && t.getBaseAxis();
      },
      formatTooltip: function (t, e, i, n) {
        function r(i) {
          function r(t, i) {
            var r = c.getDimensionInfo(i);
            if (r && r.otherDims.tooltip !== !1) {
              var d = r.type,
                f = 'sub' + o.seriesIndex + 'at' + h,
                p = Ao({ color: y, type: 'subItem', renderMode: n, markerId: f }),
                g = 'string' == typeof p ? p : p.content,
                m =
                  (a ? g + Co(r.displayName || '-') + ': ' : '') +
                  Co('ordinal' === d ? t + '' : 'time' === d ? (e ? '' : Po('yyyy/MM/dd hh:mm:ss', t)) : Mo(t));
              m && s.push(m), l && ((u[f] = y), ++h);
            }
          }
          var a = g(
              i,
              function (t, e, i) {
                var n = c.getDimensionInfo(i);
                return (t |= n && n.tooltip !== !1 && null != n.displayName);
              },
              0,
            ),
            s = [];
          d.length
            ? f(d, function (e) {
                r(Ns(c, t, e), e);
              })
            : f(i, r);
          var p = a ? (l ? '\n' : '<br/>') : '',
            m = p + s.join(p || ', ');
          return { renderMode: n, content: m, style: u };
        }
        function a(t) {
          return { renderMode: n, content: Co(Mo(t)), style: u };
        }
        var o = this;
        n = n || 'html';
        var s = 'html' === n ? '<br/>' : '\n',
          l = 'richText' === n,
          u = {},
          h = 0,
          c = this.getData(),
          d = c.mapDimension('defaultedTooltip', !0),
          p = d.length,
          m = this.getRawValue(t),
          v = x(m),
          y = c.getItemVisual(t, 'color');
        S(y) && y.colorStops && (y = (y.colorStops[0] || {}).color), (y = y || 'transparent');
        var _ = p > 1 || (v && !p) ? r(m) : a(p ? Ns(c, t, d[0]) : v ? m[0] : m),
          w = _.content,
          b = o.seriesIndex + 'at' + h,
          M = Ao({ color: y, type: 'item', renderMode: n, markerId: b });
        (u[b] = y), ++h;
        var I = c.getName(t),
          C = this.name;
        Yn(this) || (C = ''), (C = C ? Co(C) + (e ? ': ' : s) : '');
        var T = 'string' == typeof M ? M : M.content,
          D = e ? T + C + w : C + T + (I ? Co(I) + ': ' + w : w);
        return { html: D, markers: u };
      },
      isAnimationEnabled: function () {
        if (kg.node) return !1;
        var t = this.getShallow('animation');
        return t && this.getData().count() > this.getShallow('animationThreshold') && (t = !1), t;
      },
      restoreData: function () {
        this.dataTask.dirty();
      },
      getColorFromPalette: function (t, e, i) {
        var n = this.ecModel,
          r = gx.getColorFromPalette.call(this, t, e, i);
        return r || (r = n.getColorFromPalette(t, e, i)), r;
      },
      coordDimToDataDim: function (t) {
        return this.getRawData().mapDimension(t, !0);
      },
      getProgressive: function () {
        return this.get('progressive');
      },
      getProgressiveThreshold: function () {
        return this.get('progressiveThreshold');
      },
      getAxisTooltipData: null,
      getTooltipPosition: null,
      pipeTask: null,
      preventIncremental: null,
      pipelineContext: null,
    });
  c(Qx, qx), c(Qx, gx);
  var tw = function () {
    (this.group = new Wm()), (this.uid = io('viewComponent'));
  };
  tw.prototype = {
    constructor: tw,
    init: function () {},
    render: function () {},
    dispose: function () {},
    filterForExposedEvent: null,
  };
  var ew = tw.prototype;
  (ew.updateView = ew.updateLayout = ew.updateVisual = function () {}), nr(tw), sr(tw, { registerWhenExtend: !0 });
  var iw = function () {
      var t = qn();
      return function (e) {
        var i = t(e),
          n = e.pipelineContext,
          r = i.large,
          a = i.progressiveRender,
          o = (i.large = n.large),
          s = (i.progressiveRender = n.progressiveRender);
        return !!(r ^ o || a ^ s) && 'reset';
      };
    },
    nw = qn(),
    rw = iw();
  Js.prototype = {
    type: 'chart',
    init: function () {},
    render: function () {},
    highlight: function (t, e, i, n) {
      tl(t.getData(), n, 'emphasis');
    },
    downplay: function (t, e, i, n) {
      tl(t.getData(), n, 'normal');
    },
    remove: function () {
      this.group.removeAll();
    },
    dispose: function () {},
    incrementalPrepareRender: null,
    incrementalRender: null,
    updateTransform: null,
    filterForExposedEvent: null,
  };
  var aw = Js.prototype;
  (aw.updateView =
    aw.updateLayout =
    aw.updateVisual =
      function (t, e, i, n) {
        this.render(t, e, i, n);
      }),
    nr(Js, ['dispose']),
    sr(Js, { registerWhenExtend: !0 }),
    (Js.markUpdateMethod = function (t, e) {
      nw(t).updateMethod = e;
    });
  var ow = {
      incrementalPrepareRender: {
        progress: function (t, e) {
          e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload);
        },
      },
      render: {
        forceFirstProgress: !0,
        progress: function (t, e) {
          e.view.render(e.model, e.ecModel, e.api, e.payload);
        },
      },
    },
    sw = '\x00__throttleOriginMethod',
    lw = '\x00__throttleRate',
    uw = '\x00__throttleType',
    hw = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function (t, e) {
        var i = t.getData(),
          n = (t.visualColorAccessPath || 'itemStyle.color').split('.'),
          r = t.get(n) || t.getColorFromPalette(t.name, null, e.getSeriesCount());
        i.setVisual('color', r);
        var a = (t.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.'),
          o = t.get(a);
        if ((i.setVisual('borderColor', o), !e.isSeriesFiltered(t))) {
          'function' != typeof r ||
            r instanceof b_ ||
            i.each(function (e) {
              i.setItemVisual(e, 'color', r(t.getDataParams(e)));
            });
          var s = function (t, e) {
            var i = t.getItemModel(e),
              r = i.get(n, !0),
              o = i.get(a, !0);
            null != r && t.setItemVisual(e, 'color', r), null != o && t.setItemVisual(e, 'borderColor', o);
          };
          return { dataEach: i.hasItemOption ? s : null };
        }
      },
    },
    cw = {
      legend: { selector: { all: '全选', inverse: '反选' } },
      toolbox: {
        brush: {
          title: {
            rect: '矩形选择',
            polygon: '圈选',
            lineX: '横向选择',
            lineY: '纵向选择',
            keep: '保持选择',
            clear: '清除选择',
          },
        },
        dataView: { title: '数据视图', lang: ['数据视图', '关闭', '刷新'] },
        dataZoom: { title: { zoom: '区域缩放', back: '区域缩放还原' } },
        magicType: { title: { line: '切换为折线图', bar: '切换为柱状图', stack: '切换为堆叠', tiled: '切换为平铺' } },
        restore: { title: '还原' },
        saveAsImage: { title: '保存为图片', lang: ['右键另存为图片'] },
      },
      series: {
        typeNames: {
          pie: '饼图',
          bar: '柱状图',
          line: '折线图',
          scatter: '散点图',
          effectScatter: '涟漪散点图',
          radar: '雷达图',
          tree: '树图',
          treemap: '矩形树图',
          boxplot: '箱型图',
          candlestick: 'K线图',
          k: 'K线图',
          heatmap: '热力图',
          map: '地图',
          parallel: '平行坐标图',
          lines: '线图',
          graph: '关系图',
          sankey: '桑基图',
          funnel: '漏斗图',
          gauge: '仪表盘图',
          pictorialBar: '象形柱图',
          themeRiver: '主题河流图',
          sunburst: '旭日图',
        },
      },
      aria: {
        general: { withTitle: '这是一个关于“{title}”的图表。', withoutTitle: '这是一个图表，' },
        series: {
          single: {
            prefix: '',
            withName: '图表类型是{seriesType}，表示{seriesName}。',
            withoutName: '图表类型是{seriesType}。',
          },
          multiple: {
            prefix: '它由{seriesCount}个图表系列组成。',
            withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',
            withoutName: '第{seriesId}个系列是一个{seriesType}，',
            separator: { middle: '；', end: '。' },
          },
        },
        data: {
          allData: '其数据是——',
          partialData: '其中，前{displayCnt}项是——',
          withName: '{name}的数据是{value}',
          withoutName: '{value}',
          separator: { middle: '，', end: '' },
        },
      },
    },
    dw = function (t, e) {
      function i(t, e) {
        if ('string' != typeof t) return t;
        var i = t;
        return (
          f(e, function (t, e) {
            i = i.replace(new RegExp('\\{\\s*' + e + '\\s*\\}', 'g'), t);
          }),
          i
        );
      }
      function n(t) {
        var e = o.get(t);
        if (null == e) {
          for (var i = t.split('.'), n = cw.aria, r = 0; r < i.length; ++r) n = n[i[r]];
          return n;
        }
        return e;
      }
      function r() {
        var t = e.getModel('title').option;
        return t && t.length && (t = t[0]), t && t.text;
      }
      function a(t) {
        return cw.series.typeNames[t] || '自定义图';
      }
      var o = e.getModel('aria');
      if (o.get('show')) {
        if (o.get('description')) return void t.setAttribute('aria-label', o.get('description'));
        var s = 0;
        e.eachSeries(function () {
          ++s;
        }, this);
        var l,
          u = o.get('data.maxCount') || 10,
          h = o.get('series.maxCount') || 10,
          c = Math.min(s, h);
        if (!(1 > s)) {
          var d = r();
          l = d ? i(n('general.withTitle'), { title: d }) : n('general.withoutTitle');
          var p = [],
            g = s > 1 ? 'series.multiple.prefix' : 'series.single.prefix';
          (l += i(n(g), { seriesCount: s })),
            e.eachSeries(function (t, e) {
              if (c > e) {
                var r,
                  o = t.get('name'),
                  l = 'series.' + (s > 1 ? 'multiple' : 'single') + '.';
                (r = n(o ? l + 'withName' : l + 'withoutName')),
                  (r = i(r, { seriesId: t.seriesIndex, seriesName: t.get('name'), seriesType: a(t.subType) }));
                var h = t.getData();
                (window.data = h),
                  (r += h.count() > u ? i(n('data.partialData'), { displayCnt: u }) : n('data.allData'));
                for (var d = [], f = 0; f < h.count(); f++)
                  if (u > f) {
                    var g = h.getName(f),
                      m = Ns(h, f);
                    d.push(i(n(g ? 'data.withName' : 'data.withoutName'), { name: g, value: m }));
                  }
                (r += d.join(n('data.separator.middle')) + n('data.separator.end')), p.push(r);
              }
            }),
            (l += p.join(n('series.multiple.separator.middle')) + n('series.multiple.separator.end')),
            t.setAttribute('aria-label', l);
        }
      }
    },
    fw = Math.PI,
    pw = function (t, e) {
      (e = e || {}),
        s(e, {
          text: 'loading',
          color: '#c23531',
          textColor: '#000',
          maskColor: 'rgba(255, 255, 255, 0.8)',
          zlevel: 0,
        });
      var i = new g_({ style: { fill: e.maskColor }, zlevel: e.zlevel, z: 1e4 }),
        n = new x_({
          shape: { startAngle: -fw / 2, endAngle: -fw / 2 + 0.1, r: 10 },
          style: { stroke: e.color, lineCap: 'round', lineWidth: 5 },
          zlevel: e.zlevel,
          z: 10001,
        }),
        r = new g_({
          style: { fill: 'none', text: e.text, textPosition: 'right', textDistance: 10, textFill: e.textColor },
          zlevel: e.zlevel,
          z: 10001,
        });
      n
        .animateShape(!0)
        .when(1e3, { endAngle: (3 * fw) / 2 })
        .start('circularInOut'),
        n
          .animateShape(!0)
          .when(1e3, { startAngle: (3 * fw) / 2 })
          .delay(300)
          .start('circularInOut');
      var a = new Wm();
      return (
        a.add(n),
        a.add(r),
        a.add(i),
        (a.resize = function () {
          var e = t.getWidth() / 2,
            a = t.getHeight() / 2;
          n.setShape({ cx: e, cy: a });
          var o = n.shape.r;
          r.setShape({ x: e - o, y: a - o, width: 2 * o, height: 2 * o }),
            i.setShape({ x: 0, y: 0, width: t.getWidth(), height: t.getHeight() });
        }),
        a.resize(),
        a
      );
    },
    gw = al.prototype;
  (gw.restoreData = function (t, e) {
    t.restoreData(e),
      this._stageTaskMap.each(function (t) {
        var e = t.overallTask;
        e && e.dirty();
      });
  }),
    (gw.getPerformArgs = function (t, e) {
      if (t.__pipeline) {
        var i = this._pipelineMap.get(t.__pipeline.id),
          n = i.context,
          r = !e && i.progressiveEnabled && (!n || n.progressiveRender) && t.__idxInPipeline > i.blockIndex,
          a = r ? i.step : null,
          o = n && n.modDataCount,
          s = null != o ? Math.ceil(o / a) : null;
        return { step: a, modBy: s, modDataCount: o };
      }
    }),
    (gw.getPipeline = function (t) {
      return this._pipelineMap.get(t);
    }),
    (gw.updateStreamModes = function (t, e) {
      var i = this._pipelineMap.get(t.uid),
        n = t.getData(),
        r = n.count(),
        a = i.progressiveEnabled && e.incrementalPrepareRender && r >= i.threshold,
        o = t.get('large') && r >= t.get('largeThreshold'),
        s = 'mod' === t.get('progressiveChunkMode') ? r : null;
      t.pipelineContext = i.context = { progressiveRender: a, modDataCount: s, large: o };
    }),
    (gw.restorePipelines = function (t) {
      var e = this,
        i = (e._pipelineMap = N());
      t.eachSeries(function (t) {
        var n = t.getProgressive(),
          r = t.uid;
        i.set(r, {
          id: r,
          head: null,
          tail: null,
          threshold: t.getProgressiveThreshold(),
          progressiveEnabled: n && !(t.preventIncremental && t.preventIncremental()),
          blockIndex: -1,
          step: Math.round(n || 700),
          count: 0,
        }),
          vl(e, t, t.dataTask);
      });
    }),
    (gw.prepareStageTasks = function () {
      var t = this._stageTaskMap,
        e = this.ecInstance.getModel(),
        i = this.api;
      f(
        this._allHandlers,
        function (n) {
          var r = t.get(n.uid) || t.set(n.uid, []);
          n.reset && sl(this, n, r, e, i), n.overallReset && ll(this, n, r, e, i);
        },
        this,
      );
    }),
    (gw.prepareView = function (t, e, i, n) {
      var r = t.renderTask,
        a = r.context;
      (a.model = e), (a.ecModel = i), (a.api = n), (r.__block = !t.incrementalPrepareRender), vl(this, e, r);
    }),
    (gw.performDataProcessorTasks = function (t, e) {
      ol(this, this._dataProcessorHandlers, t, e, { block: !0 });
    }),
    (gw.performVisualTasks = function (t, e, i) {
      ol(this, this._visualHandlers, t, e, i);
    }),
    (gw.performSeriesTasks = function (t) {
      var e;
      t.eachSeries(function (t) {
        e |= t.dataTask.perform();
      }),
        (this.unfinished |= e);
    }),
    (gw.plan = function () {
      this._pipelineMap.each(function (t) {
        var e = t.tail;
        do {
          if (e.__block) {
            t.blockIndex = e.__idxInPipeline;
            break;
          }
          e = e.getUpstream();
        } while (e);
      });
    });
  var mw = (gw.updatePayload = function (t, e) {
      'remain' !== e && (t.context.payload = e);
    }),
    vw = gl(0);
  al.wrapStageHandler = function (t, e) {
    return (
      w(t) && (t = { overallReset: t, seriesType: yl(t) }), (t.uid = io('stageHandler')), e && (t.visualType = e), t
    );
  };
  var yw,
    _w = {},
    xw = {};
  _l(_w, Dx),
    _l(xw, cs),
    (_w.eachSeriesByType = _w.eachRawSeriesByType =
      function (t) {
        yw = t;
      }),
    (_w.eachComponent = function (t) {
      'series' === t.mainType && t.subType && (yw = t.subType);
    });
  var ww = [
      '#37A2DA',
      '#32C5E9',
      '#67E0E3',
      '#9FE6B8',
      '#FFDB5C',
      '#ff9f7f',
      '#fb7293',
      '#E062AE',
      '#E690D1',
      '#e7bcf3',
      '#9d96f5',
      '#8378EA',
      '#96BFFF',
    ],
    bw = {
      color: ww,
      colorLayer: [
        ['#37A2DA', '#ffd85c', '#fd7b5f'],
        ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'],
        ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'],
        ww,
      ],
    },
    Sw = '#eee',
    Mw = function () {
      return {
        axisLine: { lineStyle: { color: Sw } },
        axisTick: { lineStyle: { color: Sw } },
        axisLabel: { textStyle: { color: Sw } },
        splitLine: { lineStyle: { type: 'dashed', color: '#aaa' } },
        splitArea: { areaStyle: { color: Sw } },
      };
    },
    Iw = [
      '#dd6b66',
      '#759aa0',
      '#e69d87',
      '#8dc1a9',
      '#ea7e53',
      '#eedd78',
      '#73a373',
      '#73b9bc',
      '#7289ab',
      '#91ca8c',
      '#f49f42',
    ],
    Cw = {
      color: Iw,
      backgroundColor: '#333',
      tooltip: { axisPointer: { lineStyle: { color: Sw }, crossStyle: { color: Sw } } },
      legend: { textStyle: { color: Sw } },
      textStyle: { color: Sw },
      title: { textStyle: { color: Sw } },
      toolbox: { iconStyle: { normal: { borderColor: Sw } } },
      dataZoom: { textStyle: { color: Sw } },
      visualMap: { textStyle: { color: Sw } },
      timeline: {
        lineStyle: { color: Sw },
        itemStyle: { normal: { color: Iw[1] } },
        label: { normal: { textStyle: { color: Sw } } },
        controlStyle: { normal: { color: Sw, borderColor: Sw } },
      },
      timeAxis: Mw(),
      logAxis: Mw(),
      valueAxis: Mw(),
      categoryAxis: Mw(),
      line: { symbol: 'circle' },
      graph: { color: Iw },
      gauge: { title: { textStyle: { color: Sw } } },
      candlestick: {
        itemStyle: { normal: { color: '#FD1050', color0: '#0CF49B', borderColor: '#FD1050', borderColor0: '#0CF49B' } },
      },
    };
  (Cw.categoryAxis.splitLine.show = !1),
    cx.extend({
      type: 'dataset',
      defaultOption: { seriesLayoutBy: Mx, sourceHeader: null, dimensions: null, source: null },
      optionUpdated: function () {
        Xo(this);
      },
    }),
    tw.extend({ type: 'dataset' });
  var Tw = Vr.extend({
      type: 'ellipse',
      shape: { cx: 0, cy: 0, rx: 0, ry: 0 },
      buildPath: function (t, e) {
        var i = 0.5522848,
          n = e.cx,
          r = e.cy,
          a = e.rx,
          o = e.ry,
          s = a * i,
          l = o * i;
        t.moveTo(n - a, r),
          t.bezierCurveTo(n - a, r - l, n - s, r - o, n, r - o),
          t.bezierCurveTo(n + s, r - o, n + a, r - l, n + a, r),
          t.bezierCurveTo(n + a, r + l, n + s, r + o, n, r + o),
          t.bezierCurveTo(n - s, r + o, n - a, r + l, n - a, r),
          t.closePath();
      },
    }),
    Dw = /[\s,]+/;
  (wl.prototype.parse = function (t, e) {
    e = e || {};
    var i = xl(t);
    if (!i) throw new Error('Illegal svg');
    var n = new Wm();
    this._root = n;
    var r = i.getAttribute('viewBox') || '',
      a = parseFloat(i.getAttribute('width') || e.width),
      o = parseFloat(i.getAttribute('height') || e.height);
    isNaN(a) && (a = null), isNaN(o) && (o = null), Il(i, n, null, !0);
    for (var s = i.firstChild; s; ) this._parseNode(s, n), (s = s.nextSibling);
    var l, u;
    if (r) {
      var h = z(r).split(Dw);
      h.length >= 4 &&
        (l = { x: parseFloat(h[0] || 0), y: parseFloat(h[1] || 0), width: parseFloat(h[2]), height: parseFloat(h[3]) });
    }
    if (l && null != a && null != o && ((u = Al(l, a, o)), !e.ignoreViewBox)) {
      var c = n;
      (n = new Wm()), n.add(c), (c.scale = u.scale.slice()), (c.position = u.position.slice());
    }
    return (
      e.ignoreRootClip ||
        null == a ||
        null == o ||
        n.setClipPath(new g_({ shape: { x: 0, y: 0, width: a, height: o } })),
      { root: n, width: a, height: o, viewBoxRect: l, viewBoxTransform: u }
    );
  }),
    (wl.prototype._parseNode = function (t, e) {
      var i = t.nodeName.toLowerCase();
      'defs' === i ? (this._isDefine = !0) : 'text' === i && (this._isText = !0);
      var n;
      if (this._isDefine) {
        var r = kw[i];
        if (r) {
          var a = r.call(this, t),
            o = t.getAttribute('id');
          o && (this._defs[o] = a);
        }
      } else {
        var r = Aw[i];
        r && ((n = r.call(this, t, e)), e.add(n));
      }
      for (var s = t.firstChild; s; )
        1 === s.nodeType && this._parseNode(s, n),
          3 === s.nodeType && this._isText && this._parseText(s, n),
          (s = s.nextSibling);
      'defs' === i ? (this._isDefine = !1) : 'text' === i && (this._isText = !1);
    }),
    (wl.prototype._parseText = function (t, e) {
      if (1 === t.nodeType) {
        var i = t.getAttribute('dx') || 0,
          n = t.getAttribute('dy') || 0;
        (this._textX += parseFloat(i)), (this._textY += parseFloat(n));
      }
      var r = new n_({
        style: { text: t.textContent, transformText: !0 },
        position: [this._textX || 0, this._textY || 0],
      });
      Sl(e, r), Il(t, r, this._defs);
      var a = r.style.fontSize;
      a &&
        9 > a &&
        ((r.style.fontSize = 9), (r.scale = r.scale || [1, 1]), (r.scale[0] *= a / 9), (r.scale[1] *= a / 9));
      var o = r.getBoundingRect();
      return (this._textX += o.width), e.add(r), r;
    });
  var Aw = {
      g: function (t, e) {
        var i = new Wm();
        return Sl(e, i), Il(t, i, this._defs), i;
      },
      rect: function (t, e) {
        var i = new g_();
        return (
          Sl(e, i),
          Il(t, i, this._defs),
          i.setShape({
            x: parseFloat(t.getAttribute('x') || 0),
            y: parseFloat(t.getAttribute('y') || 0),
            width: parseFloat(t.getAttribute('width') || 0),
            height: parseFloat(t.getAttribute('height') || 0),
          }),
          i
        );
      },
      circle: function (t, e) {
        var i = new r_();
        return (
          Sl(e, i),
          Il(t, i, this._defs),
          i.setShape({
            cx: parseFloat(t.getAttribute('cx') || 0),
            cy: parseFloat(t.getAttribute('cy') || 0),
            r: parseFloat(t.getAttribute('r') || 0),
          }),
          i
        );
      },
      line: function (t, e) {
        var i = new v_();
        return (
          Sl(e, i),
          Il(t, i, this._defs),
          i.setShape({
            x1: parseFloat(t.getAttribute('x1') || 0),
            y1: parseFloat(t.getAttribute('y1') || 0),
            x2: parseFloat(t.getAttribute('x2') || 0),
            y2: parseFloat(t.getAttribute('y2') || 0),
          }),
          i
        );
      },
      ellipse: function (t, e) {
        var i = new Tw();
        return (
          Sl(e, i),
          Il(t, i, this._defs),
          i.setShape({
            cx: parseFloat(t.getAttribute('cx') || 0),
            cy: parseFloat(t.getAttribute('cy') || 0),
            rx: parseFloat(t.getAttribute('rx') || 0),
            ry: parseFloat(t.getAttribute('ry') || 0),
          }),
          i
        );
      },
      polygon: function (t, e) {
        var i = t.getAttribute('points');
        i && (i = Ml(i));
        var n = new c_({ shape: { points: i || [] } });
        return Sl(e, n), Il(t, n, this._defs), n;
      },
      polyline: function (t, e) {
        var i = new Vr();
        Sl(e, i), Il(t, i, this._defs);
        var n = t.getAttribute('points');
        n && (n = Ml(n));
        var r = new d_({ shape: { points: n || [] } });
        return r;
      },
      image: function (t, e) {
        var i = new Sn();
        return (
          Sl(e, i),
          Il(t, i, this._defs),
          i.setStyle({
            image: t.getAttribute('xlink:href'),
            x: t.getAttribute('x'),
            y: t.getAttribute('y'),
            width: t.getAttribute('width'),
            height: t.getAttribute('height'),
          }),
          i
        );
      },
      text: function (t, e) {
        var i = t.getAttribute('x') || 0,
          n = t.getAttribute('y') || 0,
          r = t.getAttribute('dx') || 0,
          a = t.getAttribute('dy') || 0;
        (this._textX = parseFloat(i) + parseFloat(r)), (this._textY = parseFloat(n) + parseFloat(a));
        var o = new Wm();
        return Sl(e, o), Il(t, o, this._defs), o;
      },
      tspan: function (t, e) {
        var i = t.getAttribute('x'),
          n = t.getAttribute('y');
        null != i && (this._textX = parseFloat(i)), null != n && (this._textY = parseFloat(n));
        var r = t.getAttribute('dx') || 0,
          a = t.getAttribute('dy') || 0,
          o = new Wm();
        return Sl(e, o), Il(t, o, this._defs), (this._textX += r), (this._textY += a), o;
      },
      path: function (t, e) {
        var i = t.getAttribute('d') || '',
          n = Xr(i);
        return Sl(e, n), Il(t, n, this._defs), n;
      },
    },
    kw = {
      lineargradient: function (t) {
        var e = parseInt(t.getAttribute('x1') || 0, 10),
          i = parseInt(t.getAttribute('y1') || 0, 10),
          n = parseInt(t.getAttribute('x2') || 10, 10),
          r = parseInt(t.getAttribute('y2') || 0, 10),
          a = new S_(e, i, n, r);
        return bl(t, a), a;
      },
      radialgradient: function () {},
    },
    Pw = {
      fill: 'fill',
      stroke: 'stroke',
      'stroke-width': 'lineWidth',
      opacity: 'opacity',
      'fill-opacity': 'fillOpacity',
      'stroke-opacity': 'strokeOpacity',
      'stroke-dasharray': 'lineDash',
      'stroke-dashoffset': 'lineDashOffset',
      'stroke-linecap': 'lineCap',
      'stroke-linejoin': 'lineJoin',
      'stroke-miterlimit': 'miterLimit',
      'font-family': 'fontFamily',
      'font-size': 'fontSize',
      'font-style': 'fontStyle',
      'font-weight': 'fontWeight',
      'text-align': 'textAlign',
      'alignment-baseline': 'textBaseline',
    },
    Lw = /url\(\s*#(.*?)\)/,
    Ow = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.e,]*)\)/g,
    zw = /([^\s:;]+)\s*:\s*([^:;]+)/g,
    Ew = N(),
    Rw = {
      registerMap: function (t, e, i) {
        var n;
        return (
          x(e)
            ? (n = e)
            : e.svg
            ? (n = [{ type: 'svg', source: e.svg, specialAreas: e.specialAreas }])
            : (e.geoJson && !e.features && ((i = e.specialAreas), (e = e.geoJson)),
              (n = [{ type: 'geoJSON', source: e, specialAreas: i }])),
          f(n, function (t) {
            var e = t.type;
            'geoJson' === e && (e = t.type = 'geoJSON');
            var i = Bw[e];
            Cg && O(i, 'Illegal map type: ' + e), i(t);
          }),
          Ew.set(t, n)
        );
      },
      retrieveMap: function (t) {
        return Ew.get(t);
      },
    },
    Bw = {
      geoJSON: function (t) {
        var e = t.source;
        t.geoJSON = b(e)
          ? 'undefined' != typeof JSON && JSON.parse
            ? JSON.parse(e)
            : new Function('return (' + e + ');')()
          : e;
      },
      svg: function (t) {
        t.svgXML = xl(t.source);
      },
    },
    Nw = O,
    Fw = f,
    Gw = w,
    Vw = S,
    Hw = cx.parseClassType,
    Ww = '4.4.0',
    Uw = { zrender: '4.1.1' },
    Xw = 1,
    Yw = 1e3,
    Zw = 800,
    jw = 900,
    qw = 5e3,
    Kw = 1e3,
    $w = 1100,
    Jw = 2e3,
    Qw = 3e3,
    tb = 3500,
    eb = 4e3,
    ib = 5e3,
    nb = {
      PROCESSOR: { FILTER: Yw, SERIES_FILTER: Zw, STATISTIC: qw },
      VISUAL: {
        LAYOUT: Kw,
        PROGRESSIVE_LAYOUT: $w,
        GLOBAL: Jw,
        CHART: Qw,
        POST_CHART_LAYOUT: tb,
        COMPONENT: eb,
        BRUSH: ib,
      },
    },
    rb = '__flagInMainProcess',
    ab = '__optionUpdated',
    ob = /^[a-zA-Z0-9_]+$/;
  (Ll.prototype.on = Pl('on', !0)), (Ll.prototype.off = Pl('off', !0)), (Ll.prototype.one = Pl('one', !0)), c(Ll, Jg);
  var sb = Ol.prototype;
  (sb._onframe = function () {
    if (!this._disposed) {
      var t = this._scheduler;
      if (this[ab]) {
        var e = this[ab].silent;
        (this[rb] = !0),
          El(this),
          lb.update.call(this),
          (this[rb] = !1),
          (this[ab] = !1),
          Fl.call(this, e),
          Gl.call(this, e);
      } else if (t.unfinished) {
        var i = Xw,
          n = this._model,
          r = this._api;
        t.unfinished = !1;
        do {
          var a = +new Date();
          t.performSeriesTasks(n),
            t.performDataProcessorTasks(n),
            Bl(this, n),
            t.performVisualTasks(n),
            Yl(this, this._model, r, 'remain'),
            (i -= +new Date() - a);
        } while (i > 0 && t.unfinished);
        t.unfinished || this._zr.flush();
      }
    }
  }),
    (sb.getDom = function () {
      return this._dom;
    }),
    (sb.getZr = function () {
      return this._zr;
    }),
    (sb.setOption = function (t, e, i) {
      if ((Cg && Nw(!this[rb], '`setOption` should not be called during main process.'), this._disposed))
        return void jl(this.id);
      var n;
      if ((Vw(e) && ((i = e.lazyUpdate), (n = e.silent), (e = e.notMerge)), (this[rb] = !0), !this._model || e)) {
        var r = new fs(this._api),
          a = this._theme,
          o = (this._model = new Dx());
        (o.scheduler = this._scheduler), o.init(null, null, a, r);
      }
      this._model.setOption(t, fb),
        i
          ? ((this[ab] = { silent: n }), (this[rb] = !1))
          : (El(this),
            lb.update.call(this),
            this._zr.flush(),
            (this[ab] = !1),
            (this[rb] = !1),
            Fl.call(this, n),
            Gl.call(this, n));
    }),
    (sb.setTheme = function () {
      console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');
    }),
    (sb.getModel = function () {
      return this._model;
    }),
    (sb.getOption = function () {
      return this._model && this._model.getOption();
    }),
    (sb.getWidth = function () {
      return this._zr.getWidth();
    }),
    (sb.getHeight = function () {
      return this._zr.getHeight();
    }),
    (sb.getDevicePixelRatio = function () {
      return this._zr.painter.dpr || window.devicePixelRatio || 1;
    }),
    (sb.getRenderedCanvas = function (t) {
      if (kg.canvasSupported) {
        (t = t || {}),
          (t.pixelRatio = t.pixelRatio || 1),
          (t.backgroundColor = t.backgroundColor || this._model.get('backgroundColor'));
        var e = this._zr;
        return e.painter.getRenderedCanvas(t);
      }
    }),
    (sb.getSvgDataUrl = function () {
      if (kg.svgSupported) {
        var t = this._zr,
          e = t.storage.getDisplayList();
        return (
          f(e, function (t) {
            t.stopAnimation(!0);
          }),
          t.painter.pathToDataUrl()
        );
      }
    }),
    (sb.getDataURL = function (t) {
      if (this._disposed) return void jl(this.id);
      t = t || {};
      var e = t.excludeComponents,
        i = this._model,
        n = [],
        r = this;
      Fw(e, function (t) {
        i.eachComponent({ mainType: t }, function (t) {
          var e = r._componentsMap[t.__viewId];
          e.group.ignore || (n.push(e), (e.group.ignore = !0));
        });
      });
      var a =
        'svg' === this._zr.painter.getType()
          ? this.getSvgDataUrl()
          : this.getRenderedCanvas(t).toDataURL('image/' + ((t && t.type) || 'png'));
      return (
        Fw(n, function (t) {
          t.group.ignore = !1;
        }),
        a
      );
    }),
    (sb.getConnectedDataURL = function (t) {
      if (this._disposed) return void jl(this.id);
      if (kg.canvasSupported) {
        var e = this.group,
          i = Math.min,
          r = Math.max,
          a = 1 / 0;
        if (_b[e]) {
          var o = a,
            s = a,
            l = -a,
            u = -a,
            h = [],
            c = (t && t.pixelRatio) || 1;
          f(yb, function (a) {
            if (a.group === e) {
              var c = a.getRenderedCanvas(n(t)),
                d = a.getDom().getBoundingClientRect();
              (o = i(d.left, o)),
                (s = i(d.top, s)),
                (l = r(d.right, l)),
                (u = r(d.bottom, u)),
                h.push({ dom: c, left: d.left, top: d.top });
            }
          }),
            (o *= c),
            (s *= c),
            (l *= c),
            (u *= c);
          var d = l - o,
            p = u - s,
            g = Vg();
          (g.width = d), (g.height = p);
          var m = En(g);
          return (
            t.connectedBackgroundColor &&
              m.add(
                new g_({ shape: { x: 0, y: 0, width: d, height: p }, style: { fill: t.connectedBackgroundColor } }),
              ),
            Fw(h, function (t) {
              var e = new Sn({ style: { x: t.left * c - o, y: t.top * c - s, image: t.dom } });
              m.add(e);
            }),
            m.refreshImmediately(),
            g.toDataURL('image/' + ((t && t.type) || 'png'))
          );
        }
        return this.getDataURL(t);
      }
    }),
    (sb.convertToPixel = _(zl, 'convertToPixel')),
    (sb.convertFromPixel = _(zl, 'convertFromPixel')),
    (sb.containPixel = function (t, e) {
      if (this._disposed) return void jl(this.id);
      var i,
        n = this._model;
      return (
        (t = Kn(n, t)),
        f(
          t,
          function (t, n) {
            n.indexOf('Models') >= 0 &&
              f(
                t,
                function (t) {
                  var r = t.coordinateSystem;
                  if (r && r.containPoint) i |= !!r.containPoint(e);
                  else if ('seriesModels' === n) {
                    var a = this._chartsMap[t.__viewId];
                    a && a.containPoint
                      ? (i |= a.containPoint(e, t))
                      : Cg &&
                        console.warn(
                          n +
                            ': ' +
                            (a
                              ? 'The found component do not support containPoint.'
                              : 'No view mapping to the found component.'),
                        );
                  } else Cg && console.warn(n + ': containPoint is not supported');
                },
                this,
              );
          },
          this,
        ),
        !!i
      );
    }),
    (sb.getVisual = function (t, e) {
      var i = this._model;
      t = Kn(i, t, { defaultMainType: 'series' });
      var n = t.seriesModel;
      Cg && (n || console.warn('There is no specified seires model'));
      var r = n.getData(),
        a = t.hasOwnProperty('dataIndexInside')
          ? t.dataIndexInside
          : t.hasOwnProperty('dataIndex')
          ? r.indexOfRawIndex(t.dataIndex)
          : null;
      return null != a ? r.getItemVisual(a, e) : r.getVisual(e);
    }),
    (sb.getViewOfComponentModel = function (t) {
      return this._componentsMap[t.__viewId];
    }),
    (sb.getViewOfSeriesModel = function (t) {
      return this._chartsMap[t.__viewId];
    });
  var lb = {
    prepareAndUpdate: function (t) {
      El(this), lb.update.call(this, t);
    },
    update: function (t) {
      var e = this._model,
        i = this._api,
        n = this._zr,
        r = this._coordSysMgr,
        a = this._scheduler;
      if (e) {
        a.restoreData(e, t),
          a.performSeriesTasks(e),
          r.create(e, i),
          a.performDataProcessorTasks(e, t),
          Bl(this, e),
          r.update(e, i),
          Wl(e),
          a.performVisualTasks(e, t),
          Ul(this, e, i, t);
        var o = e.get('backgroundColor') || 'transparent';
        if (kg.canvasSupported) n.setBackgroundColor(o);
        else {
          var s = qe(o);
          (o = ri(s, 'rgb')), 0 === s[3] && (o = 'transparent');
        }
        Zl(e, i);
      }
    },
    updateTransform: function (t) {
      var e = this._model,
        i = this,
        n = this._api;
      if (e) {
        var r = [];
        e.eachComponent(function (a, o) {
          var s = i.getViewOfComponentModel(o);
          if (s && s.__alive)
            if (s.updateTransform) {
              var l = s.updateTransform(o, e, n, t);
              l && l.update && r.push(s);
            } else r.push(s);
        });
        var a = N();
        e.eachSeries(function (r) {
          var o = i._chartsMap[r.__viewId];
          if (o.updateTransform) {
            var s = o.updateTransform(r, e, n, t);
            s && s.update && a.set(r.uid, 1);
          } else a.set(r.uid, 1);
        }),
          Wl(e),
          this._scheduler.performVisualTasks(e, t, { setDirty: !0, dirtyMap: a }),
          Yl(i, e, n, t, a),
          Zl(e, this._api);
      }
    },
    updateView: function (t) {
      var e = this._model;
      e &&
        (Js.markUpdateMethod(t, 'updateView'),
        Wl(e),
        this._scheduler.performVisualTasks(e, t, { setDirty: !0 }),
        Ul(this, this._model, this._api, t),
        Zl(e, this._api));
    },
    updateVisual: function (t) {
      lb.update.call(this, t);
    },
    updateLayout: function (t) {
      lb.update.call(this, t);
    },
  };
  (sb.resize = function (t) {
    if ((Cg && Nw(!this[rb], '`resize` should not be called during main process.'), this._disposed))
      return void jl(this.id);
    this._zr.resize(t);
    var e = this._model;
    if ((this._loadingFX && this._loadingFX.resize(), e)) {
      var i = e.resetOption('media'),
        n = t && t.silent;
      (this[rb] = !0), i && El(this), lb.update.call(this), (this[rb] = !1), Fl.call(this, n), Gl.call(this, n);
    }
  }),
    (sb.showLoading = function (t, e) {
      if (this._disposed) return void jl(this.id);
      if ((Vw(t) && ((e = t), (t = '')), (t = t || 'default'), this.hideLoading(), !vb[t]))
        return void (Cg && console.warn('Loading effects ' + t + ' not exists.'));
      var i = vb[t](this._api, e),
        n = this._zr;
      (this._loadingFX = i), n.add(i);
    }),
    (sb.hideLoading = function () {
      return this._disposed
        ? void jl(this.id)
        : (this._loadingFX && this._zr.remove(this._loadingFX), void (this._loadingFX = null));
    }),
    (sb.makeActionFromEvent = function (t) {
      var e = o({}, t);
      return (e.type = cb[t.type]), e;
    }),
    (sb.dispatchAction = function (t, e) {
      if (this._disposed) return void jl(this.id);
      if ((Vw(e) || (e = { silent: !!e }), hb[t.type] && this._model)) {
        if (this[rb]) return void this._pendingActions.push(t);
        Nl.call(this, t, e.silent),
          e.flush ? this._zr.flush(!0) : e.flush !== !1 && kg.browser.weChat && this._throttledZrFlush(),
          Fl.call(this, e.silent),
          Gl.call(this, e.silent);
      }
    }),
    (sb.appendData = function (t) {
      if (this._disposed) return void jl(this.id);
      var e = t.seriesIndex,
        i = this.getModel(),
        n = i.getSeriesByIndex(e);
      Cg && Nw(t.data && n), n.appendData(t), (this._scheduler.unfinished = !0);
    }),
    (sb.on = Pl('on', !1)),
    (sb.off = Pl('off', !1)),
    (sb.one = Pl('one', !1));
  var ub = [
    'click',
    'dblclick',
    'mouseover',
    'mouseout',
    'mousemove',
    'mousedown',
    'mouseup',
    'globalout',
    'contextmenu',
  ];
  (sb._initEvents = function () {
    Fw(
      ub,
      function (t) {
        var e = function (e) {
          var i,
            n = this.getModel(),
            r = e.target,
            a = 'globalout' === t;
          if (a) i = {};
          else if (r && null != r.dataIndex) {
            var s = r.dataModel || n.getSeriesByIndex(r.seriesIndex);
            i = (s && s.getDataParams(r.dataIndex, r.dataType, r)) || {};
          } else r && r.eventData && (i = o({}, r.eventData));
          if (i) {
            var l = i.componentType,
              u = i.componentIndex;
            ('markLine' === l || 'markPoint' === l || 'markArea' === l) && ((l = 'series'), (u = i.seriesIndex));
            var h = l && null != u && n.getComponent(l, u),
              c = h && this['series' === h.mainType ? '_chartsMap' : '_componentsMap'][h.__viewId];
            Cg && (a || (h && c) || console.warn('model or view can not be found by params')),
              (i.event = e),
              (i.type = t),
              (this._ecEventProcessor.eventInfo = { targetEl: r, packedEvent: i, model: h, view: c }),
              this.trigger(t, i);
          }
        };
        (e.zrEventfulCallAtLast = !0), this._zr.on(t, e, this);
      },
      this,
    ),
      Fw(
        cb,
        function (t, e) {
          this._messageCenter.on(
            e,
            function (t) {
              this.trigger(e, t);
            },
            this,
          );
        },
        this,
      );
  }),
    (sb.isDisposed = function () {
      return this._disposed;
    }),
    (sb.clear = function () {
      return this._disposed ? void jl(this.id) : void this.setOption({ series: [] }, !0);
    }),
    (sb.dispose = function () {
      if (this._disposed) return void jl(this.id);
      (this._disposed = !0), Jn(this.getDom(), bb, '');
      var t = this._api,
        e = this._model;
      Fw(this._componentsViews, function (i) {
        i.dispose(e, t);
      }),
        Fw(this._chartsViews, function (i) {
          i.dispose(e, t);
        }),
        this._zr.dispose(),
        delete yb[this.id];
    }),
    c(Ol, Jg),
    (Ql.prototype = {
      constructor: Ql,
      normalizeQuery: function (t) {
        var e = {},
          i = {},
          n = {};
        if (b(t)) {
          var r = Hw(t);
          (e.mainType = r.main || null), (e.subType = r.sub || null);
        } else {
          var a = ['Index', 'Name', 'Id'],
            o = { name: 1, dataIndex: 1, dataType: 1 };
          f(t, function (t, r) {
            for (var s = !1, l = 0; l < a.length; l++) {
              var u = a[l],
                h = r.lastIndexOf(u);
              if (h > 0 && h === r.length - u.length) {
                var c = r.slice(0, h);
                'data' !== c && ((e.mainType = c), (e[u.toLowerCase()] = t), (s = !0));
              }
            }
            o.hasOwnProperty(r) && ((i[r] = t), (s = !0)), s || (n[r] = t);
          });
        }
        return { cptQuery: e, dataQuery: i, otherQuery: n };
      },
      filter: function (t, e) {
        function i(t, e, i, n) {
          return null == t[i] || e[n || i] === t[i];
        }
        var n = this.eventInfo;
        if (!n) return !0;
        var r = n.targetEl,
          a = n.packedEvent,
          o = n.model,
          s = n.view;
        if (!o || !s) return !0;
        var l = e.cptQuery,
          u = e.dataQuery;
        return (
          i(l, o, 'mainType') &&
          i(l, o, 'subType') &&
          i(l, o, 'index', 'componentIndex') &&
          i(l, o, 'name') &&
          i(l, o, 'id') &&
          i(u, a, 'name') &&
          i(u, a, 'dataIndex') &&
          i(u, a, 'dataType') &&
          (!s.filterForExposedEvent || s.filterForExposedEvent(t, e.otherQuery, r, a))
        );
      },
      afterTrigger: function () {
        this.eventInfo = null;
      },
    });
  var hb = {},
    cb = {},
    db = [],
    fb = [],
    pb = [],
    gb = [],
    mb = {},
    vb = {},
    yb = {},
    _b = {},
    xb = new Date() - 0,
    wb = new Date() - 0,
    bb = '_echarts_instance_',
    Sb = nu;
  gu(Jw, hw),
    lu(Hx),
    uu(jw, Wx),
    vu('default', pw),
    cu({ type: 'highlight', event: 'highlight', update: 'highlight' }, G),
    cu({ type: 'downplay', event: 'downplay', update: 'downplay' }, G),
    su('light', bw),
    su('dark', Cw);
  var Mb = {};
  Cu.prototype = {
    constructor: Cu,
    add: function (t) {
      return (this._add = t), this;
    },
    update: function (t) {
      return (this._update = t), this;
    },
    remove: function (t) {
      return (this._remove = t), this;
    },
    execute: function () {
      var t,
        e = this._old,
        i = this._new,
        n = {},
        r = {},
        a = [],
        o = [];
      for (Tu(e, n, a, '_oldKeyGetter', this), Tu(i, r, o, '_newKeyGetter', this), t = 0; t < e.length; t++) {
        var s = a[t],
          l = r[s];
        if (null != l) {
          var u = l.length;
          u ? (1 === u && (r[s] = null), (l = l.unshift())) : (r[s] = null), this._update && this._update(l, t);
        } else this._remove && this._remove(t);
      }
      for (var t = 0; t < o.length; t++) {
        var s = o[t];
        if (r.hasOwnProperty(s)) {
          var l = r[s];
          if (null == l) continue;
          if (l.length) for (var h = 0, u = l.length; u > h; h++) this._add && this._add(l[h]);
          else this._add && this._add(l);
        }
      }
    },
  };
  var Ib = N(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']),
    Cb = S,
    Tb = 'undefined',
    Db = -1,
    Ab = 'e\x00\x00',
    kb = {
      float: typeof Float64Array === Tb ? Array : Float64Array,
      int: typeof Int32Array === Tb ? Array : Int32Array,
      ordinal: Array,
      number: Array,
      time: Array,
    },
    Pb = typeof Uint32Array === Tb ? Array : Uint32Array,
    Lb = typeof Int32Array === Tb ? Array : Int32Array,
    Ob = typeof Uint16Array === Tb ? Array : Uint16Array,
    zb = [
      'hasItemOption',
      '_nameList',
      '_idList',
      '_invertedIndicesMap',
      '_rawData',
      '_chunkSize',
      '_chunkCount',
      '_dimValueGetter',
      '_count',
      '_rawCount',
      '_nameDimIdx',
      '_idDimIdx',
    ],
    Eb = ['_extent', '_approximateExtent', '_rawExtent'],
    Rb = function (t, e) {
      t = t || ['x', 'y'];
      for (var i = {}, n = [], r = {}, a = 0; a < t.length; a++) {
        var o = t[a];
        b(o) && (o = { name: o });
        var s = o.name;
        (o.type = o.type || 'float'),
          o.coordDim || ((o.coordDim = s), (o.coordDimIndex = 0)),
          (o.otherDims = o.otherDims || {}),
          n.push(s),
          (i[s] = o),
          (o.index = a),
          o.createInvertedIndices && (r[s] = []);
      }
      (this.dimensions = n),
        (this._dimensionInfos = i),
        (this.hostModel = e),
        this.dataType,
        (this._indices = null),
        (this._count = 0),
        (this._rawCount = 0),
        (this._storage = {}),
        (this._nameList = []),
        (this._idList = []),
        (this._optionModels = []),
        (this._visual = {}),
        (this._layout = {}),
        (this._itemVisuals = []),
        (this.hasItemVisual = {}),
        (this._itemLayouts = []),
        (this._graphicEls = []),
        (this._chunkSize = 1e5),
        (this._chunkCount = 0),
        this._rawData,
        (this._rawExtent = {}),
        (this._extent = {}),
        (this._approximateExtent = {}),
        (this._dimensionsSummary = Du(this)),
        (this._invertedIndicesMap = r),
        (this._calculationInfo = {}),
        (this.userOutput = this._dimensionsSummary.userOutput);
    },
    Bb = Rb.prototype;
  (Bb.type = 'list'),
    (Bb.hasItemOption = !0),
    (Bb.getDimension = function (t) {
      return (
        ('number' == typeof t || (!isNaN(t) && !this._dimensionInfos.hasOwnProperty(t))) && (t = this.dimensions[t]), t
      );
    }),
    (Bb.getDimensionInfo = function (t) {
      return this._dimensionInfos[this.getDimension(t)];
    }),
    (Bb.getDimensionsOnCoord = function () {
      return this._dimensionsSummary.dataDimsOnCoord.slice();
    }),
    (Bb.mapDimension = function (t, e) {
      var i = this._dimensionsSummary;
      if (null == e) return i.encodeFirstDimNotExtra[t];
      var n = i.encode[t];
      return e === !0 ? (n || []).slice() : n && n[e];
    }),
    (Bb.initData = function (t, e, i) {
      var n = Uo.isInstance(t) || d(t);
      if (
        (n && (t = new Ps(t, this.dimensions.length)),
        Cg && !n && ('function' != typeof t.getItem || 'function' != typeof t.count))
      )
        throw new Error('Inavlid data provider.');
      (this._rawData = t),
        (this._storage = {}),
        (this._indices = null),
        (this._nameList = e || []),
        (this._idList = []),
        (this._nameRepeatCount = {}),
        i || (this.hasItemOption = !1),
        (this.defaultDimValueGetter = Zx[this._rawData.getSource().sourceFormat]),
        (this._dimValueGetter = i = i || this.defaultDimValueGetter),
        (this._dimValueGetterArrayRows = Zx.arrayRows),
        (this._rawExtent = {}),
        this._initDataFromProvider(0, t.count()),
        t.pure && (this.hasItemOption = !1);
    }),
    (Bb.getProvider = function () {
      return this._rawData;
    }),
    (Bb.appendData = function (t) {
      Cg && O(!this._indices, 'appendData can only be called on raw data.');
      var e = this._rawData,
        i = this.count();
      e.appendData(t);
      var n = e.count();
      e.persistent || (n += i), this._initDataFromProvider(i, n);
    }),
    (Bb.appendValues = function (t, e) {
      for (
        var i = this._chunkSize,
          n = this._storage,
          r = this.dimensions,
          a = r.length,
          o = this._rawExtent,
          s = this.count(),
          l = s + Math.max(t.length, e ? e.length : 0),
          u = this._chunkCount,
          h = 0;
        a > h;
        h++
      ) {
        var c = r[h];
        o[c] || (o[c] = Xu()),
          n[c] || (n[c] = []),
          Eu(n, this._dimensionInfos[c], i, u, l),
          (this._chunkCount = n[c].length);
      }
      for (var d = new Array(a), f = s; l > f; f++) {
        for (var p = f - s, g = Math.floor(f / i), m = f % i, v = 0; a > v; v++) {
          var c = r[v],
            y = this._dimValueGetterArrayRows(t[p] || d, c, p, v);
          n[c][g][m] = y;
          var _ = o[c];
          y < _[0] && (_[0] = y), y > _[1] && (_[1] = y);
        }
        e && (this._nameList[f] = e[p]);
      }
      (this._rawCount = this._count = l), (this._extent = {}), Ru(this);
    }),
    (Bb._initDataFromProvider = function (t, e) {
      if (!(t >= e)) {
        for (
          var i,
            n = this._chunkSize,
            r = this._rawData,
            a = this._storage,
            o = this.dimensions,
            s = o.length,
            l = this._dimensionInfos,
            u = this._nameList,
            h = this._idList,
            c = this._rawExtent,
            d = (this._nameRepeatCount = {}),
            f = this._chunkCount,
            p = 0;
          s > p;
          p++
        ) {
          var g = o[p];
          c[g] || (c[g] = Xu());
          var m = l[g];
          0 === m.otherDims.itemName && (i = this._nameDimIdx = p),
            0 === m.otherDims.itemId && (this._idDimIdx = p),
            a[g] || (a[g] = []),
            Eu(a, m, n, f, e),
            (this._chunkCount = a[g].length);
        }
        for (var v = new Array(s), y = t; e > y; y++) {
          v = r.getItem(y, v);
          for (var _ = Math.floor(y / n), x = y % n, w = 0; s > w; w++) {
            var g = o[w],
              b = a[g][_],
              S = this._dimValueGetter(v, g, y, w);
            b[x] = S;
            var M = c[g];
            S < M[0] && (M[0] = S), S > M[1] && (M[1] = S);
          }
          if (!r.pure) {
            var I = u[y];
            if (v && null == I)
              if (null != v.name) u[y] = I = v.name;
              else if (null != i) {
                var C = o[i],
                  T = a[C][_];
                if (T) {
                  I = T[x];
                  var D = l[C].ordinalMeta;
                  D && D.categories.length && (I = D.categories[I]);
                }
              }
            var A = null == v ? null : v.id;
            null == A && null != I && ((d[I] = d[I] || 0), (A = I), d[I] > 0 && (A += '__ec__' + d[I]), d[I]++),
              null != A && (h[y] = A);
          }
        }
        !r.persistent && r.clean && r.clean(), (this._rawCount = this._count = e), (this._extent = {}), Ru(this);
      }
    }),
    (Bb.count = function () {
      return this._count;
    }),
    (Bb.getIndices = function () {
      var t,
        e = this._indices;
      if (e) {
        var i = e.constructor,
          n = this._count;
        if (i === Array) {
          t = new i(n);
          for (var r = 0; n > r; r++) t[r] = e[r];
        } else t = new i(e.buffer, 0, n);
      } else for (var i = Lu(this), t = new i(this.count()), r = 0; r < t.length; r++) t[r] = r;
      return t;
    }),
    (Bb.get = function (t, e) {
      if (!(e >= 0 && e < this._count)) return 0 / 0;
      var i = this._storage;
      if (!i[t]) return 0 / 0;
      e = this.getRawIndex(e);
      var n = Math.floor(e / this._chunkSize),
        r = e % this._chunkSize,
        a = i[t][n],
        o = a[r];
      return o;
    }),
    (Bb.getByRawIndex = function (t, e) {
      if (!(e >= 0 && e < this._rawCount)) return 0 / 0;
      var i = this._storage[t];
      if (!i) return 0 / 0;
      var n = Math.floor(e / this._chunkSize),
        r = e % this._chunkSize,
        a = i[n];
      return a[r];
    }),
    (Bb._getFast = function (t, e) {
      var i = Math.floor(e / this._chunkSize),
        n = e % this._chunkSize,
        r = this._storage[t][i];
      return r[n];
    }),
    (Bb.getValues = function (t, e) {
      var i = [];
      x(t) || ((e = t), (t = this.dimensions));
      for (var n = 0, r = t.length; r > n; n++) i.push(this.get(t[n], e));
      return i;
    }),
    (Bb.hasValue = function (t) {
      for (var e = this._dimensionsSummary.dataDimsOnCoord, i = 0, n = e.length; n > i; i++)
        if (isNaN(this.get(e[i], t))) return !1;
      return !0;
    }),
    (Bb.getDataExtent = function (t) {
      t = this.getDimension(t);
      var e = this._storage[t],
        i = Xu();
      if (!e) return i;
      var n,
        r = this.count(),
        a = !this._indices;
      if (a) return this._rawExtent[t].slice();
      if ((n = this._extent[t])) return n.slice();
      n = i;
      for (var o = n[0], s = n[1], l = 0; r > l; l++) {
        var u = this._getFast(t, this.getRawIndex(l));
        o > u && (o = u), u > s && (s = u);
      }
      return (n = [o, s]), (this._extent[t] = n), n;
    }),
    (Bb.getApproximateExtent = function (t) {
      return (t = this.getDimension(t)), this._approximateExtent[t] || this.getDataExtent(t);
    }),
    (Bb.setApproximateExtent = function (t, e) {
      (e = this.getDimension(e)), (this._approximateExtent[e] = t.slice());
    }),
    (Bb.getCalculationInfo = function (t) {
      return this._calculationInfo[t];
    }),
    (Bb.setCalculationInfo = function (t, e) {
      Cb(t) ? o(this._calculationInfo, t) : (this._calculationInfo[t] = e);
    }),
    (Bb.getSum = function (t) {
      var e = this._storage[t],
        i = 0;
      if (e)
        for (var n = 0, r = this.count(); r > n; n++) {
          var a = this.get(t, n);
          isNaN(a) || (i += a);
        }
      return i;
    }),
    (Bb.getMedian = function (t) {
      var e = [];
      this.each(t, function (t) {
        isNaN(t) || e.push(t);
      });
      var i = [].concat(e).sort(function (t, e) {
          return t - e;
        }),
        n = this.count();
      return 0 === n ? 0 : n % 2 === 1 ? i[(n - 1) / 2] : (i[n / 2] + i[n / 2 - 1]) / 2;
    }),
    (Bb.rawIndexOf = function (t, e) {
      var i = t && this._invertedIndicesMap[t];
      if (Cg && !i) throw new Error('Do not supported yet');
      var n = i[e];
      return null == n || isNaN(n) ? Db : n;
    }),
    (Bb.indexOfName = function (t) {
      for (var e = 0, i = this.count(); i > e; e++) if (this.getName(e) === t) return e;
      return -1;
    }),
    (Bb.indexOfRawIndex = function (t) {
      if (!this._indices) return t;
      if (t >= this._rawCount || 0 > t) return -1;
      var e = this._indices,
        i = e[t];
      if (null != i && i < this._count && i === t) return t;
      for (var n = 0, r = this._count - 1; r >= n; ) {
        var a = ((n + r) / 2) | 0;
        if (e[a] < t) n = a + 1;
        else {
          if (!(e[a] > t)) return a;
          r = a - 1;
        }
      }
      return -1;
    }),
    (Bb.indicesOfNearest = function (t, e, i) {
      var n = this._storage,
        r = n[t],
        a = [];
      if (!r) return a;
      null == i && (i = 1 / 0);
      for (var o = Number.MAX_VALUE, s = -1, l = 0, u = this.count(); u > l; l++) {
        var h = e - this.get(t, l),
          c = Math.abs(h);
        i >= h && o >= c && ((o > c || (h >= 0 && 0 > s)) && ((o = c), (s = h), (a.length = 0)), a.push(l));
      }
      return a;
    }),
    (Bb.getRawIndex = Nu),
    (Bb.getRawDataItem = function (t) {
      if (this._rawData.persistent) return this._rawData.getItem(this.getRawIndex(t));
      for (var e = [], i = 0; i < this.dimensions.length; i++) {
        var n = this.dimensions[i];
        e.push(this.get(n, t));
      }
      return e;
    }),
    (Bb.getName = function (t) {
      var e = this.getRawIndex(t);
      return this._nameList[e] || Bu(this, this._nameDimIdx, e) || '';
    }),
    (Bb.getId = function (t) {
      return Gu(this, this.getRawIndex(t));
    }),
    (Bb.each = function (t, e, i, n) {
      if (this._count) {
        'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])),
          (i = i || n || this),
          (t = p(Vu(t), this.getDimension, this)),
          Cg && Hu(this, t);
        for (var r = t.length, a = 0; a < this.count(); a++)
          switch (r) {
            case 0:
              e.call(i, a);
              break;
            case 1:
              e.call(i, this.get(t[0], a), a);
              break;
            case 2:
              e.call(i, this.get(t[0], a), this.get(t[1], a), a);
              break;
            default:
              for (var o = 0, s = []; r > o; o++) s[o] = this.get(t[o], a);
              (s[o] = a), e.apply(i, s);
          }
      }
    }),
    (Bb.filterSelf = function (t, e, i, n) {
      if (this._count) {
        'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])),
          (i = i || n || this),
          (t = p(Vu(t), this.getDimension, this)),
          Cg && Hu(this, t);
        for (
          var r = this.count(), a = Lu(this), o = new a(r), s = [], l = t.length, u = 0, h = t[0], c = 0;
          r > c;
          c++
        ) {
          var d,
            f = this.getRawIndex(c);
          if (0 === l) d = e.call(i, c);
          else if (1 === l) {
            var g = this._getFast(h, f);
            d = e.call(i, g, c);
          } else {
            for (var m = 0; l > m; m++) s[m] = this._getFast(h, f);
            (s[m] = c), (d = e.apply(i, s));
          }
          d && (o[u++] = f);
        }
        return (
          r > u && (this._indices = o),
          (this._count = u),
          (this._extent = {}),
          (this.getRawIndex = this._indices ? Fu : Nu),
          this
        );
      }
    }),
    (Bb.selectRange = function (t) {
      if (this._count) {
        var e = [];
        for (var i in t) t.hasOwnProperty(i) && e.push(i);
        Cg && Hu(this, e);
        var n = e.length;
        if (n) {
          var r = this.count(),
            a = Lu(this),
            o = new a(r),
            s = 0,
            l = e[0],
            u = t[l][0],
            h = t[l][1],
            c = !1;
          if (!this._indices) {
            var d = 0;
            if (1 === n) {
              for (var f = this._storage[e[0]], p = 0; p < this._chunkCount; p++)
                for (
                  var g = f[p], m = Math.min(this._count - p * this._chunkSize, this._chunkSize), v = 0;
                  m > v;
                  v++
                ) {
                  var y = g[v];
                  ((y >= u && h >= y) || isNaN(y)) && (o[s++] = d), d++;
                }
              c = !0;
            } else if (2 === n) {
              for (
                var f = this._storage[l], _ = this._storage[e[1]], x = t[e[1]][0], w = t[e[1]][1], p = 0;
                p < this._chunkCount;
                p++
              )
                for (
                  var g = f[p], b = _[p], m = Math.min(this._count - p * this._chunkSize, this._chunkSize), v = 0;
                  m > v;
                  v++
                ) {
                  var y = g[v],
                    S = b[v];
                  ((y >= u && h >= y) || isNaN(y)) && ((S >= x && w >= S) || isNaN(S)) && (o[s++] = d), d++;
                }
              c = !0;
            }
          }
          if (!c)
            if (1 === n)
              for (var v = 0; r > v; v++) {
                var M = this.getRawIndex(v),
                  y = this._getFast(l, M);
                ((y >= u && h >= y) || isNaN(y)) && (o[s++] = M);
              }
            else
              for (var v = 0; r > v; v++) {
                for (var I = !0, M = this.getRawIndex(v), p = 0; n > p; p++) {
                  var C = e[p],
                    y = this._getFast(i, M);
                  (y < t[C][0] || y > t[C][1]) && (I = !1);
                }
                I && (o[s++] = this.getRawIndex(v));
              }
          return (
            r > s && (this._indices = o),
            (this._count = s),
            (this._extent = {}),
            (this.getRawIndex = this._indices ? Fu : Nu),
            this
          );
        }
      }
    }),
    (Bb.mapArray = function (t, e, i, n) {
      'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])), (i = i || n || this);
      var r = [];
      return (
        this.each(
          t,
          function () {
            r.push(e && e.apply(this, arguments));
          },
          i,
        ),
        r
      );
    }),
    (Bb.map = function (t, e, i, n) {
      (i = i || n || this), (t = p(Vu(t), this.getDimension, this)), Cg && Hu(this, t);
      var r = Wu(this, t);
      (r._indices = this._indices), (r.getRawIndex = r._indices ? Fu : Nu);
      for (
        var a = r._storage,
          o = [],
          s = this._chunkSize,
          l = t.length,
          u = this.count(),
          h = [],
          c = r._rawExtent,
          d = 0;
        u > d;
        d++
      ) {
        for (var f = 0; l > f; f++) h[f] = this.get(t[f], d);
        h[l] = d;
        var g = e && e.apply(i, h);
        if (null != g) {
          'object' != typeof g && ((o[0] = g), (g = o));
          for (var m = this.getRawIndex(d), v = Math.floor(m / s), y = m % s, _ = 0; _ < g.length; _++) {
            var x = t[_],
              w = g[_],
              b = c[x],
              S = a[x];
            S && (S[v][y] = w), w < b[0] && (b[0] = w), w > b[1] && (b[1] = w);
          }
        }
      }
      return r;
    }),
    (Bb.downSample = function (t, e, i, n) {
      for (
        var r = Wu(this, [t]),
          a = r._storage,
          o = [],
          s = Math.floor(1 / e),
          l = a[t],
          u = this.count(),
          h = this._chunkSize,
          c = r._rawExtent[t],
          d = new (Lu(this))(u),
          f = 0,
          p = 0;
        u > p;
        p += s
      ) {
        s > u - p && ((s = u - p), (o.length = s));
        for (var g = 0; s > g; g++) {
          var m = this.getRawIndex(p + g),
            v = Math.floor(m / h),
            y = m % h;
          o[g] = l[v][y];
        }
        var _ = i(o),
          x = this.getRawIndex(Math.min(p + n(o, _) || 0, u - 1)),
          w = Math.floor(x / h),
          b = x % h;
        (l[w][b] = _), _ < c[0] && (c[0] = _), _ > c[1] && (c[1] = _), (d[f++] = x);
      }
      return (r._count = f), (r._indices = d), (r.getRawIndex = Fu), r;
    }),
    (Bb.getItemModel = function (t) {
      var e = this.hostModel;
      return new Qa(this.getRawDataItem(t), e, e && e.ecModel);
    }),
    (Bb.diff = function (t) {
      var e = this;
      return new Cu(
        t ? t.getIndices() : [],
        this.getIndices(),
        function (e) {
          return Gu(t, e);
        },
        function (t) {
          return Gu(e, t);
        },
      );
    }),
    (Bb.getVisual = function (t) {
      var e = this._visual;
      return e && e[t];
    }),
    (Bb.setVisual = function (t, e) {
      if (Cb(t)) for (var i in t) t.hasOwnProperty(i) && this.setVisual(i, t[i]);
      else (this._visual = this._visual || {}), (this._visual[t] = e);
    }),
    (Bb.setLayout = function (t, e) {
      if (Cb(t)) for (var i in t) t.hasOwnProperty(i) && this.setLayout(i, t[i]);
      else this._layout[t] = e;
    }),
    (Bb.getLayout = function (t) {
      return this._layout[t];
    }),
    (Bb.getItemLayout = function (t) {
      return this._itemLayouts[t];
    }),
    (Bb.setItemLayout = function (t, e, i) {
      this._itemLayouts[t] = i ? o(this._itemLayouts[t] || {}, e) : e;
    }),
    (Bb.clearItemLayouts = function () {
      this._itemLayouts.length = 0;
    }),
    (Bb.getItemVisual = function (t, e, i) {
      var n = this._itemVisuals[t],
        r = n && n[e];
      return null != r || i ? r : this.getVisual(e);
    }),
    (Bb.setItemVisual = function (t, e, i) {
      var n = this._itemVisuals[t] || {},
        r = this.hasItemVisual;
      if (((this._itemVisuals[t] = n), Cb(e))) for (var a in e) e.hasOwnProperty(a) && ((n[a] = e[a]), (r[a] = !0));
      else (n[e] = i), (r[e] = !0);
    }),
    (Bb.clearAllVisual = function () {
      (this._visual = {}), (this._itemVisuals = []), (this.hasItemVisual = {});
    });
  var Nb = function (t) {
    (t.seriesIndex = this.seriesIndex), (t.dataIndex = this.dataIndex), (t.dataType = this.dataType);
  };
  (Bb.setItemGraphicEl = function (t, e) {
    var i = this.hostModel;
    e &&
      ((e.dataIndex = t),
      (e.dataType = this.dataType),
      (e.seriesIndex = i && i.seriesIndex),
      'group' === e.type && e.traverse(Nb, e)),
      (this._graphicEls[t] = e);
  }),
    (Bb.getItemGraphicEl = function (t) {
      return this._graphicEls[t];
    }),
    (Bb.eachItemGraphicEl = function (t, e) {
      f(this._graphicEls, function (i, n) {
        i && t && t.call(e, i, n);
      });
    }),
    (Bb.cloneShallow = function (t) {
      if (!t) {
        var e = p(this.dimensions, this.getDimensionInfo, this);
        t = new Rb(e, this.hostModel);
      }
      if (((t._storage = this._storage), zu(t, this), this._indices)) {
        var i = this._indices.constructor;
        t._indices = new i(this._indices);
      } else t._indices = null;
      return (t.getRawIndex = t._indices ? Fu : Nu), t;
    }),
    (Bb.wrapMethod = function (t, e) {
      var i = this[t];
      'function' == typeof i &&
        ((this.__wrappedMethods = this.__wrappedMethods || []),
        this.__wrappedMethods.push(t),
        (this[t] = function () {
          var t = i.apply(this, arguments);
          return e.apply(this, [t].concat(P(arguments)));
        }));
    }),
    (Bb.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']),
    (Bb.CHANGABLE_METHODS = ['filterSelf', 'selectRange']);
  var Fb = function (t, e) {
    return (
      (e = e || {}),
      Yu(e.coordDimensions || [], t, {
        dimsDef: e.dimensionsDefine || t.dimensionsDefine,
        encodeDef: e.encodeDefine || t.encodeDefine,
        dimCount: e.dimensionsCount,
        generateCoord: e.generateCoord,
        generateCoordCount: e.generateCoordCount,
      })
    );
  };
  (eh.prototype.parse = function (t) {
    return t;
  }),
    (eh.prototype.getSetting = function (t) {
      return this._setting[t];
    }),
    (eh.prototype.contain = function (t) {
      var e = this._extent;
      return t >= e[0] && t <= e[1];
    }),
    (eh.prototype.normalize = function (t) {
      var e = this._extent;
      return e[1] === e[0] ? 0.5 : (t - e[0]) / (e[1] - e[0]);
    }),
    (eh.prototype.scale = function (t) {
      var e = this._extent;
      return t * (e[1] - e[0]) + e[0];
    }),
    (eh.prototype.unionExtent = function (t) {
      var e = this._extent;
      t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]);
    }),
    (eh.prototype.unionExtentFromData = function (t, e) {
      this.unionExtent(t.getApproximateExtent(e));
    }),
    (eh.prototype.getExtent = function () {
      return this._extent.slice();
    }),
    (eh.prototype.setExtent = function (t, e) {
      var i = this._extent;
      isNaN(t) || (i[0] = t), isNaN(e) || (i[1] = e);
    }),
    (eh.prototype.isBlank = function () {
      return this._isBlank;
    }),
    (eh.prototype.setBlank = function (t) {
      this._isBlank = t;
    }),
    (eh.prototype.getLabel = null),
    nr(eh),
    sr(eh, { registerWhenExtend: !0 }),
    (ih.createByAxisModel = function (t) {
      var e = t.option,
        i = e.data,
        n = i && p(i, rh);
      return new ih({ categories: n, needCollect: !n, deduplication: e.dedplication !== !1 });
    });
  var Gb = ih.prototype;
  (Gb.getOrdinal = function (t) {
    return nh(this).get(t);
  }),
    (Gb.parseAndCollect = function (t) {
      var e,
        i = this._needCollect;
      if ('string' != typeof t && !i) return t;
      if (i && !this._deduplication) return (e = this.categories.length), (this.categories[e] = t), e;
      var n = nh(this);
      return (
        (e = n.get(t)),
        null == e && (i ? ((e = this.categories.length), (this.categories[e] = t), n.set(t, e)) : (e = 0 / 0)),
        e
      );
    });
  var Vb = eh.prototype,
    Hb = eh.extend({
      type: 'ordinal',
      init: function (t, e) {
        (!t || x(t)) && (t = new ih({ categories: t })),
          (this._ordinalMeta = t),
          (this._extent = e || [0, t.categories.length - 1]);
      },
      parse: function (t) {
        return 'string' == typeof t ? this._ordinalMeta.getOrdinal(t) : Math.round(t);
      },
      contain: function (t) {
        return (t = this.parse(t)), Vb.contain.call(this, t) && null != this._ordinalMeta.categories[t];
      },
      normalize: function (t) {
        return Vb.normalize.call(this, this.parse(t));
      },
      scale: function (t) {
        return Math.round(Vb.scale.call(this, t));
      },
      getTicks: function () {
        for (var t = [], e = this._extent, i = e[0]; i <= e[1]; ) t.push(i), i++;
        return t;
      },
      getLabel: function (t) {
        return this.isBlank() ? void 0 : this._ordinalMeta.categories[t];
      },
      count: function () {
        return this._extent[1] - this._extent[0] + 1;
      },
      unionExtentFromData: function (t, e) {
        this.unionExtent(t.getApproximateExtent(e));
      },
      getOrdinalMeta: function () {
        return this._ordinalMeta;
      },
      niceTicks: G,
      niceExtent: G,
    });
  Hb.create = function () {
    return new Hb();
  };
  var Wb = lo,
    Ub = lo,
    Xb = eh.extend({
      type: 'interval',
      _interval: 0,
      _intervalPrecision: 2,
      setExtent: function (t, e) {
        var i = this._extent;
        isNaN(t) || (i[0] = parseFloat(t)), isNaN(e) || (i[1] = parseFloat(e));
      },
      unionExtent: function (t) {
        var e = this._extent;
        t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]), Xb.prototype.setExtent.call(this, e[0], e[1]);
      },
      getInterval: function () {
        return this._interval;
      },
      setInterval: function (t) {
        (this._interval = t), (this._niceExtent = this._extent.slice()), (this._intervalPrecision = oh(t));
      },
      getTicks: function () {
        return uh(this._interval, this._extent, this._niceExtent, this._intervalPrecision);
      },
      getLabel: function (t, e) {
        if (null == t) return '';
        var i = e && e.precision;
        return null == i ? (i = co(t) || 0) : 'auto' === i && (i = this._intervalPrecision), (t = Ub(t, i, !0)), Mo(t);
      },
      niceTicks: function (t, e, i) {
        t = t || 5;
        var n = this._extent,
          r = n[1] - n[0];
        if (isFinite(r)) {
          0 > r && ((r = -r), n.reverse());
          var a = ah(n, t, e, i);
          (this._intervalPrecision = a.intervalPrecision),
            (this._interval = a.interval),
            (this._niceExtent = a.niceTickExtent);
        }
      },
      niceExtent: function (t) {
        var e = this._extent;
        if (e[0] === e[1])
          if (0 !== e[0]) {
            var i = e[0];
            t.fixMax ? (e[0] -= i / 2) : ((e[1] += i / 2), (e[0] -= i / 2));
          } else e[1] = 1;
        var n = e[1] - e[0];
        isFinite(n) || ((e[0] = 0), (e[1] = 1)), this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
        var r = this._interval;
        t.fixMin || (e[0] = Ub(Math.floor(e[0] / r) * r)), t.fixMax || (e[1] = Ub(Math.ceil(e[1] / r) * r));
      },
    });
  Xb.create = function () {
    return new Xb();
  };
  var Yb = '__ec_stack_',
    Zb = 0.5,
    jb = 'undefined' != typeof Float32Array ? Float32Array : Array,
    qb = {
      seriesType: 'bar',
      plan: iw(),
      reset: function (t) {
        function e(t, e) {
          for (
            var i, c = t.count, d = new jb(2 * c), f = new jb(c), p = [], g = [], m = 0, v = 0;
            null != (i = t.next());

          )
            (g[u] = e.get(o, i)),
              (g[1 - u] = e.get(s, i)),
              (p = n.dataToPoint(g, null, p)),
              (d[m++] = p[0]),
              (d[m++] = p[1]),
              (f[v++] = i);
          e.setLayout({
            largePoints: d,
            largeDataIndices: f,
            barWidth: h,
            valueAxisStart: _h(r, a, !1),
            valueAxisHorizontal: l,
          });
        }
        if (vh(t) && yh(t)) {
          var i = t.getData(),
            n = t.coordinateSystem,
            r = n.getBaseAxis(),
            a = n.getOtherAxis(r),
            o = i.mapDimension(a.dim),
            s = i.mapDimension(r.dim),
            l = a.isHorizontal(),
            u = l ? 0 : 1,
            h = gh(fh([t]), r, t).width;
          return h > Zb || (h = Zb), { progress: e };
        }
      },
    },
    Kb = Xb.prototype,
    $b = Math.ceil,
    Jb = Math.floor,
    Qb = 1e3,
    tS = 60 * Qb,
    eS = 60 * tS,
    iS = 24 * eS,
    nS = function (t, e, i, n) {
      for (; n > i; ) {
        var r = (i + n) >>> 1;
        t[r][1] < e ? (i = r + 1) : (n = r);
      }
      return i;
    },
    rS = Xb.extend({
      type: 'time',
      getLabel: function (t) {
        var e = this._stepLvl,
          i = new Date(t);
        return Po(e[0], i, this.getSetting('useUTC'));
      },
      niceExtent: function (t) {
        var e = this._extent;
        if ((e[0] === e[1] && ((e[0] -= iS), (e[1] += iS)), e[1] === -1 / 0 && 1 / 0 === e[0])) {
          var i = new Date();
          (e[1] = +new Date(i.getFullYear(), i.getMonth(), i.getDate())), (e[0] = e[1] - iS);
        }
        this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
        var n = this._interval;
        t.fixMin || (e[0] = lo(Jb(e[0] / n) * n)), t.fixMax || (e[1] = lo($b(e[1] / n) * n));
      },
      niceTicks: function (t, e, i) {
        t = t || 10;
        var n = this._extent,
          r = n[1] - n[0],
          a = r / t;
        null != e && e > a && (a = e), null != i && a > i && (a = i);
        var o = aS.length,
          s = nS(aS, a, 0, o),
          l = aS[Math.min(s, o - 1)],
          u = l[1];
        if ('year' === l[0]) {
          var h = r / u,
            c = xo(h / t, !0);
          u *= c;
        }
        var d = this.getSetting('useUTC') ? 0 : 60 * new Date(+n[0] || +n[1]).getTimezoneOffset() * 1e3,
          f = [Math.round($b((n[0] - d) / u) * u + d), Math.round(Jb((n[1] - d) / u) * u + d)];
        lh(f, n), (this._stepLvl = l), (this._interval = u), (this._niceExtent = f);
      },
      parse: function (t) {
        return +vo(t);
      },
    });
  f(['contain', 'normalize'], function (t) {
    rS.prototype[t] = function (e) {
      return Kb[t].call(this, this.parse(e));
    };
  });
  var aS = [
    ['hh:mm:ss', Qb],
    ['hh:mm:ss', 5 * Qb],
    ['hh:mm:ss', 10 * Qb],
    ['hh:mm:ss', 15 * Qb],
    ['hh:mm:ss', 30 * Qb],
    ['hh:mm\nMM-dd', tS],
    ['hh:mm\nMM-dd', 5 * tS],
    ['hh:mm\nMM-dd', 10 * tS],
    ['hh:mm\nMM-dd', 15 * tS],
    ['hh:mm\nMM-dd', 30 * tS],
    ['hh:mm\nMM-dd', eS],
    ['hh:mm\nMM-dd', 2 * eS],
    ['hh:mm\nMM-dd', 6 * eS],
    ['hh:mm\nMM-dd', 12 * eS],
    ['MM-dd\nyyyy', iS],
    ['MM-dd\nyyyy', 2 * iS],
    ['MM-dd\nyyyy', 3 * iS],
    ['MM-dd\nyyyy', 4 * iS],
    ['MM-dd\nyyyy', 5 * iS],
    ['MM-dd\nyyyy', 6 * iS],
    ['week', 7 * iS],
    ['MM-dd\nyyyy', 10 * iS],
    ['week', 14 * iS],
    ['week', 21 * iS],
    ['month', 31 * iS],
    ['week', 42 * iS],
    ['month', 62 * iS],
    ['week', 70 * iS],
    ['quarter', 95 * iS],
    ['month', 31 * iS * 4],
    ['month', 31 * iS * 5],
    ['half-year', (380 * iS) / 2],
    ['month', 31 * iS * 8],
    ['month', 31 * iS * 10],
    ['year', 380 * iS],
  ];
  rS.create = function (t) {
    return new rS({ useUTC: t.ecModel.get('useUTC') });
  };
  var oS = eh.prototype,
    sS = Xb.prototype,
    lS = co,
    uS = lo,
    hS = Math.floor,
    cS = Math.ceil,
    dS = Math.pow,
    fS = Math.log,
    pS = eh.extend({
      type: 'log',
      base: 10,
      $constructor: function () {
        eh.apply(this, arguments), (this._originalScale = new Xb());
      },
      getTicks: function () {
        var t = this._originalScale,
          e = this._extent,
          i = t.getExtent();
        return p(
          sS.getTicks.call(this),
          function (n) {
            var r = lo(dS(this.base, n));
            return (r = n === e[0] && t.__fixMin ? xh(r, i[0]) : r), (r = n === e[1] && t.__fixMax ? xh(r, i[1]) : r);
          },
          this,
        );
      },
      getLabel: sS.getLabel,
      scale: function (t) {
        return (t = oS.scale.call(this, t)), dS(this.base, t);
      },
      setExtent: function (t, e) {
        var i = this.base;
        (t = fS(t) / fS(i)), (e = fS(e) / fS(i)), sS.setExtent.call(this, t, e);
      },
      getExtent: function () {
        var t = this.base,
          e = oS.getExtent.call(this);
        (e[0] = dS(t, e[0])), (e[1] = dS(t, e[1]));
        var i = this._originalScale,
          n = i.getExtent();
        return i.__fixMin && (e[0] = xh(e[0], n[0])), i.__fixMax && (e[1] = xh(e[1], n[1])), e;
      },
      unionExtent: function (t) {
        this._originalScale.unionExtent(t);
        var e = this.base;
        (t[0] = fS(t[0]) / fS(e)), (t[1] = fS(t[1]) / fS(e)), oS.unionExtent.call(this, t);
      },
      unionExtentFromData: function (t, e) {
        this.unionExtent(t.getApproximateExtent(e));
      },
      niceTicks: function (t) {
        t = t || 10;
        var e = this._extent,
          i = e[1] - e[0];
        if (!(1 / 0 === i || 0 >= i)) {
          var n = yo(i),
            r = (t / i) * n;
          for (0.5 >= r && (n *= 10); !isNaN(n) && Math.abs(n) < 1 && Math.abs(n) > 0; ) n *= 10;
          var a = [lo(cS(e[0] / n) * n), lo(hS(e[1] / n) * n)];
          (this._interval = n), (this._niceExtent = a);
        }
      },
      niceExtent: function (t) {
        sS.niceExtent.call(this, t);
        var e = this._originalScale;
        (e.__fixMin = t.fixMin), (e.__fixMax = t.fixMax);
      },
    });
  f(['contain', 'normalize'], function (t) {
    pS.prototype[t] = function (e) {
      return (e = fS(e) / fS(this.base)), oS[t].call(this, e);
    };
  }),
    (pS.create = function () {
      return new pS();
    });
  var gS = {
      getMin: function (t) {
        var e = this.option,
          i = t || null == e.rangeStart ? e.min : e.rangeStart;
        return (
          this.axis &&
            null != i &&
            'dataMin' !== i &&
            'function' != typeof i &&
            !T(i) &&
            (i = this.axis.scale.parse(i)),
          i
        );
      },
      getMax: function (t) {
        var e = this.option,
          i = t || null == e.rangeEnd ? e.max : e.rangeEnd;
        return (
          this.axis &&
            null != i &&
            'dataMax' !== i &&
            'function' != typeof i &&
            !T(i) &&
            (i = this.axis.scale.parse(i)),
          i
        );
      },
      getNeedCrossZero: function () {
        var t = this.option;
        return null != t.rangeStart || null != t.rangeEnd ? !1 : !t.scale;
      },
      getCoordSysModel: G,
      setRange: function (t, e) {
        (this.option.rangeStart = t), (this.option.rangeEnd = e);
      },
      resetRange: function () {
        this.option.rangeStart = this.option.rangeEnd = null;
      },
    },
    mS = ea({
      type: 'triangle',
      shape: { cx: 0, cy: 0, width: 0, height: 0 },
      buildPath: function (t, e) {
        var i = e.cx,
          n = e.cy,
          r = e.width / 2,
          a = e.height / 2;
        t.moveTo(i, n - a), t.lineTo(i + r, n + a), t.lineTo(i - r, n + a), t.closePath();
      },
    }),
    vS = ea({
      type: 'diamond',
      shape: { cx: 0, cy: 0, width: 0, height: 0 },
      buildPath: function (t, e) {
        var i = e.cx,
          n = e.cy,
          r = e.width / 2,
          a = e.height / 2;
        t.moveTo(i, n - a), t.lineTo(i + r, n), t.lineTo(i, n + a), t.lineTo(i - r, n), t.closePath();
      },
    }),
    yS = ea({
      type: 'pin',
      shape: { x: 0, y: 0, width: 0, height: 0 },
      buildPath: function (t, e) {
        var i = e.x,
          n = e.y,
          r = (e.width / 5) * 3,
          a = Math.max(r, e.height),
          o = r / 2,
          s = (o * o) / (a - o),
          l = n - a + o + s,
          u = Math.asin(s / o),
          h = Math.cos(u) * o,
          c = Math.sin(u),
          d = Math.cos(u),
          f = 0.6 * o,
          p = 0.7 * o;
        t.moveTo(i - h, l + s),
          t.arc(i, l, o, Math.PI - u, 2 * Math.PI + u),
          t.bezierCurveTo(i + h - c * f, l + s + d * f, i, n - p, i, n),
          t.bezierCurveTo(i, n - p, i - h + c * f, l + s + d * f, i - h, l + s),
          t.closePath();
      },
    }),
    _S = ea({
      type: 'arrow',
      shape: { x: 0, y: 0, width: 0, height: 0 },
      buildPath: function (t, e) {
        var i = e.height,
          n = e.width,
          r = e.x,
          a = e.y,
          o = (n / 3) * 2;
        t.moveTo(r, a),
          t.lineTo(r + o, a + i),
          t.lineTo(r, a + (i / 4) * 3),
          t.lineTo(r - o, a + i),
          t.lineTo(r, a),
          t.closePath();
      },
    }),
    xS = { line: v_, rect: g_, roundRect: g_, square: g_, circle: r_, diamond: vS, pin: yS, arrow: _S, triangle: mS },
    wS = {
      line: function (t, e, i, n, r) {
        (r.x1 = t), (r.y1 = e + n / 2), (r.x2 = t + i), (r.y2 = e + n / 2);
      },
      rect: function (t, e, i, n, r) {
        (r.x = t), (r.y = e), (r.width = i), (r.height = n);
      },
      roundRect: function (t, e, i, n, r) {
        (r.x = t), (r.y = e), (r.width = i), (r.height = n), (r.r = Math.min(i, n) / 4);
      },
      square: function (t, e, i, n, r) {
        var a = Math.min(i, n);
        (r.x = t), (r.y = e), (r.width = a), (r.height = a);
      },
      circle: function (t, e, i, n, r) {
        (r.cx = t + i / 2), (r.cy = e + n / 2), (r.r = Math.min(i, n) / 2);
      },
      diamond: function (t, e, i, n, r) {
        (r.cx = t + i / 2), (r.cy = e + n / 2), (r.width = i), (r.height = n);
      },
      pin: function (t, e, i, n, r) {
        (r.x = t + i / 2), (r.y = e + n / 2), (r.width = i), (r.height = n);
      },
      arrow: function (t, e, i, n, r) {
        (r.x = t + i / 2), (r.y = e + n / 2), (r.width = i), (r.height = n);
      },
      triangle: function (t, e, i, n, r) {
        (r.cx = t + i / 2), (r.cy = e + n / 2), (r.width = i), (r.height = n);
      },
    },
    bS = {};
  f(xS, function (t, e) {
    bS[e] = new t();
  });
  var SS = ea({
      type: 'symbol',
      shape: { symbolType: '', x: 0, y: 0, width: 0, height: 0 },
      calculateTextPosition: function (t, e, i) {
        var n = Xi(t, e, i),
          r = this.shape;
        return r && 'pin' === r.symbolType && 'inside' === e.textPosition && (n.y = i.y + 0.4 * i.height), n;
      },
      buildPath: function (t, e, i) {
        var n = e.symbolType;
        if ('none' !== n) {
          var r = bS[n];
          r || ((n = 'rect'), (r = bS[n])), wS[n](e.x, e.y, e.width, e.height, r.shape), r.buildPath(t, r.shape, i);
        }
      },
    }),
    MS = { isDimensionStacked: Ku, enableDataStack: qu, getStackedDimension: $u },
    IS = (Object.freeze || Object)({
      createList: zh,
      getLayoutRect: Ro,
      dataStack: MS,
      createScale: Eh,
      mixinAxisModelCommonMethods: Rh,
      completeDimensions: Yu,
      createDimensions: Fb,
      createSymbol: Oh,
    }),
    CS = 1e-8;
  Fh.prototype = {
    constructor: Fh,
    properties: null,
    getBoundingRect: function () {
      var t = this._rect;
      if (t) return t;
      for (
        var e = Number.MAX_VALUE, i = [e, e], n = [-e, -e], r = [], a = [], o = this.geometries, s = 0;
        s < o.length;
        s++
      )
        if ('polygon' === o[s].type) {
          var l = o[s].exterior;
          br(l, r, a), oe(i, i, r), se(n, n, a);
        }
      return 0 === s && (i[0] = i[1] = n[0] = n[1] = 0), (this._rect = new wi(i[0], i[1], n[0] - i[0], n[1] - i[1]));
    },
    contain: function (t) {
      var e = this.getBoundingRect(),
        i = this.geometries;
      if (!e.contain(t[0], t[1])) return !1;
      t: for (var n = 0, r = i.length; r > n; n++)
        if ('polygon' === i[n].type) {
          var a = i[n].exterior,
            o = i[n].interiors;
          if (Nh(a, t[0], t[1])) {
            for (var s = 0; s < (o ? o.length : 0); s++) if (Nh(o[s])) continue t;
            return !0;
          }
        }
      return !1;
    },
    transformTo: function (t, e, i, n) {
      var r = this.getBoundingRect(),
        a = r.width / r.height;
      i ? n || (n = i / a) : (i = a * n);
      for (var o = new wi(t, e, i, n), s = r.calculateTransform(o), l = this.geometries, u = 0; u < l.length; u++)
        if ('polygon' === l[u].type) {
          for (var h = l[u].exterior, c = l[u].interiors, d = 0; d < h.length; d++) ae(h[d], h[d], s);
          for (var f = 0; f < (c ? c.length : 0); f++) for (var d = 0; d < c[f].length; d++) ae(c[f][d], c[f][d], s);
        }
      (r = this._rect), r.copy(o), (this.center = [r.x + r.width / 2, r.y + r.height / 2]);
    },
    cloneShallow: function (t) {
      null == t && (t = this.name);
      var e = new Fh(t, this.geometries, this.center);
      return (e._rect = this._rect), (e.transformTo = null), e;
    },
  };
  var TS = function (t) {
      return (
        Gh(t),
        p(
          m(t.features, function (t) {
            return t.geometry && t.properties && t.geometry.coordinates.length > 0;
          }),
          function (t) {
            var e = t.properties,
              i = t.geometry,
              n = i.coordinates,
              r = [];
            'Polygon' === i.type && r.push({ type: 'polygon', exterior: n[0], interiors: n.slice(1) }),
              'MultiPolygon' === i.type &&
                f(n, function (t) {
                  t[0] && r.push({ type: 'polygon', exterior: t[0], interiors: t.slice(1) });
                });
            var a = new Fh(e.name, r, e.cp);
            return (a.properties = e), a;
          },
        )
      );
    },
    DS = qn(),
    AS = [0, 1],
    kS = function (t, e, i) {
      (this.dim = t), (this.scale = e), (this._extent = i || [0, 0]), (this.inverse = !1), (this.onBand = !1);
    };
  kS.prototype = {
    constructor: kS,
    contain: function (t) {
      var e = this._extent,
        i = Math.min(e[0], e[1]),
        n = Math.max(e[0], e[1]);
      return t >= i && n >= t;
    },
    containData: function (t) {
      return this.contain(this.dataToCoord(t));
    },
    getExtent: function () {
      return this._extent.slice();
    },
    getPixelPrecision: function (t) {
      return fo(t || this.scale.getExtent(), this._extent);
    },
    setExtent: function (t, e) {
      var i = this._extent;
      (i[0] = t), (i[1] = e);
    },
    dataToCoord: function (t, e) {
      var i = this._extent,
        n = this.scale;
      return (
        (t = n.normalize(t)),
        this.onBand && 'ordinal' === n.type && ((i = i.slice()), ic(i, n.count())),
        oo(t, AS, i, e)
      );
    },
    coordToData: function (t, e) {
      var i = this._extent,
        n = this.scale;
      this.onBand && 'ordinal' === n.type && ((i = i.slice()), ic(i, n.count()));
      var r = oo(t, i, AS, e);
      return this.scale.scale(r);
    },
    pointToData: function () {},
    getTicksCoords: function (t) {
      t = t || {};
      var e = t.tickModel || this.getTickModel(),
        i = Wh(this, e),
        n = i.ticks,
        r = p(
          n,
          function (t) {
            return { coord: this.dataToCoord(t), tickValue: t };
          },
          this,
        ),
        a = e.get('alignWithLabel');
      return nc(this, r, i.tickCategoryInterval, a, t.clamp), r;
    },
    getViewLabels: function () {
      return Hh(this).labels;
    },
    getLabelModel: function () {
      return this.model.getModel('axisLabel');
    },
    getTickModel: function () {
      return this.model.getModel('axisTick');
    },
    getBandWidth: function () {
      var t = this._extent,
        e = this.scale.getExtent(),
        i = e[1] - e[0] + (this.onBand ? 1 : 0);
      0 === i && (i = 1);
      var n = Math.abs(t[1] - t[0]);
      return Math.abs(n) / i;
    },
    isHorizontal: null,
    getRotate: null,
    calculateCategoryInterval: function () {
      return Jh(this);
    },
  };
  var PS = TS,
    LS = {};
  f(
    [
      'map',
      'each',
      'filter',
      'indexOf',
      'inherits',
      'reduce',
      'filter',
      'bind',
      'curry',
      'isArray',
      'isString',
      'isObject',
      'isFunction',
      'extend',
      'defaults',
      'clone',
      'merge',
    ],
    function (t) {
      LS[t] = Ug[t];
    },
  );
  var OS = {};
  f(
    [
      'extendShape',
      'extendPath',
      'makePath',
      'makeImage',
      'mergePath',
      'resizePath',
      'createIcon',
      'setHoverStyle',
      'setLabelStyle',
      'setTextStyle',
      'setText',
      'getFont',
      'updateProps',
      'initProps',
      'getTransform',
      'clipPointsByRect',
      'clipRectByRect',
      'registerShape',
      'getShapeClass',
      'Group',
      'Image',
      'Text',
      'Circle',
      'Sector',
      'Ring',
      'Polygon',
      'Polyline',
      'Rect',
      'Line',
      'BezierCurve',
      'Arc',
      'IncrementalDisplayable',
      'CompoundPath',
      'LinearGradient',
      'RadialGradient',
      'BoundingRect',
    ],
    function (t) {
      OS[t] = G_[t];
    },
  );
  var zS = function (t) {
    (this._axes = {}), (this._dimList = []), (this.name = t || '');
  };
  (zS.prototype = {
    constructor: zS,
    type: 'cartesian',
    getAxis: function (t) {
      return this._axes[t];
    },
    getAxes: function () {
      return p(this._dimList, rc, this);
    },
    getAxesByScale: function (t) {
      return (
        (t = t.toLowerCase()),
        m(this.getAxes(), function (e) {
          return e.scale.type === t;
        })
      );
    },
    addAxis: function (t) {
      var e = t.dim;
      (this._axes[e] = t), this._dimList.push(e);
    },
    dataToCoord: function (t) {
      return this._dataCoordConvert(t, 'dataToCoord');
    },
    coordToData: function (t) {
      return this._dataCoordConvert(t, 'coordToData');
    },
    _dataCoordConvert: function (t, e) {
      for (var i = this._dimList, n = t instanceof Array ? [] : {}, r = 0; r < i.length; r++) {
        var a = i[r],
          o = this._axes[a];
        n[a] = o[e](t[a]);
      }
      return n;
    },
  }),
    (ac.prototype = {
      constructor: ac,
      type: 'cartesian2d',
      dimensions: ['x', 'y'],
      getBaseAxis: function () {
        return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');
      },
      containPoint: function (t) {
        var e = this.getAxis('x'),
          i = this.getAxis('y');
        return e.contain(e.toLocalCoord(t[0])) && i.contain(i.toLocalCoord(t[1]));
      },
      containData: function (t) {
        return this.getAxis('x').containData(t[0]) && this.getAxis('y').containData(t[1]);
      },
      dataToPoint: function (t, e, i) {
        var n = this.getAxis('x'),
          r = this.getAxis('y');
        return (
          (i = i || []), (i[0] = n.toGlobalCoord(n.dataToCoord(t[0]))), (i[1] = r.toGlobalCoord(r.dataToCoord(t[1]))), i
        );
      },
      clampData: function (t, e) {
        var i = this.getAxis('x').scale,
          n = this.getAxis('y').scale,
          r = i.getExtent(),
          a = n.getExtent(),
          o = i.parse(t[0]),
          s = n.parse(t[1]);
        return (
          (e = e || []),
          (e[0] = Math.min(Math.max(Math.min(r[0], r[1]), o), Math.max(r[0], r[1]))),
          (e[1] = Math.min(Math.max(Math.min(a[0], a[1]), s), Math.max(a[0], a[1]))),
          e
        );
      },
      pointToData: function (t, e) {
        var i = this.getAxis('x'),
          n = this.getAxis('y');
        return (
          (e = e || []), (e[0] = i.coordToData(i.toLocalCoord(t[0]))), (e[1] = n.coordToData(n.toLocalCoord(t[1]))), e
        );
      },
      getOtherAxis: function (t) {
        return this.getAxis('x' === t.dim ? 'y' : 'x');
      },
      getArea: function () {
        var t = this.getAxis('x').getGlobalExtent(),
          e = this.getAxis('y').getGlobalExtent(),
          i = Math.min(t[0], t[1]),
          n = Math.min(e[0], e[1]),
          r = Math.max(t[0], t[1]) - i,
          a = Math.max(e[0], e[1]) - n,
          o = new wi(i, n, r, a);
        return o;
      },
    }),
    h(ac, zS);
  var ES = function (t, e, i, n, r) {
    kS.call(this, t, e, i), (this.type = n || 'value'), (this.position = r || 'bottom');
  };
  (ES.prototype = {
    constructor: ES,
    index: 0,
    getAxesOnZeroOf: null,
    model: null,
    isHorizontal: function () {
      var t = this.position;
      return 'top' === t || 'bottom' === t;
    },
    getGlobalExtent: function (t) {
      var e = this.getExtent();
      return (e[0] = this.toGlobalCoord(e[0])), (e[1] = this.toGlobalCoord(e[1])), t && e[0] > e[1] && e.reverse(), e;
    },
    getOtherAxis: function () {
      this.grid.getOtherAxis();
    },
    pointToData: function (t, e) {
      return this.coordToData(this.toLocalCoord(t['x' === this.dim ? 0 : 1]), e);
    },
    toLocalCoord: null,
    toGlobalCoord: null,
  }),
    h(ES, kS);
  var RS = {
      show: !0,
      zlevel: 0,
      z: 0,
      inverse: !1,
      name: '',
      nameLocation: 'end',
      nameRotate: null,
      nameTruncate: { maxWidth: null, ellipsis: '...', placeholder: '.' },
      nameTextStyle: {},
      nameGap: 15,
      silent: !1,
      triggerEvent: !1,
      tooltip: { show: !1 },
      axisPointer: {},
      axisLine: {
        show: !0,
        onZero: !0,
        onZeroAxisIndex: null,
        lineStyle: { color: '#333', width: 1, type: 'solid' },
        symbol: ['none', 'none'],
        symbolSize: [10, 15],
      },
      axisTick: { show: !0, inside: !1, length: 5, lineStyle: { width: 1 } },
      axisLabel: { show: !0, inside: !1, rotate: 0, showMinLabel: null, showMaxLabel: null, margin: 8, fontSize: 12 },
      splitLine: { show: !0, lineStyle: { color: ['#ccc'], width: 1, type: 'solid' } },
      splitArea: { show: !1, areaStyle: { color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)'] } },
    },
    BS = {};
  (BS.categoryAxis = r(
    {
      boundaryGap: !0,
      deduplication: null,
      splitLine: { show: !1 },
      axisTick: { alignWithLabel: !1, interval: 'auto' },
      axisLabel: { interval: 'auto' },
    },
    RS,
  )),
    (BS.valueAxis = r({ boundaryGap: [0, 0], splitNumber: 5 }, RS)),
    (BS.timeAxis = s({ scale: !0, min: 'dataMin', max: 'dataMax' }, BS.valueAxis)),
    (BS.logAxis = s({ scale: !0, logBase: 10 }, BS.valueAxis));
  var NS = ['value', 'category', 'time', 'log'],
    FS = function (t, e, i, n) {
      f(NS, function (o) {
        e.extend({
          type: t + 'Axis.' + o,
          mergeDefaultAndTheme: function (e, n) {
            var a = this.layoutMode,
              s = a ? No(e) : {},
              l = n.getTheme();
            r(e, l.get(o + 'Axis')), r(e, this.getDefaultOption()), (e.type = i(t, e)), a && Bo(e, s, a);
          },
          optionUpdated: function () {
            var t = this.option;
            'category' === t.type && (this.__ordinalMeta = ih.createByAxisModel(this));
          },
          getCategories: function (t) {
            var e = this.option;
            return 'category' === e.type ? (t ? e.data : this.__ordinalMeta.categories) : void 0;
          },
          getOrdinalMeta: function () {
            return this.__ordinalMeta;
          },
          defaultOption: a([{}, BS[o + 'Axis'], n], !0),
        });
      }),
        cx.registerSubTypeDefaulter(t + 'Axis', _(i, t));
    },
    GS = cx.extend({
      type: 'cartesian2dAxis',
      axis: null,
      init: function () {
        GS.superApply(this, 'init', arguments), this.resetRange();
      },
      mergeOption: function () {
        GS.superApply(this, 'mergeOption', arguments), this.resetRange();
      },
      restoreData: function () {
        GS.superApply(this, 'restoreData', arguments), this.resetRange();
      },
      getCoordSysModel: function () {
        return this.ecModel.queryComponents({
          mainType: 'grid',
          index: this.option.gridIndex,
          id: this.option.gridId,
        })[0];
      },
    });
  r(GS.prototype, gS);
  var VS = { offset: 0 };
  FS('x', GS, oc, VS),
    FS('y', GS, oc, VS),
    cx.extend({
      type: 'grid',
      dependencies: ['xAxis', 'yAxis'],
      layoutMode: 'box',
      coordinateSystem: null,
      defaultOption: {
        show: !1,
        zlevel: 0,
        z: 0,
        left: '10%',
        top: 60,
        right: '10%',
        bottom: 60,
        containLabel: !1,
        backgroundColor: 'rgba(0,0,0,0)',
        borderWidth: 1,
        borderColor: '#ccc',
      },
    });
  var HS = lc.prototype;
  (HS.type = 'grid'),
    (HS.axisPointerEnabled = !0),
    (HS.getRect = function () {
      return this._rect;
    }),
    (HS.update = function (t, e) {
      var i = this._axesMap;
      this._updateScale(t, this.model),
        f(i.x, function (t) {
          Sh(t.scale, t.model);
        }),
        f(i.y, function (t) {
          Sh(t.scale, t.model);
        });
      var n = {};
      f(i.x, function (t) {
        uc(i, 'y', t, n);
      }),
        f(i.y, function (t) {
          uc(i, 'x', t, n);
        }),
        this.resize(this.model, e);
    }),
    (HS.resize = function (t, e, i) {
      function n() {
        f(a, function (t) {
          var e = t.isHorizontal(),
            i = e ? [0, r.width] : [0, r.height],
            n = t.inverse ? 1 : 0;
          t.setExtent(i[n], i[1 - n]), cc(t, e ? r.x : r.y);
        });
      }
      var r = Ro(t.getBoxLayoutParams(), { width: e.getWidth(), height: e.getHeight() });
      this._rect = r;
      var a = this._axesList;
      n(),
        !i &&
          t.get('containLabel') &&
          (f(a, function (t) {
            if (!t.model.get('axisLabel.inside')) {
              var e = Dh(t);
              if (e) {
                var i = t.isHorizontal() ? 'height' : 'width',
                  n = t.model.get('axisLabel.margin');
                (r[i] -= e[i] + n),
                  'top' === t.position ? (r.y += e.height + n) : 'left' === t.position && (r.x += e.width + n);
              }
            }
          }),
          n());
    }),
    (HS.getAxis = function (t, e) {
      var i = this._axesMap[t];
      if (null != i) {
        if (null == e) for (var n in i) if (i.hasOwnProperty(n)) return i[n];
        return i[e];
      }
    }),
    (HS.getAxes = function () {
      return this._axesList.slice();
    }),
    (HS.getCartesian = function (t, e) {
      if (null != t && null != e) {
        var i = 'x' + t + 'y' + e;
        return this._coordsMap[i];
      }
      S(t) && ((e = t.yAxisIndex), (t = t.xAxisIndex));
      for (var n = 0, r = this._coordsList; n < r.length; n++)
        if (r[n].getAxis('x').index === t || r[n].getAxis('y').index === e) return r[n];
    }),
    (HS.getCartesians = function () {
      return this._coordsList.slice();
    }),
    (HS.convertToPixel = function (t, e, i) {
      var n = this._findConvertTarget(t, e);
      return n.cartesian ? n.cartesian.dataToPoint(i) : n.axis ? n.axis.toGlobalCoord(n.axis.dataToCoord(i)) : null;
    }),
    (HS.convertFromPixel = function (t, e, i) {
      var n = this._findConvertTarget(t, e);
      return n.cartesian ? n.cartesian.pointToData(i) : n.axis ? n.axis.coordToData(n.axis.toLocalCoord(i)) : null;
    }),
    (HS._findConvertTarget = function (t, e) {
      var i,
        n,
        r = e.seriesModel,
        a = e.xAxisModel || (r && r.getReferringComponents('xAxis')[0]),
        o = e.yAxisModel || (r && r.getReferringComponents('yAxis')[0]),
        s = e.gridModel,
        l = this._coordsList;
      if (r) (i = r.coordinateSystem), u(l, i) < 0 && (i = null);
      else if (a && o) i = this.getCartesian(a.componentIndex, o.componentIndex);
      else if (a) n = this.getAxis('x', a.componentIndex);
      else if (o) n = this.getAxis('y', o.componentIndex);
      else if (s) {
        var h = s.coordinateSystem;
        h === this && (i = this._coordsList[0]);
      }
      return { cartesian: i, axis: n };
    }),
    (HS.containPoint = function (t) {
      var e = this._coordsList[0];
      return e ? e.containPoint(t) : void 0;
    }),
    (HS._initCartesian = function (t, e) {
      function i(i) {
        return function (o, s) {
          if (sc(o, t, e)) {
            var l = o.get('position');
            'x' === i
              ? 'top' !== l && 'bottom' !== l && (l = n.bottom ? 'top' : 'bottom')
              : 'left' !== l && 'right' !== l && (l = n.left ? 'right' : 'left'),
              (n[l] = !0);
            var u = new ES(i, Mh(o), [0, 0], o.get('type'), l),
              h = 'category' === u.type;
            (u.onBand = h && o.get('boundaryGap')),
              (u.inverse = o.get('inverse')),
              (o.axis = u),
              (u.model = o),
              (u.grid = this),
              (u.index = s),
              this._axesList.push(u),
              (r[i][s] = u),
              a[i]++;
          }
        };
      }
      var n = { left: !1, right: !1, top: !1, bottom: !1 },
        r = { x: {}, y: {} },
        a = { x: 0, y: 0 };
      return (
        e.eachComponent('xAxis', i('x'), this),
        e.eachComponent('yAxis', i('y'), this),
        a.x && a.y
          ? ((this._axesMap = r),
            void f(
              r.x,
              function (e, i) {
                f(
                  r.y,
                  function (n, r) {
                    var a = 'x' + i + 'y' + r,
                      o = new ac(a);
                    (o.grid = this),
                      (o.model = t),
                      (this._coordsMap[a] = o),
                      this._coordsList.push(o),
                      o.addAxis(e),
                      o.addAxis(n);
                  },
                  this,
                );
              },
              this,
            ))
          : ((this._axesMap = {}), void (this._axesList = []))
      );
    }),
    (HS._updateScale = function (t, e) {
      function i(t, e) {
        f(t.mapDimension(e.dim, !0), function (i) {
          e.scale.unionExtentFromData(t, $u(t, i));
        });
      }
      f(this._axesList, function (t) {
        t.scale.setExtent(1 / 0, -1 / 0);
      }),
        t.eachSeries(function (n) {
          if (fc(n)) {
            var r = dc(n, t),
              a = r[0],
              o = r[1];
            if (!sc(a, e, t) || !sc(o, e, t)) return;
            var s = this.getCartesian(a.componentIndex, o.componentIndex),
              l = n.getData(),
              u = s.getAxis('x'),
              h = s.getAxis('y');
            'list' === l.type && (i(l, u, n), i(l, h, n));
          }
        }, this);
    }),
    (HS.getTooltipAxes = function (t) {
      var e = [],
        i = [];
      return (
        f(this.getCartesians(), function (n) {
          var r = null != t && 'auto' !== t ? n.getAxis(t) : n.getBaseAxis(),
            a = n.getOtherAxis(r);
          u(e, r) < 0 && e.push(r), u(i, a) < 0 && i.push(a);
        }),
        { baseAxes: e, otherAxes: i }
      );
    });
  var WS = ['xAxis', 'yAxis'];
  (lc.create = function (t, e) {
    var i = [];
    return (
      t.eachComponent('grid', function (n, r) {
        var a = new lc(n, t, e);
        (a.name = 'grid_' + r), a.resize(n, e, !0), (n.coordinateSystem = a), i.push(a);
      }),
      t.eachSeries(function (e) {
        if (fc(e)) {
          var i = dc(e, t),
            n = i[0],
            r = i[1],
            a = n.getCoordSysModel();
          if (Cg) {
            if (!a) throw new Error('Grid "' + D(n.get('gridIndex'), n.get('gridId'), 0) + '" not found');
            if (n.getCoordSysModel() !== r.getCoordSysModel())
              throw new Error('xAxis and yAxis must use the same grid');
          }
          var o = a.coordinateSystem;
          e.coordinateSystem = o.getCartesian(n.componentIndex, r.componentIndex);
        }
      }),
      i
    );
  }),
    (lc.dimensions = lc.prototype.dimensions = ac.prototype.dimensions),
    ds.register('cartesian2d', lc);
  var US = Qx.extend({
    type: 'series.__base_bar__',
    getInitialData: function () {
      return Ju(this.getSource(), this);
    },
    getMarkerPosition: function (t) {
      var e = this.coordinateSystem;
      if (e) {
        var i = e.dataToPoint(e.clampData(t)),
          n = this.getData(),
          r = n.getLayout('offset'),
          a = n.getLayout('size'),
          o = e.getBaseAxis().isHorizontal() ? 0 : 1;
        return (i[o] += r + a / 2), i;
      }
      return [0 / 0, 0 / 0];
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      coordinateSystem: 'cartesian2d',
      legendHoverLink: !0,
      barMinHeight: 0,
      barMinAngle: 0,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: 'mod',
      itemStyle: {},
      emphasis: {},
    },
  });
  US.extend({
    type: 'series.bar',
    dependencies: ['grid', 'polar'],
    brushSelector: 'rect',
    getProgressive: function () {
      return this.get('large') ? this.get('progressive') : !1;
    },
    getProgressiveThreshold: function () {
      var t = this.get('progressiveThreshold'),
        e = this.get('largeThreshold');
      return e > t && (t = e), t;
    },
    defaultOption: { clip: !0 },
  });
  var XS = Kv([
      ['fill', 'color'],
      ['stroke', 'borderColor'],
      ['lineWidth', 'borderWidth'],
      ['stroke', 'barBorderColor'],
      ['lineWidth', 'barBorderWidth'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
    ]),
    YS = {
      getBarItemStyle: function (t) {
        var e = XS(this, t);
        if (this.getBorderLineDash) {
          var i = this.getBorderLineDash();
          i && (e.lineDash = i);
        }
        return e;
      },
    },
    ZS = ['itemStyle', 'barBorderWidth'],
    jS = [0, 0];
  o(Qa.prototype, YS),
    wu({
      type: 'bar',
      render: function (t, e, i) {
        this._updateDrawMode(t);
        var n = t.get('coordinateSystem');
        return (
          'cartesian2d' === n || 'polar' === n
            ? this._isLargeDraw
              ? this._renderLarge(t, e, i)
              : this._renderNormal(t, e, i)
            : Cg && console.warn('Only cartesian2d and polar supported for bar.'),
          this.group
        );
      },
      incrementalPrepareRender: function (t) {
        this._clear(), this._updateDrawMode(t);
      },
      incrementalRender: function (t, e) {
        this._incrementalRenderLarge(t, e);
      },
      _updateDrawMode: function (t) {
        var e = t.pipelineContext.large;
        (null == this._isLargeDraw || e ^ this._isLargeDraw) && ((this._isLargeDraw = e), this._clear());
      },
      _renderNormal: function (t) {
        var e,
          i = this.group,
          n = t.getData(),
          r = this._data,
          a = t.coordinateSystem,
          o = a.getBaseAxis();
        'cartesian2d' === a.type ? (e = o.isHorizontal()) : 'polar' === a.type && (e = 'angle' === o.dim);
        var s = t.isAnimationEnabled() ? t : null,
          l = t.get('clip', !0),
          u = xc(a, n);
        i.removeClipPath(),
          n
            .diff(r)
            .add(function (r) {
              if (n.hasValue(r)) {
                var o = n.getItemModel(r),
                  h = QS[a.type](n, r, o);
                if (l) {
                  var c = $S[a.type](u, h);
                  if (c) return void i.remove(d);
                }
                var d = JS[a.type](n, r, o, h, e, s);
                n.setItemGraphicEl(r, d), i.add(d), Sc(d, n, r, o, h, t, e, 'polar' === a.type);
              }
            })
            .update(function (o, h) {
              var c = r.getItemGraphicEl(h);
              if (!n.hasValue(o)) return void i.remove(c);
              var d = n.getItemModel(o),
                f = QS[a.type](n, o, d);
              if (l) {
                var p = $S[a.type](u, f);
                if (p) return void i.remove(c);
              }
              c ? Ga(c, { shape: f }, s, o) : (c = JS[a.type](n, o, d, f, e, s, !0)),
                n.setItemGraphicEl(o, c),
                i.add(c),
                Sc(c, n, o, d, f, t, e, 'polar' === a.type);
            })
            .remove(function (t) {
              var e = r.getItemGraphicEl(t);
              'cartesian2d' === a.type ? e && wc(t, s, e) : e && bc(t, s, e);
            })
            .execute(),
          (this._data = n);
      },
      _renderLarge: function (t) {
        this._clear(), Ic(t, this.group);
        var e = t.get('clip', !0) ? _c(t.coordinateSystem, !1, t) : null;
        e ? this.group.setClipPath(e) : this.group.removeClipPath();
      },
      _incrementalRenderLarge: function (t, e) {
        Ic(e, this.group, !0);
      },
      dispose: G,
      remove: function (t) {
        this._clear(t);
      },
      _clear: function (t) {
        var e = this.group,
          i = this._data;
        t && t.get('animation') && i && !this._isLargeDraw
          ? i.eachItemGraphicEl(function (e) {
              'sector' === e.type ? bc(e.dataIndex, t, e) : wc(e.dataIndex, t, e);
            })
          : e.removeAll(),
          (this._data = null);
      },
    });
  var qS = Math.max,
    KS = Math.min,
    $S = {
      cartesian2d: function (t, e) {
        var i = e.width < 0 ? -1 : 1,
          n = e.height < 0 ? -1 : 1;
        0 > i && ((e.x += e.width), (e.width = -e.width)), 0 > n && ((e.y += e.height), (e.height = -e.height));
        var r = qS(e.x, t.x),
          a = KS(e.x + e.width, t.x + t.width),
          o = qS(e.y, t.y),
          s = KS(e.y + e.height, t.y + t.height);
        (e.x = r), (e.y = o), (e.width = a - r), (e.height = s - o);
        var l = e.width < 0 || e.height < 0;
        return (
          0 > i && ((e.x += e.width), (e.width = -e.width)), 0 > n && ((e.y += e.height), (e.height = -e.height)), l
        );
      },
      polar: function () {
        return !1;
      },
    },
    JS = {
      cartesian2d: function (t, e, i, n, r, a, s) {
        var l = new g_({ shape: o({}, n) });
        if (a) {
          var u = l.shape,
            h = r ? 'height' : 'width',
            c = {};
          (u[h] = 0), (c[h] = n[h]), G_[s ? 'updateProps' : 'initProps'](l, { shape: c }, a, e);
        }
        return l;
      },
      polar: function (t, e, i, n, r, a, o) {
        var l = n.startAngle < n.endAngle,
          u = new s_({ shape: s({ clockwise: l }, n) });
        if (a) {
          var h = u.shape,
            c = r ? 'r' : 'endAngle',
            d = {};
          (h[c] = r ? 0 : n.startAngle), (d[c] = n[c]), G_[o ? 'updateProps' : 'initProps'](u, { shape: d }, a, e);
        }
        return u;
      },
    },
    QS = {
      cartesian2d: function (t, e, i) {
        var n = t.getItemLayout(e),
          r = Mc(i, n),
          a = n.width > 0 ? 1 : -1,
          o = n.height > 0 ? 1 : -1;
        return { x: n.x + (a * r) / 2, y: n.y + (o * r) / 2, width: n.width - a * r, height: n.height - o * r };
      },
      polar: function (t, e) {
        var i = t.getItemLayout(e);
        return { cx: i.cx, cy: i.cy, r0: i.r0, r: i.r, startAngle: i.startAngle, endAngle: i.endAngle };
      },
    },
    tM = Vr.extend({
      type: 'largeBar',
      shape: { points: [] },
      buildPath: function (t, e) {
        for (var i = e.points, n = this.__startPoint, r = this.__baseDimIdx, a = 0; a < i.length; a += 2)
          (n[r] = i[a + r]), t.moveTo(n[0], n[1]), t.lineTo(i[a], i[a + 1]);
      },
    }),
    eM = nl(
      function (t) {
        var e = this,
          i = Cc(e, t.offsetX, t.offsetY);
        e.dataIndex = i >= 0 ? i : null;
      },
      30,
      !1,
    ),
    iM = Math.PI,
    nM = function (t, e) {
      (this.opt = e),
        (this.axisModel = t),
        s(e, { labelOffset: 0, nameDirection: 1, tickDirection: 1, labelDirection: 1, silent: !0 }),
        (this.group = new Wm());
      var i = new Wm({ position: e.position.slice(), rotation: e.rotation });
      i.updateTransform(), (this._transform = i.transform), (this._dumbGroup = i);
    };
  nM.prototype = {
    constructor: nM,
    hasBuilder: function (t) {
      return !!rM[t];
    },
    add: function (t) {
      rM[t].call(this);
    },
    getGroup: function () {
      return this.group;
    },
  };
  var rM = {
      axisLine: function () {
        var t = this.opt,
          e = this.axisModel;
        if (e.get('axisLine.show')) {
          var i = this.axisModel.axis.getExtent(),
            n = this._transform,
            r = [i[0], 0],
            a = [i[1], 0];
          n && (ae(r, r, n), ae(a, a, n));
          var s = o({ lineCap: 'round' }, e.getModel('axisLine.lineStyle').getLineStyle());
          this.group.add(
            new v_({
              anid: 'line',
              subPixelOptimize: !0,
              shape: { x1: r[0], y1: r[1], x2: a[0], y2: a[1] },
              style: s,
              strokeContainThreshold: t.strokeContainThreshold || 5,
              silent: !0,
              z2: 1,
            }),
          );
          var l = e.get('axisLine.symbol'),
            u = e.get('axisLine.symbolSize'),
            h = e.get('axisLine.symbolOffset') || 0;
          if (('number' == typeof h && (h = [h, h]), null != l)) {
            'string' == typeof l && (l = [l, l]), ('string' == typeof u || 'number' == typeof u) && (u = [u, u]);
            var c = u[0],
              d = u[1];
            f(
              [
                { rotate: t.rotation + Math.PI / 2, offset: h[0], r: 0 },
                {
                  rotate: t.rotation - Math.PI / 2,
                  offset: h[1],
                  r: Math.sqrt((r[0] - a[0]) * (r[0] - a[0]) + (r[1] - a[1]) * (r[1] - a[1])),
                },
              ],
              function (e, i) {
                if ('none' !== l[i] && null != l[i]) {
                  var n = Oh(l[i], -c / 2, -d / 2, c, d, s.stroke, !0),
                    a = e.r + e.offset,
                    o = [r[0] + a * Math.cos(t.rotation), r[1] - a * Math.sin(t.rotation)];
                  n.attr({ rotation: e.rotate, position: o, silent: !0, z2: 11 }), this.group.add(n);
                }
              },
              this,
            );
          }
        }
      },
      axisTickLabel: function () {
        var t = this.axisModel,
          e = this.opt,
          i = Oc(this, t, e),
          n = zc(this, t, e);
        Ac(t, n, i);
      },
      axisName: function () {
        var t = this.opt,
          e = this.axisModel,
          i = D(t.axisName, e.get('name'));
        if (i) {
          var n,
            r = e.get('nameLocation'),
            a = t.nameDirection,
            s = e.getModel('nameTextStyle'),
            l = e.get('nameGap') || 0,
            u = this.axisModel.axis.getExtent(),
            h = u[0] > u[1] ? -1 : 1,
            c = [
              'start' === r ? u[0] - h * l : 'end' === r ? u[1] + h * l : (u[0] + u[1]) / 2,
              Lc(r) ? t.labelOffset + a * l : 0,
            ],
            d = e.get('nameRotate');
          null != d && (d = (d * iM) / 180);
          var f;
          Lc(r)
            ? (n = oM(t.rotation, null != d ? d : t.rotation, a))
            : ((n = Dc(t, r, d || 0, u)),
              (f = t.axisNameAvailableWidth),
              null != f && ((f = Math.abs(f / Math.sin(n.rotation))), !isFinite(f) && (f = null)));
          var p = s.getFont(),
            g = e.get('nameTruncate', !0) || {},
            m = g.ellipsis,
            v = D(t.nameTruncateMaxWidth, g.maxWidth, f),
            y = null != m && null != v ? nx(i, v, p, m, { minChar: 2, placeholder: g.placeholder }) : i,
            _ = e.get('tooltip', !0),
            x = e.mainType,
            w = { componentType: x, name: i, $vars: ['name'] };
          w[x + 'Index'] = e.componentIndex;
          var b = new n_({
            anid: 'name',
            __fullText: i,
            __truncatedText: y,
            position: c,
            rotation: n.rotation,
            silent: sM(e),
            z2: 1,
            tooltip:
              _ && _.show
                ? o(
                    {
                      content: i,
                      formatter: function () {
                        return i;
                      },
                      formatterParams: w,
                    },
                    _,
                  )
                : null,
          });
          ka(b.style, s, {
            text: y,
            textFont: p,
            textFill: s.getTextColor() || e.get('axisLine.lineStyle.color'),
            textAlign: s.get('align') || n.textAlign,
            textVerticalAlign: s.get('verticalAlign') || n.textVerticalAlign,
          }),
            e.get('triggerEvent') &&
              ((b.eventData = aM(e)), (b.eventData.targetType = 'axisName'), (b.eventData.name = i)),
            this._dumbGroup.add(b),
            b.updateTransform(),
            this.group.add(b),
            b.decomposeTransform();
        }
      },
    },
    aM = (nM.makeAxisEventDataBase = function (t) {
      var e = { componentType: t.mainType, componentIndex: t.componentIndex };
      return (e[t.mainType + 'Index'] = t.componentIndex), e;
    }),
    oM = (nM.innerTextLayout = function (t, e, i) {
      var n,
        r,
        a = go(e - t);
      return (
        mo(a)
          ? ((r = i > 0 ? 'top' : 'bottom'), (n = 'center'))
          : mo(a - iM)
          ? ((r = i > 0 ? 'bottom' : 'top'), (n = 'center'))
          : ((r = 'middle'), (n = a > 0 && iM > a ? (i > 0 ? 'right' : 'left') : i > 0 ? 'left' : 'right')),
        { rotation: a, textAlign: n, textVerticalAlign: r }
      );
    }),
    sM = (nM.isLabelSilent = function (t) {
      var e = t.get('tooltip');
      return t.get('silent') || !(t.get('triggerEvent') || (e && e.show));
    }),
    lM = f,
    uM = _,
    hM = _u({
      type: 'axis',
      _axisPointer: null,
      axisPointerClass: null,
      render: function (t, e, i, n) {
        this.axisPointerClass && Vc(t), hM.superApply(this, 'render', arguments), Yc(this, t, e, i, n, !0);
      },
      updateAxisPointer: function (t, e, i, n) {
        Yc(this, t, e, i, n, !1);
      },
      remove: function (t, e) {
        var i = this._axisPointer;
        i && i.remove(e), hM.superApply(this, 'remove', arguments);
      },
      dispose: function (t, e) {
        Zc(this, e), hM.superApply(this, 'dispose', arguments);
      },
    }),
    cM = [];
  (hM.registerAxisPointerClass = function (t, e) {
    if (Cg && cM[t]) throw new Error('axisPointer ' + t + ' exists');
    cM[t] = e;
  }),
    (hM.getAxisPointerClass = function (t) {
      return t && cM[t];
    });
  var dM = ['axisLine', 'axisTickLabel', 'axisName'],
    fM = ['splitArea', 'splitLine'],
    pM = hM.extend({
      type: 'cartesianAxis',
      axisPointerClass: 'CartesianAxisPointer',
      render: function (t, e, i, n) {
        this.group.removeAll();
        var r = this._axisGroup;
        if (((this._axisGroup = new Wm()), this.group.add(this._axisGroup), t.get('show'))) {
          var a = t.getCoordSysModel(),
            o = jc(a, t),
            s = new nM(t, o);
          f(dM, s.add, s),
            this._axisGroup.add(s.getGroup()),
            f(
              fM,
              function (e) {
                t.get(e + '.show') && this['_' + e](t, a);
              },
              this,
            ),
            Xa(r, this._axisGroup, t),
            pM.superCall(this, 'render', t, e, i, n);
        }
      },
      remove: function () {
        this._splitAreaColors = null;
      },
      _splitLine: function (t, e) {
        var i = t.axis;
        if (!i.scale.isBlank()) {
          var n = t.getModel('splitLine'),
            r = n.getModel('lineStyle'),
            a = r.get('color');
          a = x(a) ? a : [a];
          for (
            var o = e.coordinateSystem.getRect(),
              l = i.isHorizontal(),
              u = 0,
              h = i.getTicksCoords({ tickModel: n }),
              c = [],
              d = [],
              f = r.getLineStyle(),
              p = 0;
            p < h.length;
            p++
          ) {
            var g = i.toGlobalCoord(h[p].coord);
            l
              ? ((c[0] = g), (c[1] = o.y), (d[0] = g), (d[1] = o.y + o.height))
              : ((c[0] = o.x), (c[1] = g), (d[0] = o.x + o.width), (d[1] = g));
            var m = u++ % a.length,
              v = h[p].tickValue;
            this._axisGroup.add(
              new v_({
                anid: null != v ? 'line_' + h[p].tickValue : null,
                subPixelOptimize: !0,
                shape: { x1: c[0], y1: c[1], x2: d[0], y2: d[1] },
                style: s({ stroke: a[m] }, f),
                silent: !0,
              }),
            );
          }
        }
      },
      _splitArea: function (t, e) {
        var i = t.axis;
        if (!i.scale.isBlank()) {
          var n = t.getModel('splitArea'),
            r = n.getModel('areaStyle'),
            a = r.get('color'),
            o = e.coordinateSystem.getRect(),
            l = i.getTicksCoords({ tickModel: n, clamp: !0 });
          if (l.length) {
            var u = a.length,
              h = this._splitAreaColors,
              c = N(),
              d = 0;
            if (h)
              for (var f = 0; f < l.length; f++) {
                var p = h.get(l[f].tickValue);
                if (null != p) {
                  d = (p + (u - 1) * f) % u;
                  break;
                }
              }
            var g = i.toGlobalCoord(l[0].coord),
              m = r.getAreaStyle();
            a = x(a) ? a : [a];
            for (var f = 1; f < l.length; f++) {
              var v,
                y,
                _,
                w,
                b = i.toGlobalCoord(l[f].coord);
              i.isHorizontal()
                ? ((v = g), (y = o.y), (_ = b - v), (w = o.height), (g = v + _))
                : ((v = o.x), (y = g), (_ = o.width), (w = b - y), (g = y + w));
              var S = l[f - 1].tickValue;
              null != S && c.set(S, d),
                this._axisGroup.add(
                  new g_({
                    anid: null != S ? 'area_' + S : null,
                    shape: { x: v, y: y, width: _, height: w },
                    style: s({ fill: a[d] }, m),
                    silent: !0,
                  }),
                ),
                (d = (d + 1) % u);
            }
            this._splitAreaColors = c;
          }
        }
      },
    });
  pM.extend({ type: 'xAxis' }),
    pM.extend({ type: 'yAxis' }),
    _u({
      type: 'grid',
      render: function (t) {
        this.group.removeAll(),
          t.get('show') &&
            this.group.add(
              new g_({
                shape: t.coordinateSystem.getRect(),
                style: s({ fill: t.get('backgroundColor') }, t.getItemStyle()),
                silent: !0,
                z2: -1,
              }),
            );
      },
    }),
    lu(function (t) {
      t.xAxis && t.yAxis && !t.grid && (t.grid = {});
    }),
    pu(nb.VISUAL.LAYOUT, _(mh, 'bar')),
    pu(nb.VISUAL.PROGRESSIVE_LAYOUT, qb),
    gu({
      seriesType: 'bar',
      reset: function (t) {
        t.getData().setVisual('legendSymbol', 'roundRect');
      },
    }),
    Qx.extend({
      type: 'series.line',
      dependencies: ['grid', 'polar'],
      getInitialData: function (t) {
        if (Cg) {
          var e = t.coordinateSystem;
          if ('polar' !== e && 'cartesian2d' !== e)
            throw new Error('Line not support coordinateSystem besides cartesian and polar');
        }
        return Ju(this.getSource(), this);
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'cartesian2d',
        legendHoverLink: !0,
        hoverAnimation: !0,
        clip: !0,
        label: { position: 'top' },
        lineStyle: { width: 2, type: 'solid' },
        step: !1,
        smooth: !1,
        smoothMonotone: null,
        symbol: 'emptyCircle',
        symbolSize: 4,
        symbolRotate: null,
        showSymbol: !0,
        showAllSymbol: 'auto',
        connectNulls: !1,
        sampling: 'none',
        animationEasing: 'linear',
        progressive: 0,
        hoverLayerThreshold: 1 / 0,
      },
    });
  var gM = qc.prototype,
    mM = (qc.getSymbolSize = function (t, e) {
      var i = t.getItemVisual(e, 'symbolSize');
      return i instanceof Array ? i.slice() : [+i, +i];
    });
  (gM._createSymbol = function (t, e, i, n, r) {
    this.removeAll();
    var a = e.getItemVisual(i, 'color'),
      o = Oh(t, -1, -1, 2, 2, a, r);
    o.attr({ z2: 100, culling: !0, scale: Kc(n) }), (o.drift = $c), (this._symbolType = t), this.add(o);
  }),
    (gM.stopSymbolAnimation = function (t) {
      this.childAt(0).stopAnimation(t);
    }),
    (gM.getSymbolPath = function () {
      return this.childAt(0);
    }),
    (gM.getScale = function () {
      return this.childAt(0).scale;
    }),
    (gM.highlight = function () {
      this.childAt(0).trigger('emphasis');
    }),
    (gM.downplay = function () {
      this.childAt(0).trigger('normal');
    }),
    (gM.setZ = function (t, e) {
      var i = this.childAt(0);
      (i.zlevel = t), (i.z = e);
    }),
    (gM.setDraggable = function (t) {
      var e = this.childAt(0);
      (e.draggable = t), (e.cursor = t ? 'move' : e.cursor);
    }),
    (gM.updateData = function (t, e, i) {
      this.silent = !1;
      var n = t.getItemVisual(e, 'symbol') || 'circle',
        r = t.hostModel,
        a = mM(t, e),
        o = n !== this._symbolType;
      if (o) {
        var s = t.getItemVisual(e, 'symbolKeepAspect');
        this._createSymbol(n, t, e, a, s);
      } else {
        var l = this.childAt(0);
        (l.silent = !1), Ga(l, { scale: Kc(a) }, r, e);
      }
      if ((this._updateCommon(t, e, a, i), o)) {
        var l = this.childAt(0),
          u = i && i.fadeIn,
          h = { scale: l.scale.slice() };
        u && (h.style = { opacity: l.style.opacity }), (l.scale = [0, 0]), u && (l.style.opacity = 0), Va(l, h, r, e);
      }
      this._seriesModel = r;
    });
  var vM = ['itemStyle'],
    yM = ['emphasis', 'itemStyle'],
    _M = ['label'],
    xM = ['emphasis', 'label'];
  (gM._updateCommon = function (t, e, i, n) {
    function r(e) {
      return b ? t.getName(e) : pc(t, e);
    }
    var a = this.childAt(0),
      s = t.hostModel,
      l = t.getItemVisual(e, 'color');
    'image' !== a.type && a.useStyle({ strokeNoScale: !0 });
    var u = n && n.itemStyle,
      h = n && n.hoverItemStyle,
      c = n && n.symbolRotate,
      d = n && n.symbolOffset,
      f = n && n.labelModel,
      p = n && n.hoverLabelModel,
      g = n && n.hoverAnimation,
      m = n && n.cursorStyle;
    if (!n || t.hasItemOption) {
      var v = n && n.itemModel ? n.itemModel : t.getItemModel(e);
      (u = v.getModel(vM).getItemStyle(['color'])),
        (h = v.getModel(yM).getItemStyle()),
        (c = v.getShallow('symbolRotate')),
        (d = v.getShallow('symbolOffset')),
        (f = v.getModel(_M)),
        (p = v.getModel(xM)),
        (g = v.getShallow('hoverAnimation')),
        (m = v.getShallow('cursor'));
    } else h = o({}, h);
    var y = a.style;
    a.attr('rotation', ((c || 0) * Math.PI) / 180 || 0),
      d && a.attr('position', [so(d[0], i[0]), so(d[1], i[1])]),
      m && a.attr('cursor', m),
      a.setColor(l, n && n.symbolInnerColor),
      a.setStyle(u);
    var _ = t.getItemVisual(e, 'opacity');
    null != _ && (y.opacity = _);
    var x = t.getItemVisual(e, 'liftZ'),
      w = a.__z2Origin;
    null != x ? null == w && ((a.__z2Origin = a.z2), (a.z2 += x)) : null != w && ((a.z2 = w), (a.__z2Origin = null));
    var b = n && n.useNameLabel;
    Da(y, h, f, p, { labelFetcher: s, labelDataIndex: e, defaultText: r, isRectText: !0, autoColor: l }),
      (a.__symbolOriginalScale = Kc(i)),
      (a.hoverStyle = h),
      (a.highDownOnUpdate = g && s.isAnimationEnabled() ? Jc : null),
      Ma(a);
  }),
    (gM.fadeOut = function (t, e) {
      var i = this.childAt(0);
      (this.silent = i.silent = !0),
        !(e && e.keepLabel) && (i.style.text = null),
        Ga(i, { style: { opacity: 0 }, scale: [0, 0] }, this._seriesModel, this.dataIndex, t);
    }),
    h(qc, Wm);
  var wM = Qc.prototype;
  (wM.updateData = function (t, e) {
    e = ed(e);
    var i = this.group,
      n = t.hostModel,
      r = this._data,
      a = this._symbolCtor,
      o = id(t);
    r || i.removeAll(),
      t
        .diff(r)
        .add(function (n) {
          var r = t.getItemLayout(n);
          if (td(t, r, n, e)) {
            var s = new a(t, n, o);
            s.attr('position', r), t.setItemGraphicEl(n, s), i.add(s);
          }
        })
        .update(function (s, l) {
          var u = r.getItemGraphicEl(l),
            h = t.getItemLayout(s);
          return td(t, h, s, e)
            ? (u ? (u.updateData(t, s, o), Ga(u, { position: h }, n)) : ((u = new a(t, s)), u.attr('position', h)),
              i.add(u),
              void t.setItemGraphicEl(s, u))
            : void i.remove(u);
        })
        .remove(function (t) {
          var e = r.getItemGraphicEl(t);
          e &&
            e.fadeOut(function () {
              i.remove(e);
            });
        })
        .execute(),
      (this._data = t);
  }),
    (wM.isPersistent = function () {
      return !0;
    }),
    (wM.updateLayout = function () {
      var t = this._data;
      t &&
        t.eachItemGraphicEl(function (e, i) {
          var n = t.getItemLayout(i);
          e.attr('position', n);
        });
    }),
    (wM.incrementalPrepareUpdate = function (t) {
      (this._seriesScope = id(t)), (this._data = null), this.group.removeAll();
    }),
    (wM.incrementalUpdate = function (t, e, i) {
      function n(t) {
        t.isGroup || (t.incremental = t.useHoverLayer = !0);
      }
      i = ed(i);
      for (var r = t.start; r < t.end; r++) {
        var a = e.getItemLayout(r);
        if (td(e, a, r, i)) {
          var o = new this._symbolCtor(e, r, this._seriesScope);
          o.traverse(n), o.attr('position', a), this.group.add(o), e.setItemGraphicEl(r, o);
        }
      }
    }),
    (wM.remove = function (t) {
      var e = this.group,
        i = this._data;
      i && t
        ? i.eachItemGraphicEl(function (t) {
            t.fadeOut(function () {
              e.remove(t);
            });
          })
        : e.removeAll();
    });
  var bM = function (t, e, i, n, r, a, o, s) {
      for (
        var l = od(t, e),
          u = [],
          h = [],
          c = [],
          d = [],
          f = [],
          p = [],
          g = [],
          m = nd(r, e, o),
          v = nd(a, t, s),
          y = 0;
        y < l.length;
        y++
      ) {
        var _ = l[y],
          x = !0;
        switch (_.cmd) {
          case '=':
            var w = t.getItemLayout(_.idx),
              b = e.getItemLayout(_.idx1);
            (isNaN(w[0]) || isNaN(w[1])) && (w = b.slice()),
              u.push(w),
              h.push(b),
              c.push(i[_.idx]),
              d.push(n[_.idx1]),
              g.push(e.getRawIndex(_.idx1));
            break;
          case '+':
            var S = _.idx;
            u.push(r.dataToPoint([e.get(m.dataDimsForPoint[0], S), e.get(m.dataDimsForPoint[1], S)])),
              h.push(e.getItemLayout(S).slice()),
              c.push(ad(m, r, e, S)),
              d.push(n[S]),
              g.push(e.getRawIndex(S));
            break;
          case '-':
            var S = _.idx,
              M = t.getRawIndex(S);
            M !== S
              ? (u.push(t.getItemLayout(S)),
                h.push(a.dataToPoint([t.get(v.dataDimsForPoint[0], S), t.get(v.dataDimsForPoint[1], S)])),
                c.push(i[S]),
                d.push(ad(v, a, t, S)),
                g.push(M))
              : (x = !1);
        }
        x && (f.push(_), p.push(p.length));
      }
      p.sort(function (t, e) {
        return g[t] - g[e];
      });
      for (var I = [], C = [], T = [], D = [], A = [], y = 0; y < p.length; y++) {
        var S = p[y];
        (I[y] = u[S]), (C[y] = h[S]), (T[y] = c[S]), (D[y] = d[S]), (A[y] = f[S]);
      }
      return { current: I, next: C, stackedOnCurrent: T, stackedOnNext: D, status: A };
    },
    SM = oe,
    MM = se,
    IM = Y,
    CM = H,
    TM = [],
    DM = [],
    AM = [],
    kM = Vr.extend({
      type: 'ec-polyline',
      shape: { points: [], smooth: 0, smoothConstraint: !0, smoothMonotone: null, connectNulls: !1 },
      style: { fill: null, stroke: '#000' },
      brush: o_(Vr.prototype.brush),
      buildPath: function (t, e) {
        var i = e.points,
          n = 0,
          r = i.length,
          a = cd(i, e.smoothConstraint);
        if (e.connectNulls) {
          for (; r > 0 && sd(i[r - 1]); r--);
          for (; r > n && sd(i[n]); n++);
        }
        for (; r > n; ) n += ld(t, i, n, r, r, 1, a.min, a.max, e.smooth, e.smoothMonotone, e.connectNulls) + 1;
      },
    }),
    PM = Vr.extend({
      type: 'ec-polygon',
      shape: {
        points: [],
        stackedOnPoints: [],
        smooth: 0,
        stackedOnSmooth: 0,
        smoothConstraint: !0,
        smoothMonotone: null,
        connectNulls: !1,
      },
      brush: o_(Vr.prototype.brush),
      buildPath: function (t, e) {
        var i = e.points,
          n = e.stackedOnPoints,
          r = 0,
          a = i.length,
          o = e.smoothMonotone,
          s = cd(i, e.smoothConstraint),
          l = cd(n, e.smoothConstraint);
        if (e.connectNulls) {
          for (; a > 0 && sd(i[a - 1]); a--);
          for (; a > r && sd(i[r]); r++);
        }
        for (; a > r; ) {
          var u = ld(t, i, r, a, a, 1, s.min, s.max, e.smooth, o, e.connectNulls);
          ld(t, n, r + u - 1, u, a, -1, l.min, l.max, e.stackedOnSmooth, o, e.connectNulls),
            (r += u + 1),
            t.closePath();
        }
      },
    });
  Js.extend({
    type: 'line',
    init: function () {
      var t = new Wm(),
        e = new Qc();
      this.group.add(e.group), (this._symbolDraw = e), (this._lineGroup = t);
    },
    render: function (t, e, i) {
      var n = t.coordinateSystem,
        r = this.group,
        a = t.getData(),
        o = t.getModel('lineStyle'),
        l = t.getModel('areaStyle'),
        u = a.mapArray(a.getItemLayout),
        h = 'polar' === n.type,
        c = this._coordSys,
        d = this._symbolDraw,
        f = this._polyline,
        p = this._polygon,
        g = this._lineGroup,
        m = t.get('animation'),
        v = !l.isEmpty(),
        y = l.get('origin'),
        _ = nd(n, a, y),
        x = pd(n, a, _),
        w = t.get('showSymbol'),
        b = w && !h && vd(t, a, n),
        S = this._data;
      S &&
        S.eachItemGraphicEl(function (t, e) {
          t.__temp && (r.remove(t), S.setItemGraphicEl(e, null));
        }),
        w || d.remove(),
        r.add(g);
      var M,
        I = !h && t.get('step');
      n &&
        n.getArea &&
        ((M = n.getArea()),
        null != M.width
          ? ((M.x -= 0.1), (M.y -= 0.1), (M.width += 0.2), (M.height += 0.2))
          : M.r0 && ((M.r0 -= 0.5), (M.r1 += 0.5))),
        f && c.type === n.type && I === this._step
          ? (v && !p ? (p = this._newPolygon(u, x, n, m)) : p && !v && (g.remove(p), (p = this._polygon = null)),
            g.setClipPath(_d(n, !1, t)),
            w && d.updateData(a, { isIgnore: b, clipShape: M }),
            a.eachItemGraphicEl(function (t) {
              t.stopAnimation(!0);
            }),
            (dd(this._stackedOnPoints, x) && dd(this._points, u)) ||
              (m
                ? this._updateAnimation(a, x, n, i, I, y)
                : (I && ((u = gd(u, n, I)), (x = gd(x, n, I))),
                  f.setShape({ points: u }),
                  p && p.setShape({ points: u, stackedOnPoints: x }))))
          : (w && d.updateData(a, { isIgnore: b, clipShape: M }),
            I && ((u = gd(u, n, I)), (x = gd(x, n, I))),
            (f = this._newPolyline(u, n, m)),
            v && (p = this._newPolygon(u, x, n, m)),
            g.setClipPath(_d(n, !0, t)));
      var C = md(a, n) || a.getVisual('color');
      f.useStyle(s(o.getLineStyle(), { fill: 'none', stroke: C, lineJoin: 'bevel' }));
      var T = t.get('smooth');
      if (
        ((T = fd(t.get('smooth'))),
        f.setShape({ smooth: T, smoothMonotone: t.get('smoothMonotone'), connectNulls: t.get('connectNulls') }),
        p)
      ) {
        var D = a.getCalculationInfo('stackedOnSeries'),
          A = 0;
        p.useStyle(s(l.getAreaStyle(), { fill: C, opacity: 0.7, lineJoin: 'bevel' })),
          D && (A = fd(D.get('smooth'))),
          p.setShape({
            smooth: T,
            stackedOnSmooth: A,
            smoothMonotone: t.get('smoothMonotone'),
            connectNulls: t.get('connectNulls'),
          });
      }
      (this._data = a),
        (this._coordSys = n),
        (this._stackedOnPoints = x),
        (this._points = u),
        (this._step = I),
        (this._valueOrigin = y);
    },
    dispose: function () {},
    highlight: function (t, e, i, n) {
      var r = t.getData(),
        a = jn(r, n);
      if (!(a instanceof Array) && null != a && a >= 0) {
        var o = r.getItemGraphicEl(a);
        if (!o) {
          var s = r.getItemLayout(a);
          if (!s) return;
          (o = new qc(r, a)),
            (o.position = s),
            o.setZ(t.get('zlevel'), t.get('z')),
            (o.ignore = isNaN(s[0]) || isNaN(s[1])),
            (o.__temp = !0),
            r.setItemGraphicEl(a, o),
            o.stopSymbolAnimation(!0),
            this.group.add(o);
        }
        o.highlight();
      } else Js.prototype.highlight.call(this, t, e, i, n);
    },
    downplay: function (t, e, i, n) {
      var r = t.getData(),
        a = jn(r, n);
      if (null != a && a >= 0) {
        var o = r.getItemGraphicEl(a);
        o && (o.__temp ? (r.setItemGraphicEl(a, null), this.group.remove(o)) : o.downplay());
      } else Js.prototype.downplay.call(this, t, e, i, n);
    },
    _newPolyline: function (t) {
      var e = this._polyline;
      return (
        e && this._lineGroup.remove(e),
        (e = new kM({ shape: { points: t }, silent: !0, z2: 10 })),
        this._lineGroup.add(e),
        (this._polyline = e),
        e
      );
    },
    _newPolygon: function (t, e) {
      var i = this._polygon;
      return (
        i && this._lineGroup.remove(i),
        (i = new PM({ shape: { points: t, stackedOnPoints: e }, silent: !0 })),
        this._lineGroup.add(i),
        (this._polygon = i),
        i
      );
    },
    _updateAnimation: function (t, e, i, n, r, a) {
      var o = this._polyline,
        s = this._polygon,
        l = t.hostModel,
        u = bM(this._data, t, this._stackedOnPoints, e, this._coordSys, i, this._valueOrigin, a),
        h = u.current,
        c = u.stackedOnCurrent,
        d = u.next,
        f = u.stackedOnNext;
      r &&
        ((h = gd(u.current, i, r)),
        (c = gd(u.stackedOnCurrent, i, r)),
        (d = gd(u.next, i, r)),
        (f = gd(u.stackedOnNext, i, r))),
        (o.shape.__points = u.current),
        (o.shape.points = h),
        Ga(o, { shape: { points: d } }, l),
        s && (s.setShape({ points: h, stackedOnPoints: c }), Ga(s, { shape: { points: d, stackedOnPoints: f } }, l));
      for (var p = [], g = u.status, m = 0; m < g.length; m++) {
        var v = g[m].cmd;
        if ('=' === v) {
          var y = t.getItemGraphicEl(g[m].idx1);
          y && p.push({ el: y, ptIdx: m });
        }
      }
      o.animators &&
        o.animators.length &&
        o.animators[0].during(function () {
          for (var t = 0; t < p.length; t++) {
            var e = p[t].el;
            e.attr('position', o.shape.__points[p[t].ptIdx]);
          }
        });
    },
    remove: function () {
      var t = this.group,
        e = this._data;
      this._lineGroup.removeAll(),
        this._symbolDraw.remove(!0),
        e &&
          e.eachItemGraphicEl(function (i, n) {
            i.__temp && (t.remove(i), e.setItemGraphicEl(n, null));
          }),
        (this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null);
    },
  });
  var LM = function (t, e, i) {
      return {
        seriesType: t,
        performRawSeries: !0,
        reset: function (t, n) {
          function r(e, i) {
            if (c) {
              var n = t.getRawValue(i),
                r = t.getDataParams(i);
              u && e.setItemVisual(i, 'symbol', o(n, r)), h && e.setItemVisual(i, 'symbolSize', s(n, r));
            }
            if (e.hasItemOption) {
              var a = e.getItemModel(i),
                l = a.getShallow('symbol', !0),
                d = a.getShallow('symbolSize', !0),
                f = a.getShallow('symbolKeepAspect', !0);
              null != l && e.setItemVisual(i, 'symbol', l),
                null != d && e.setItemVisual(i, 'symbolSize', d),
                null != f && e.setItemVisual(i, 'symbolKeepAspect', f);
            }
          }
          var a = t.getData(),
            o = t.get('symbol'),
            s = t.get('symbolSize'),
            l = t.get('symbolKeepAspect'),
            u = w(o),
            h = w(s),
            c = u || h,
            d = !u && o ? o : e,
            f = h ? null : s;
          return (
            a.setVisual({ legendSymbol: i || d, symbol: d, symbolSize: f, symbolKeepAspect: l }),
            n.isSeriesFiltered(t) ? void 0 : { dataEach: a.hasItemOption || c ? r : null }
          );
        },
      };
    },
    OM = function (t) {
      return {
        seriesType: t,
        plan: iw(),
        reset: function (t) {
          function e(t, e) {
            for (
              var i = t.end - t.start, r = a && new Float32Array(i * s), l = t.start, u = 0, h = [], c = [];
              l < t.end;
              l++
            ) {
              var d;
              if (1 === s) {
                var f = e.get(o[0], l);
                d = !isNaN(f) && n.dataToPoint(f, null, c);
              } else {
                var f = (h[0] = e.get(o[0], l)),
                  p = (h[1] = e.get(o[1], l));
                d = !isNaN(f) && !isNaN(p) && n.dataToPoint(h, null, c);
              }
              a
                ? ((r[u++] = d ? d[0] : 0 / 0), (r[u++] = d ? d[1] : 0 / 0))
                : e.setItemLayout(l, (d && d.slice()) || [0 / 0, 0 / 0]);
            }
            a && e.setLayout('symbolPoints', r);
          }
          var i = t.getData(),
            n = t.coordinateSystem,
            r = t.pipelineContext,
            a = r.large;
          if (n) {
            var o = p(n.dimensions, function (t) {
                return i.mapDimension(t);
              }).slice(0, 2),
              s = o.length,
              l = i.getCalculationInfo('stackResultDimension');
            return Ku(i, o[0]) && (o[0] = l), Ku(i, o[1]) && (o[1] = l), s && { progress: e };
          }
        },
      };
    },
    zM = {
      average: function (t) {
        for (var e = 0, i = 0, n = 0; n < t.length; n++) isNaN(t[n]) || ((e += t[n]), i++);
        return 0 === i ? 0 / 0 : e / i;
      },
      sum: function (t) {
        for (var e = 0, i = 0; i < t.length; i++) e += t[i] || 0;
        return e;
      },
      max: function (t) {
        for (var e = -1 / 0, i = 0; i < t.length; i++) t[i] > e && (e = t[i]);
        return isFinite(e) ? e : 0 / 0;
      },
      min: function (t) {
        for (var e = 1 / 0, i = 0; i < t.length; i++) t[i] < e && (e = t[i]);
        return isFinite(e) ? e : 0 / 0;
      },
      nearest: function (t) {
        return t[0];
      },
    },
    EM = function (t) {
      return Math.round(t.length / 2);
    },
    RM = function (t) {
      return {
        seriesType: t,
        modifyOutputEnd: !0,
        reset: function (t) {
          var e = t.getData(),
            i = t.get('sampling'),
            n = t.coordinateSystem;
          if ('cartesian2d' === n.type && i) {
            var r = n.getBaseAxis(),
              a = n.getOtherAxis(r),
              o = r.getExtent(),
              s = o[1] - o[0],
              l = Math.round(e.count() / s);
            if (l > 1) {
              var u;
              'string' == typeof i ? (u = zM[i]) : 'function' == typeof i && (u = i),
                u && t.setData(e.downSample(e.mapDimension(a.dim), 1 / l, u, EM));
            }
          }
        },
      };
    };
  gu(LM('line', 'circle', 'line')), pu(OM('line')), uu(nb.PROCESSOR.STATISTIC, RM('line'));
  var BM = function (t, e, i) {
      e = (x(e) && { coordDimensions: e }) || o({}, e);
      var n = t.getSource(),
        r = Fb(n, e),
        a = new Rb(r, t);
      return a.initData(n, i), a;
    },
    NM = {
      updateSelectedMap: function (t) {
        (this._targetList = x(t) ? t.slice() : []),
          (this._selectTargetMap = g(
            t || [],
            function (t, e) {
              return t.set(e.name, e), t;
            },
            N(),
          ));
      },
      select: function (t, e) {
        var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t),
          n = this.get('selectedMode');
        'single' === n &&
          this._selectTargetMap.each(function (t) {
            t.selected = !1;
          }),
          i && (i.selected = !0);
      },
      unSelect: function (t, e) {
        var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
        i && (i.selected = !1);
      },
      toggleSelected: function (t, e) {
        var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
        return null != i ? (this[i.selected ? 'unSelect' : 'select'](t, e), i.selected) : void 0;
      },
      isSelected: function (t, e) {
        var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
        return i && i.selected;
      },
    },
    FM = xu({
      type: 'series.pie',
      init: function (t) {
        FM.superApply(this, 'init', arguments),
          (this.legendDataProvider = function () {
            return this.getRawData();
          }),
          this.updateSelectedMap(this._createSelectableList()),
          this._defaultLabelLine(t);
      },
      mergeOption: function (t) {
        FM.superCall(this, 'mergeOption', t), this.updateSelectedMap(this._createSelectableList());
      },
      getInitialData: function () {
        return BM(this, ['value']);
      },
      _createSelectableList: function () {
        for (var t = this.getRawData(), e = t.mapDimension('value'), i = [], n = 0, r = t.count(); r > n; n++)
          i.push({ name: t.getName(n), value: t.get(e, n), selected: Fs(t, n, 'selected') });
        return i;
      },
      getDataParams: function (t) {
        var e = this.getData(),
          i = FM.superCall(this, 'getDataParams', t),
          n = [];
        return (
          e.each(e.mapDimension('value'), function (t) {
            n.push(t);
          }),
          (i.percent = po(n, t, e.hostModel.get('percentPrecision'))),
          i.$vars.push('percent'),
          i
        );
      },
      _defaultLabelLine: function (t) {
        Vn(t, 'labelLine', ['show']);
        var e = t.labelLine,
          i = t.emphasis.labelLine;
        (e.show = e.show && t.label.show), (i.show = i.show && t.emphasis.label.show);
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        hoverAnimation: !0,
        center: ['50%', '50%'],
        radius: [0, '75%'],
        clockwise: !0,
        startAngle: 90,
        minAngle: 0,
        minShowLabelAngle: 0,
        selectedOffset: 10,
        hoverOffset: 10,
        avoidLabelOverlap: !0,
        percentPrecision: 2,
        stillShowZeroSum: !0,
        label: { rotate: !1, show: !0, position: 'outer' },
        labelLine: { show: !0, length: 15, length2: 15, smooth: !1, lineStyle: { width: 1, type: 'solid' } },
        itemStyle: { borderWidth: 1 },
        animationType: 'expansion',
        animationTypeUpdate: 'transition',
        animationEasing: 'cubicOut',
      },
    });
  c(FM, NM);
  var GM = bd.prototype;
  (GM.updateData = function (t, e, i) {
    var n = this.childAt(0),
      r = this.childAt(1),
      a = this.childAt(2),
      l = t.hostModel,
      u = t.getItemModel(e),
      h = t.getItemLayout(e),
      c = o({}, h);
    c.label = null;
    var d = l.getShallow('animationTypeUpdate');
    if (i) {
      n.setShape(c);
      var f = l.getShallow('animationType');
      'scale' === f
        ? ((n.shape.r = h.r0), Va(n, { shape: { r: h.r } }, l, e))
        : ((n.shape.endAngle = h.startAngle), Ga(n, { shape: { endAngle: h.endAngle } }, l, e));
    } else 'expansion' === d ? n.setShape(c) : Ga(n, { shape: c }, l, e);
    var p = t.getItemVisual(e, 'color');
    n.useStyle(s({ lineJoin: 'bevel', fill: p }, u.getModel('itemStyle').getItemStyle())),
      (n.hoverStyle = u.getModel('emphasis.itemStyle').getItemStyle());
    var g = u.getShallow('cursor');
    g && n.attr('cursor', g),
      wd(this, t.getItemLayout(e), l.isSelected(null, e), l.get('selectedOffset'), l.get('animation'));
    var m = !i && 'transition' === d;
    this._updateLabel(t, e, m),
      (this.highDownOnUpdate =
        u.get('hoverAnimation') && l.isAnimationEnabled()
          ? function (t, e) {
              'emphasis' === e
                ? ((r.ignore = r.hoverIgnore),
                  (a.ignore = a.hoverIgnore),
                  n.stopAnimation(!0),
                  n.animateTo({ shape: { r: h.r + l.get('hoverOffset') } }, 300, 'elasticOut'))
                : ((r.ignore = r.normalIgnore),
                  (a.ignore = a.normalIgnore),
                  n.stopAnimation(!0),
                  n.animateTo({ shape: { r: h.r } }, 300, 'elasticOut'));
            }
          : null),
      Ma(this);
  }),
    (GM._updateLabel = function (t, e, i) {
      var n = this.childAt(1),
        r = this.childAt(2),
        a = t.hostModel,
        o = t.getItemModel(e),
        s = t.getItemLayout(e),
        l = s.label,
        u = t.getItemVisual(e, 'color');
      if (!l || isNaN(l.x) || isNaN(l.y))
        return void (r.ignore = r.normalIgnore = r.hoverIgnore = n.ignore = n.normalIgnore = n.hoverIgnore = !0);
      var h = {
          points: l.linePoints || [
            [l.x, l.y],
            [l.x, l.y],
            [l.x, l.y],
          ],
        },
        c = { x: l.x, y: l.y };
      i ? (Ga(n, { shape: h }, a, e), Ga(r, { style: c }, a, e)) : (n.attr({ shape: h }), r.attr({ style: c })),
        r.attr({ rotation: l.rotation, origin: [l.x, l.y], z2: 10 });
      var d = o.getModel('label'),
        f = o.getModel('emphasis.label'),
        p = o.getModel('labelLine'),
        g = o.getModel('emphasis.labelLine'),
        u = t.getItemVisual(e, 'color');
      Da(
        r.style,
        (r.hoverStyle = {}),
        d,
        f,
        {
          labelFetcher: t.hostModel,
          labelDataIndex: e,
          defaultText: t.getName(e),
          autoColor: u,
          useInsideStyle: !!l.inside,
        },
        { textAlign: l.textAlign, textVerticalAlign: l.verticalAlign, opacity: t.getItemVisual(e, 'opacity') },
      ),
        (r.ignore = r.normalIgnore = !d.get('show')),
        (r.hoverIgnore = !f.get('show')),
        (n.ignore = n.normalIgnore = !p.get('show')),
        (n.hoverIgnore = !g.get('show')),
        n.setStyle({ stroke: u, opacity: t.getItemVisual(e, 'opacity') }),
        n.setStyle(p.getModel('lineStyle').getLineStyle()),
        (n.hoverStyle = g.getModel('lineStyle').getLineStyle());
      var m = p.get('smooth');
      m && m === !0 && (m = 0.4), n.setShape({ smooth: m });
    }),
    h(bd, Wm);
  var VM =
      (Js.extend({
        type: 'pie',
        init: function () {
          var t = new Wm();
          this._sectorGroup = t;
        },
        render: function (t, e, i, n) {
          if (!n || n.from !== this.uid) {
            var r = t.getData(),
              a = this._data,
              o = this.group,
              s = e.get('animation'),
              l = !a,
              u = t.get('animationType'),
              h = t.get('animationTypeUpdate'),
              c = _(xd, this.uid, t, s, i),
              d = t.get('selectedMode');
            if (
              (r
                .diff(a)
                .add(function (t) {
                  var e = new bd(r, t);
                  l &&
                    'scale' !== u &&
                    e.eachChild(function (t) {
                      t.stopAnimation(!0);
                    }),
                    d && e.on('click', c),
                    r.setItemGraphicEl(t, e),
                    o.add(e);
                })
                .update(function (t, e) {
                  var i = a.getItemGraphicEl(e);
                  l ||
                    'transition' === h ||
                    i.eachChild(function (t) {
                      t.stopAnimation(!0);
                    }),
                    i.updateData(r, t),
                    i.off('click'),
                    d && i.on('click', c),
                    o.add(i),
                    r.setItemGraphicEl(t, i);
                })
                .remove(function (t) {
                  var e = a.getItemGraphicEl(t);
                  o.remove(e);
                })
                .execute(),
              s && r.count() > 0 && (l ? 'scale' !== u : 'transition' !== h))
            ) {
              for (var f = r.getItemLayout(0), p = 1; isNaN(f.startAngle) && p < r.count(); ++p) f = r.getItemLayout(p);
              var g = Math.max(i.getWidth(), i.getHeight()) / 2,
                m = y(o.removeClipPath, o);
              o.setClipPath(this._createClipPath(f.cx, f.cy, g, f.startAngle, f.clockwise, m, t, l));
            } else o.removeClipPath();
            this._data = r;
          }
        },
        dispose: function () {},
        _createClipPath: function (t, e, i, n, r, a, o, s) {
          var l = new s_({ shape: { cx: t, cy: e, r0: 0, r: i, startAngle: n, endAngle: n, clockwise: r } }),
            u = s ? Va : Ga;
          return u(l, { shape: { endAngle: n + (r ? 1 : -1) * Math.PI * 2 } }, o, a), l;
        },
        containPoint: function (t, e) {
          var i = e.getData(),
            n = i.getItemLayout(0);
          if (n) {
            var r = t[0] - n.cx,
              a = t[1] - n.cy,
              o = Math.sqrt(r * r + a * a);
            return o <= n.r && o >= n.r0;
          }
        },
      }),
      function (t, e) {
        f(e, function (e) {
          (e.update = 'updateView'),
            cu(e, function (i, n) {
              var r = {};
              return (
                n.eachComponent({ mainType: 'series', subType: t, query: i }, function (t) {
                  t[e.method] && t[e.method](i.name, i.dataIndex);
                  var n = t.getData();
                  n.each(function (e) {
                    var i = n.getName(e);
                    r[i] = t.isSelected(i) || !1;
                  });
                }),
                { name: i.name, selected: r, seriesId: i.seriesId }
              );
            });
        });
      }),
    HM = function (t) {
      return {
        getTargetSeries: function (e) {
          var i = {},
            n = N();
          return (
            e.eachSeriesByType(t, function (t) {
              (t.__paletteScope = i), n.set(t.uid, t);
            }),
            n
          );
        },
        reset: function (t) {
          var e = t.getRawData(),
            i = {},
            n = t.getData();
          n.each(function (t) {
            var e = n.getRawIndex(t);
            i[e] = t;
          }),
            e.each(function (r) {
              var a,
                o = i[r],
                s = null != o && n.getItemVisual(o, 'color', !0),
                l = null != o && n.getItemVisual(o, 'borderColor', !0);
              if (((s && l) || (a = e.getItemModel(r)), s)) e.setItemVisual(r, 'color', s);
              else {
                var u =
                  a.get('itemStyle.color') ||
                  t.getColorFromPalette(e.getName(r) || r + '', t.__paletteScope, e.count());
                e.setItemVisual(r, 'color', u), null != o && n.setItemVisual(o, 'color', u);
              }
              if (l) e.setItemVisual(r, 'borderColor', l);
              else {
                var h = a.get('itemStyle.borderColor');
                e.setItemVisual(r, 'borderColor', h), null != o && n.setItemVisual(o, 'borderColor', h);
              }
            });
        },
      };
    },
    WM = Math.PI / 180,
    UM = function (t, e, i, n) {
      var r,
        a,
        o = t.getData(),
        s = [],
        l = !1,
        u = (t.get('minShowLabelAngle') || 0) * WM;
      o.each(function (i) {
        var n = o.getItemLayout(i),
          h = o.getItemModel(i),
          c = h.getModel('label'),
          d = c.get('position') || h.get('emphasis.label.position'),
          f = h.getModel('labelLine'),
          p = f.get('length'),
          g = f.get('length2');
        if (!(n.angle < u)) {
          var m,
            v,
            y,
            _,
            x = (n.startAngle + n.endAngle) / 2,
            w = Math.cos(x),
            b = Math.sin(x);
          (r = n.cx), (a = n.cy);
          var S = 'inside' === d || 'inner' === d;
          if ('center' === d) (m = n.cx), (v = n.cy), (_ = 'center');
          else {
            var M = (S ? ((n.r + n.r0) / 2) * w : n.r * w) + r,
              I = (S ? ((n.r + n.r0) / 2) * b : n.r * b) + a;
            if (((m = M + 3 * w), (v = I + 3 * b), !S)) {
              var C = M + w * (p + e - n.r),
                T = I + b * (p + e - n.r),
                D = C + (0 > w ? -1 : 1) * g,
                A = T;
              (m = D + (0 > w ? -5 : 5)),
                (v = A),
                (y = [
                  [M, I],
                  [C, T],
                  [D, A],
                ]);
            }
            _ = S ? 'center' : w > 0 ? 'left' : 'right';
          }
          var k,
            P = c.getFont(),
            L = c.get('rotate');
          k = 'number' == typeof L ? L * (Math.PI / 180) : L ? (0 > w ? -x + Math.PI : -x) : 0;
          var O = t.getFormattedLabel(i, 'normal') || o.getName(i),
            z = Gi(O, P, _, 'top');
          (l = !!k),
            (n.label = {
              x: m,
              y: v,
              position: d,
              height: z.height,
              len: p,
              len2: g,
              linePoints: y,
              textAlign: _,
              verticalAlign: 'middle',
              rotation: k,
              inside: S,
            }),
            S || s.push(n.label);
        }
      }),
        !l && t.get('avoidLabelOverlap') && Md(s, r, a, e, i, n);
    },
    XM = 2 * Math.PI,
    YM = Math.PI / 180,
    ZM = function (t, e, i) {
      e.eachSeriesByType(t, function (t) {
        var e = t.getData(),
          n = e.mapDimension('value'),
          r = t.get('center'),
          a = t.get('radius');
        x(a) || (a = [0, a]), x(r) || (r = [r, r]);
        var o = i.getWidth(),
          s = i.getHeight(),
          l = Math.min(o, s),
          u = so(r[0], o),
          h = so(r[1], s),
          c = so(a[0], l / 2),
          d = so(a[1], l / 2),
          f = -t.get('startAngle') * YM,
          p = t.get('minAngle') * YM,
          g = 0;
        e.each(n, function (t) {
          !isNaN(t) && g++;
        });
        var m = e.getSum(n),
          v = (Math.PI / (m || g)) * 2,
          y = t.get('clockwise'),
          _ = t.get('roseType'),
          w = t.get('stillShowZeroSum'),
          b = e.getDataExtent(n);
        b[0] = 0;
        var S = XM,
          M = 0,
          I = f,
          C = y ? 1 : -1;
        if (
          (e.each(n, function (t, i) {
            var n;
            if (isNaN(t))
              return void e.setItemLayout(i, {
                angle: 0 / 0,
                startAngle: 0 / 0,
                endAngle: 0 / 0,
                clockwise: y,
                cx: u,
                cy: h,
                r0: c,
                r: _ ? 0 / 0 : d,
              });
            (n = 'area' !== _ ? (0 === m && w ? v : t * v) : XM / g), p > n ? ((n = p), (S -= p)) : (M += t);
            var r = I + C * n;
            e.setItemLayout(i, {
              angle: n,
              startAngle: I,
              endAngle: r,
              clockwise: y,
              cx: u,
              cy: h,
              r0: c,
              r: _ ? oo(t, b, [c, d]) : d,
            }),
              (I = r);
          }),
          XM > S && g)
        )
          if (0.001 >= S) {
            var T = XM / g;
            e.each(n, function (t, i) {
              if (!isNaN(t)) {
                var n = e.getItemLayout(i);
                (n.angle = T), (n.startAngle = f + C * i * T), (n.endAngle = f + C * (i + 1) * T);
              }
            });
          } else
            (v = S / M),
              (I = f),
              e.each(n, function (t, i) {
                if (!isNaN(t)) {
                  var n = e.getItemLayout(i),
                    r = n.angle === p ? p : t * v;
                  (n.startAngle = I), (n.endAngle = I + C * r), (I += C * r);
                }
              });
        UM(t, d, o, s);
      });
    },
    jM = function (t) {
      return {
        seriesType: t,
        reset: function (t, e) {
          var i = e.findComponents({ mainType: 'legend' });
          if (i && i.length) {
            var n = t.getData();
            n.filterSelf(function (t) {
              for (var e = n.getName(t), r = 0; r < i.length; r++) if (!i[r].isSelected(e)) return !1;
              return !0;
            });
          }
        },
      };
    };
  VM('pie', [
    { type: 'pieToggleSelect', event: 'pieselectchanged', method: 'toggleSelected' },
    { type: 'pieSelect', event: 'pieselected', method: 'select' },
    { type: 'pieUnSelect', event: 'pieunselected', method: 'unSelect' },
  ]),
    gu(HM('pie')),
    pu(_(ZM, 'pie')),
    uu(jM('pie')),
    Qx.extend({
      type: 'series.scatter',
      dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],
      getInitialData: function () {
        return Ju(this.getSource(), this);
      },
      brushSelector: 'point',
      getProgressive: function () {
        var t = this.option.progressive;
        return null == t ? (this.option.large ? 5e3 : this.get('progressive')) : t;
      },
      getProgressiveThreshold: function () {
        var t = this.option.progressiveThreshold;
        return null == t ? (this.option.large ? 1e4 : this.get('progressiveThreshold')) : t;
      },
      defaultOption: {
        coordinateSystem: 'cartesian2d',
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        hoverAnimation: !0,
        symbolSize: 10,
        large: !1,
        largeThreshold: 2e3,
        itemStyle: { opacity: 0.8 },
        clip: !0,
      },
    });
  var qM = 4,
    KM = ea({
      shape: { points: null },
      symbolProxy: null,
      softClipShape: null,
      buildPath: function (t, e) {
        var i = e.points,
          n = e.size,
          r = this.symbolProxy,
          a = r.shape,
          o = t.getContext ? t.getContext() : t,
          s = o && n[0] < qM;
        if (!s)
          for (var l = 0; l < i.length; ) {
            var u = i[l++],
              h = i[l++];
            isNaN(u) ||
              isNaN(h) ||
              ((!this.softClipShape || this.softClipShape.contain(u, h)) &&
                ((a.x = u - n[0] / 2),
                (a.y = h - n[1] / 2),
                (a.width = n[0]),
                (a.height = n[1]),
                r.buildPath(t, a, !0)));
          }
      },
      afterBrush: function (t) {
        var e = this.shape,
          i = e.points,
          n = e.size,
          r = n[0] < qM;
        if (r) {
          this.setTransform(t);
          for (var a = 0; a < i.length; ) {
            var o = i[a++],
              s = i[a++];
            isNaN(o) ||
              isNaN(s) ||
              ((!this.softClipShape || this.softClipShape.contain(o, s)) &&
                t.fillRect(o - n[0] / 2, s - n[1] / 2, n[0], n[1]));
          }
          this.restoreTransform(t);
        }
      },
      findDataIndex: function (t, e) {
        for (
          var i = this.shape,
            n = i.points,
            r = i.size,
            a = Math.max(r[0], 4),
            o = Math.max(r[1], 4),
            s = n.length / 2 - 1;
          s >= 0;
          s--
        ) {
          var l = 2 * s,
            u = n[l] - a / 2,
            h = n[l + 1] - o / 2;
          if (t >= u && e >= h && u + a >= t && h + o >= e) return s;
        }
        return -1;
      },
    }),
    $M = Cd.prototype;
  ($M.isPersistent = function () {
    return !this._incremental;
  }),
    ($M.updateData = function (t, e) {
      this.group.removeAll();
      var i = new KM({ rectHover: !0, cursor: 'default' });
      i.setShape({ points: t.getLayout('symbolPoints') }),
        this._setCommon(i, t, !1, e),
        this.group.add(i),
        (this._incremental = null);
    }),
    ($M.updateLayout = function (t) {
      if (!this._incremental) {
        var e = t.getLayout('symbolPoints');
        this.group.eachChild(function (t) {
          if (null != t.startIndex) {
            var i = 2 * (t.endIndex - t.startIndex),
              n = 4 * t.startIndex * 2;
            e = new Float32Array(e.buffer, n, i);
          }
          t.setShape('points', e);
        });
      }
    }),
    ($M.incrementalPrepareUpdate = function (t) {
      this.group.removeAll(),
        this._clearIncremental(),
        t.count() > 2e6
          ? (this._incremental || (this._incremental = new ta({ silent: !0 })), this.group.add(this._incremental))
          : (this._incremental = null);
    }),
    ($M.incrementalUpdate = function (t, e, i) {
      var n;
      this._incremental
        ? ((n = new KM()), this._incremental.addDisplayable(n, !0))
        : ((n = new KM({ rectHover: !0, cursor: 'default', startIndex: t.start, endIndex: t.end })),
          (n.incremental = !0),
          this.group.add(n)),
        n.setShape({ points: e.getLayout('symbolPoints') }),
        this._setCommon(n, e, !!this._incremental, i);
    }),
    ($M._setCommon = function (t, e, i, n) {
      var r = e.hostModel;
      n = n || {};
      var a = e.getVisual('symbolSize');
      t.setShape('size', a instanceof Array ? a : [a, a]),
        (t.softClipShape = n.clipShape || null),
        (t.symbolProxy = Oh(e.getVisual('symbol'), 0, 0, 0, 0)),
        (t.setColor = t.symbolProxy.setColor);
      var o = t.shape.size[0] < qM;
      t.useStyle(r.getModel('itemStyle').getItemStyle(o ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));
      var s = e.getVisual('color');
      s && t.setColor(s),
        i ||
          ((t.seriesIndex = r.seriesIndex),
          t.on('mousemove', function (e) {
            t.dataIndex = null;
            var i = t.findDataIndex(e.offsetX, e.offsetY);
            i >= 0 && (t.dataIndex = i + (t.startIndex || 0));
          }));
    }),
    ($M.remove = function () {
      this._clearIncremental(), (this._incremental = null), this.group.removeAll();
    }),
    ($M._clearIncremental = function () {
      var t = this._incremental;
      t && t.clearDisplaybles();
    }),
    wu({
      type: 'scatter',
      render: function (t) {
        var e = t.getData(),
          i = this._updateSymbolDraw(e, t);
        i.updateData(e, { clipShape: this._getClipShape(t) }), (this._finished = !0);
      },
      incrementalPrepareRender: function (t) {
        var e = t.getData(),
          i = this._updateSymbolDraw(e, t);
        i.incrementalPrepareUpdate(e), (this._finished = !1);
      },
      incrementalRender: function (t, e) {
        this._symbolDraw.incrementalUpdate(t, e.getData(), { clipShape: this._getClipShape(e) }),
          (this._finished = t.end === e.getData().count());
      },
      updateTransform: function (t) {
        var e = t.getData();
        if ((this.group.dirty(), !this._finished || e.count() > 1e4 || !this._symbolDraw.isPersistent()))
          return { update: !0 };
        var i = OM().reset(t);
        i.progress && i.progress({ start: 0, end: e.count() }, e), this._symbolDraw.updateLayout(e);
      },
      _getClipShape: function (t) {
        var e = t.coordinateSystem,
          i = e && e.getArea && e.getArea();
        return t.get('clip', !0) ? i : null;
      },
      _updateSymbolDraw: function (t, e) {
        var i = this._symbolDraw,
          n = e.pipelineContext,
          r = n.large;
        return (
          (i && r === this._isLargeDraw) ||
            (i && i.remove(),
            (i = this._symbolDraw = r ? new Cd() : new Qc()),
            (this._isLargeDraw = r),
            this.group.removeAll()),
          this.group.add(i.group),
          i
        );
      },
      remove: function () {
        this._symbolDraw && this._symbolDraw.remove(!0), (this._symbolDraw = null);
      },
      dispose: function () {},
    }),
    gu(LM('scatter', 'circle')),
    pu(OM('scatter')),
    Qx.extend({
      type: 'series.effectScatter',
      dependencies: ['grid', 'polar'],
      getInitialData: function () {
        return Ju(this.getSource(), this);
      },
      brushSelector: 'point',
      defaultOption: {
        coordinateSystem: 'cartesian2d',
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        effectType: 'ripple',
        progressive: 0,
        showEffectOn: 'render',
        rippleEffect: { period: 4, scale: 2.5, brushType: 'fill' },
        symbolSize: 10,
      },
    });
  var JM = 3,
    QM = Ad.prototype;
  (QM.stopEffectAnimation = function () {
    this.childAt(1).removeAll();
  }),
    (QM.startEffectAnimation = function (t) {
      for (var e = t.symbolType, i = t.color, n = this.childAt(1), r = 0; JM > r; r++) {
        var a = Oh(e, -1, -1, 2, 2, i);
        a.attr({ style: { strokeNoScale: !0 }, z2: 99, silent: !0, scale: [0.5, 0.5] });
        var o = (-r / JM) * t.period + t.effectOffset;
        a
          .animate('', !0)
          .when(t.period, { scale: [t.rippleScale / 2, t.rippleScale / 2] })
          .delay(o)
          .start(),
          a.animateStyle(!0).when(t.period, { opacity: 0 }).delay(o).start(),
          n.add(a);
      }
      Dd(n, t);
    }),
    (QM.updateEffectAnimation = function (t) {
      for (
        var e = this._effectCfg, i = this.childAt(1), n = ['symbolType', 'period', 'rippleScale'], r = 0;
        r < n.length;
        r++
      ) {
        var a = n[r];
        if (e[a] !== t[a]) return this.stopEffectAnimation(), void this.startEffectAnimation(t);
      }
      Dd(i, t);
    }),
    (QM.highlight = function () {
      this.trigger('emphasis');
    }),
    (QM.downplay = function () {
      this.trigger('normal');
    }),
    (QM.updateData = function (t, e) {
      var i = t.hostModel;
      this.childAt(0).updateData(t, e);
      var n = this.childAt(1),
        r = t.getItemModel(e),
        a = t.getItemVisual(e, 'symbol'),
        o = Td(t.getItemVisual(e, 'symbolSize')),
        s = t.getItemVisual(e, 'color');
      n.attr('scale', o),
        n.traverse(function (t) {
          t.attr({ fill: s });
        });
      var l = r.getShallow('symbolOffset');
      if (l) {
        var u = n.position;
        (u[0] = so(l[0], o[0])), (u[1] = so(l[1], o[1]));
      }
      n.rotation = ((r.getShallow('symbolRotate') || 0) * Math.PI) / 180 || 0;
      var h = {};
      if (
        ((h.showEffectOn = i.get('showEffectOn')),
        (h.rippleScale = r.get('rippleEffect.scale')),
        (h.brushType = r.get('rippleEffect.brushType')),
        (h.period = 1e3 * r.get('rippleEffect.period')),
        (h.effectOffset = e / t.count()),
        (h.z = r.getShallow('z') || 0),
        (h.zlevel = r.getShallow('zlevel') || 0),
        (h.symbolType = a),
        (h.color = s),
        (h.rippleEffectColor = r.get('rippleEffect.color')),
        this.off('mouseover').off('mouseout').off('emphasis').off('normal'),
        'render' === h.showEffectOn)
      )
        this._effectCfg ? this.updateEffectAnimation(h) : this.startEffectAnimation(h), (this._effectCfg = h);
      else {
        (this._effectCfg = null), this.stopEffectAnimation();
        var c = this.childAt(0),
          d = function () {
            c.highlight(), 'render' !== h.showEffectOn && this.startEffectAnimation(h);
          },
          f = function () {
            c.downplay(), 'render' !== h.showEffectOn && this.stopEffectAnimation();
          };
        this.on('mouseover', d, this).on('mouseout', f, this).on('emphasis', d, this).on('normal', f, this);
      }
      this._effectCfg = h;
    }),
    (QM.fadeOut = function (t) {
      this.off('mouseover').off('mouseout').off('emphasis').off('normal'), t && t();
    }),
    h(Ad, Wm),
    wu({
      type: 'effectScatter',
      init: function () {
        this._symbolDraw = new Qc(Ad);
      },
      render: function (t) {
        var e = t.getData(),
          i = this._symbolDraw;
        i.updateData(e), this.group.add(i.group);
      },
      updateTransform: function (t) {
        var e = t.getData();
        this.group.dirty();
        var i = OM().reset(t);
        i.progress && i.progress({ start: 0, end: e.count() }, e), this._symbolDraw.updateLayout(e);
      },
      _updateGroupTransform: function (t) {
        var e = t.coordinateSystem;
        e && e.getRoamTransform && ((this.group.transform = Re(e.getRoamTransform())), this.group.decomposeTransform());
      },
      remove: function (t, e) {
        this._symbolDraw && this._symbolDraw.remove(e);
      },
      dispose: function () {},
    }),
    gu(LM('effectScatter', 'circle')),
    pu(OM('effectScatter')),
    h(kd, kS),
    (Pd.prototype.getIndicatorAxes = function () {
      return this._indicatorAxes;
    }),
    (Pd.prototype.dataToPoint = function (t, e) {
      var i = this._indicatorAxes[e];
      return this.coordToPoint(i.dataToCoord(t), e);
    }),
    (Pd.prototype.coordToPoint = function (t, e) {
      var i = this._indicatorAxes[e],
        n = i.angle,
        r = this.cx + t * Math.cos(n),
        a = this.cy - t * Math.sin(n);
      return [r, a];
    }),
    (Pd.prototype.pointToData = function (t) {
      var e = t[0] - this.cx,
        i = t[1] - this.cy,
        n = Math.sqrt(e * e + i * i);
      (e /= n), (i /= n);
      for (var r, a = Math.atan2(-i, e), o = 1 / 0, s = -1, l = 0; l < this._indicatorAxes.length; l++) {
        var u = this._indicatorAxes[l],
          h = Math.abs(a - u.angle);
        o > h && ((r = u), (s = l), (o = h));
      }
      return [s, +(r && r.coordToData(n))];
    }),
    (Pd.prototype.resize = function (t, e) {
      var i = t.get('center'),
        n = e.getWidth(),
        r = e.getHeight(),
        a = Math.min(n, r) / 2;
      (this.cx = so(i[0], n)), (this.cy = so(i[1], r)), (this.startAngle = (t.get('startAngle') * Math.PI) / 180);
      var o = t.get('radius');
      ('string' == typeof o || 'number' == typeof o) && (o = [0, o]),
        (this.r0 = so(o[0], a)),
        (this.r = so(o[1], a)),
        f(
          this._indicatorAxes,
          function (t, e) {
            t.setExtent(this.r0, this.r);
            var i = this.startAngle + (e * Math.PI * 2) / this._indicatorAxes.length;
            (i = Math.atan2(Math.sin(i), Math.cos(i))), (t.angle = i);
          },
          this,
        );
    }),
    (Pd.prototype.update = function (t) {
      function e(t) {
        var e = Math.pow(10, Math.floor(Math.log(t) / Math.LN10)),
          i = t / e;
        return 2 === i ? (i = 5) : (i *= 2), i * e;
      }
      var i = this._indicatorAxes,
        n = this._model;
      f(i, function (t) {
        t.scale.setExtent(1 / 0, -1 / 0);
      }),
        t.eachSeriesByType(
          'radar',
          function (e) {
            if ('radar' === e.get('coordinateSystem') && t.getComponent('radar', e.get('radarIndex')) === n) {
              var r = e.getData();
              f(i, function (t) {
                t.scale.unionExtentFromData(r, r.mapDimension(t.dim));
              });
            }
          },
          this,
        );
      var r = n.get('splitNumber');
      f(i, function (t) {
        var i = wh(t.scale, t.model);
        Sh(t.scale, t.model);
        var n = t.model,
          a = t.scale,
          o = n.getMin(),
          s = n.getMax(),
          l = a.getInterval();
        if (null != o && null != s) a.setExtent(+o, +s), a.setInterval((s - o) / r);
        else if (null != o) {
          var u;
          do (u = o + l * r), a.setExtent(+o, u), a.setInterval(l), (l = e(l));
          while (u < i[1] && isFinite(u) && isFinite(i[1]));
        } else if (null != s) {
          var h;
          do (h = s - l * r), a.setExtent(h, +s), a.setInterval(l), (l = e(l));
          while (h > i[0] && isFinite(h) && isFinite(i[0]));
        } else {
          var c = a.getTicks().length - 1;
          c > r && (l = e(l));
          var d = Math.round((i[0] + i[1]) / 2 / l) * l,
            f = Math.round(r / 2);
          a.setExtent(lo(d - f * l), lo(d + (r - f) * l)), a.setInterval(l);
        }
      });
    }),
    (Pd.dimensions = []),
    (Pd.create = function (t, e) {
      var i = [];
      return (
        t.eachComponent('radar', function (n) {
          var r = new Pd(n, t, e);
          i.push(r), (n.coordinateSystem = r);
        }),
        t.eachSeriesByType('radar', function (t) {
          'radar' === t.get('coordinateSystem') && (t.coordinateSystem = i[t.get('radarIndex') || 0]);
        }),
        i
      );
    }),
    ds.register('radar', Pd);
  var tI = BS.valueAxis,
    eI =
      (yu({
        type: 'radar',
        optionUpdated: function () {
          var t = this.get('boundaryGap'),
            e = this.get('splitNumber'),
            i = this.get('scale'),
            a = this.get('axisLine'),
            l = this.get('axisTick'),
            u = this.get('axisLabel'),
            h = this.get('name'),
            c = this.get('name.show'),
            d = this.get('name.formatter'),
            f = this.get('nameGap'),
            g = this.get('triggerEvent'),
            m = p(
              this.get('indicator') || [],
              function (p) {
                null != p.max && p.max > 0 && !p.min
                  ? (p.min = 0)
                  : null != p.min && p.min < 0 && !p.max && (p.max = 0);
                var m = h;
                if (
                  (null != p.color && (m = s({ color: p.color }, h)),
                  (p = r(
                    n(p),
                    {
                      boundaryGap: t,
                      splitNumber: e,
                      scale: i,
                      axisLine: a,
                      axisTick: l,
                      axisLabel: u,
                      name: p.text,
                      nameLocation: 'end',
                      nameGap: f,
                      nameTextStyle: m,
                      triggerEvent: g,
                    },
                    !1,
                  )),
                  c || (p.name = ''),
                  'string' == typeof d)
                ) {
                  var v = p.name;
                  p.name = d.replace('{value}', null != v ? v : '');
                } else 'function' == typeof d && (p.name = d(p.name, p));
                var y = o(new Qa(p, null, this.ecModel), gS);
                return (y.mainType = 'radar'), (y.componentIndex = this.componentIndex), y;
              },
              this,
            );
          this.getIndicatorModels = function () {
            return m;
          };
        },
        defaultOption: {
          zlevel: 0,
          z: 0,
          center: ['50%', '50%'],
          radius: '75%',
          startAngle: 90,
          name: { show: !0 },
          boundaryGap: [0, 0],
          splitNumber: 5,
          nameGap: 15,
          scale: !1,
          shape: 'polygon',
          axisLine: r({ lineStyle: { color: '#bbb' } }, tI.axisLine),
          axisLabel: Ld(tI.axisLabel, !1),
          axisTick: Ld(tI.axisTick, !1),
          splitLine: Ld(tI.splitLine, !0),
          splitArea: Ld(tI.splitArea, !0),
          indicator: [],
        },
      }),
      ['axisLine', 'axisTickLabel', 'axisName']);
  _u({
    type: 'radar',
    render: function (t) {
      var e = this.group;
      e.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t);
    },
    _buildAxes: function (t) {
      var e = t.coordinateSystem,
        i = e.getIndicatorAxes(),
        n = p(i, function (t) {
          var i = new nM(t.model, {
            position: [e.cx, e.cy],
            rotation: t.angle,
            labelDirection: -1,
            tickDirection: -1,
            nameDirection: 1,
          });
          return i;
        });
      f(
        n,
        function (t) {
          f(eI, t.add, t), this.group.add(t.getGroup());
        },
        this,
      );
    },
    _buildSplitLineAndArea: function (t) {
      function e(t, e, i) {
        var n = i % e.length;
        return (t[n] = t[n] || []), n;
      }
      var i = t.coordinateSystem,
        n = i.getIndicatorAxes();
      if (n.length) {
        var r = t.get('shape'),
          a = t.getModel('splitLine'),
          o = t.getModel('splitArea'),
          l = a.getModel('lineStyle'),
          u = o.getModel('areaStyle'),
          h = a.get('show'),
          c = o.get('show'),
          d = l.get('color'),
          g = u.get('color');
        (d = x(d) ? d : [d]), (g = x(g) ? g : [g]);
        var m = [],
          v = [];
        if ('circle' === r)
          for (var y = n[0].getTicksCoords(), _ = i.cx, w = i.cy, b = 0; b < y.length; b++) {
            if (h) {
              var S = e(m, d, b);
              m[S].push(new r_({ shape: { cx: _, cy: w, r: y[b].coord } }));
            }
            if (c && b < y.length - 1) {
              var S = e(v, g, b);
              v[S].push(new l_({ shape: { cx: _, cy: w, r0: y[b].coord, r: y[b + 1].coord } }));
            }
          }
        else
          for (
            var M,
              I = p(n, function (t, e) {
                var n = t.getTicksCoords();
                return (
                  (M = null == M ? n.length - 1 : Math.min(n.length - 1, M)),
                  p(n, function (t) {
                    return i.coordToPoint(t.coord, e);
                  })
                );
              }),
              C = [],
              b = 0;
            M >= b;
            b++
          ) {
            for (var T = [], D = 0; D < n.length; D++) T.push(I[D][b]);
            if ((T[0] ? T.push(T[0].slice()) : Cg && console.error("Can't draw value axis " + b), h)) {
              var S = e(m, d, b);
              m[S].push(new d_({ shape: { points: T } }));
            }
            if (c && C) {
              var S = e(v, g, b - 1);
              v[S].push(new c_({ shape: { points: T.concat(C) } }));
            }
            C = T.slice().reverse();
          }
        var A = l.getLineStyle(),
          k = u.getAreaStyle();
        f(
          v,
          function (t, e) {
            this.group.add(R_(t, { style: s({ stroke: 'none', fill: g[e % g.length] }, k), silent: !0 }));
          },
          this,
        ),
          f(
            m,
            function (t, e) {
              this.group.add(R_(t, { style: s({ fill: 'none', stroke: d[e % d.length] }, A), silent: !0 }));
            },
            this,
          );
      }
    },
  });
  var iI = Qx.extend({
    type: 'series.radar',
    dependencies: ['radar'],
    init: function () {
      iI.superApply(this, 'init', arguments),
        (this.legendDataProvider = function () {
          return this.getRawData();
        });
    },
    getInitialData: function () {
      return BM(this, { generateCoord: 'indicator_', generateCoordCount: 1 / 0 });
    },
    formatTooltip: function (t) {
      var e = this.getData(),
        i = this.coordinateSystem,
        n = i.getIndicatorAxes(),
        r = this.getData().getName(t);
      return (
        Co('' === r ? this.name : r) +
        '<br/>' +
        p(n, function (i) {
          var n = e.get(e.mapDimension(i.dim), t);
          return Co(i.name + ' : ' + n);
        }).join('<br />')
      );
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      coordinateSystem: 'radar',
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: { width: 2, type: 'solid' },
      label: { position: 'top' },
      symbol: 'emptyCircle',
      symbolSize: 4,
    },
  });
  wu({
    type: 'radar',
    render: function (t) {
      function e(t, e) {
        var i = t.getItemVisual(e, 'symbol') || 'circle',
          n = t.getItemVisual(e, 'color');
        if ('none' !== i) {
          var r = Od(t.getItemVisual(e, 'symbolSize')),
            a = Oh(i, -1, -1, 2, 2, n);
          return a.attr({ style: { strokeNoScale: !0 }, z2: 100, scale: [r[0] / 2, r[1] / 2] }), a;
        }
      }
      function i(i, n, r, a, o, s) {
        r.removeAll();
        for (var l = 0; l < n.length - 1; l++) {
          var u = e(a, o);
          u &&
            ((u.__dimIdx = l),
            i[l]
              ? (u.attr('position', i[l]), G_[s ? 'initProps' : 'updateProps'](u, { position: n[l] }, t, o))
              : u.attr('position', n[l]),
            r.add(u));
        }
      }
      function r(t) {
        return p(t, function () {
          return [a.cx, a.cy];
        });
      }
      var a = t.coordinateSystem,
        o = this.group,
        l = t.getData(),
        u = this._data;
      l
        .diff(u)
        .add(function (e) {
          var n = l.getItemLayout(e);
          if (n) {
            var a = new c_(),
              o = new d_(),
              s = { shape: { points: n } };
            (a.shape.points = r(n)), (o.shape.points = r(n)), Va(a, s, t, e), Va(o, s, t, e);
            var u = new Wm(),
              h = new Wm();
            u.add(o), u.add(a), u.add(h), i(o.shape.points, n, h, l, e, !0), l.setItemGraphicEl(e, u);
          }
        })
        .update(function (e, n) {
          var r = u.getItemGraphicEl(n),
            a = r.childAt(0),
            o = r.childAt(1),
            s = r.childAt(2),
            h = { shape: { points: l.getItemLayout(e) } };
          h.shape.points &&
            (i(a.shape.points, h.shape.points, s, l, e, !1), Ga(a, h, t), Ga(o, h, t), l.setItemGraphicEl(e, r));
        })
        .remove(function (t) {
          o.remove(u.getItemGraphicEl(t));
        })
        .execute(),
        l.eachItemGraphicEl(function (t, e) {
          var i = l.getItemModel(e),
            r = t.childAt(0),
            a = t.childAt(1),
            u = t.childAt(2),
            h = l.getItemVisual(e, 'color');
          o.add(t),
            r.useStyle(s(i.getModel('lineStyle').getLineStyle(), { fill: 'none', stroke: h })),
            (r.hoverStyle = i.getModel('emphasis.lineStyle').getLineStyle());
          var c = i.getModel('areaStyle'),
            d = i.getModel('emphasis.areaStyle'),
            f = c.isEmpty() && c.parentModel.isEmpty(),
            p = d.isEmpty() && d.parentModel.isEmpty();
          (p = p && f),
            (a.ignore = f),
            a.useStyle(s(c.getAreaStyle(), { fill: h, opacity: 0.7 })),
            (a.hoverStyle = d.getAreaStyle());
          var g = i.getModel('itemStyle').getItemStyle(['color']),
            m = i.getModel('emphasis.itemStyle').getItemStyle(),
            v = i.getModel('label'),
            y = i.getModel('emphasis.label');
          u.eachChild(function (t) {
            t.setStyle(g), (t.hoverStyle = n(m));
            var i = l.get(l.dimensions[t.__dimIdx], e);
            (null == i || isNaN(i)) && (i = ''),
              Da(t.style, t.hoverStyle, v, y, {
                labelFetcher: l.hostModel,
                labelDataIndex: e,
                labelDimIndex: t.__dimIdx,
                defaultText: i,
                autoColor: h,
                isRectText: !0,
              });
          }),
            (t.highDownOnUpdate = function (t, e) {
              a.attr('ignore', 'emphasis' === e ? p : f);
            }),
            Ma(t);
        }),
        (this._data = l);
    },
    remove: function () {
      this.group.removeAll(), (this._data = null);
    },
    dispose: function () {},
  });
  var nI = function (t) {
      t.eachSeriesByType('radar', function (t) {
        var e = t.getData(),
          i = [],
          n = t.coordinateSystem;
        if (n) {
          var r = n.getIndicatorAxes();
          f(r, function (t, a) {
            e.each(e.mapDimension(r[a].dim), function (t, e) {
              i[e] = i[e] || [];
              var r = n.dataToPoint(t, a);
              i[e][a] = zd(r) ? r : Ed(n);
            });
          }),
            e.each(function (t) {
              var r =
                v(i[t], function (t) {
                  return zd(t);
                }) || Ed(n);
              i[t].push(r.slice()), e.setItemLayout(t, i[t]);
            });
        }
      });
    },
    rI = function (t) {
      var e = t.polar;
      if (e) {
        x(e) || (e = [e]);
        var i = [];
        f(e, function (e) {
          e.indicator
            ? (e.type && !e.shape && (e.shape = e.type),
              (t.radar = t.radar || []),
              x(t.radar) || (t.radar = [t.radar]),
              t.radar.push(e))
            : i.push(e);
        }),
          (t.polar = i);
      }
      f(t.series, function (t) {
        t && 'radar' === t.type && t.polarIndex && (t.radarIndex = t.polarIndex);
      });
    };
  gu(HM('radar')), gu(LM('radar', 'circle')), pu(nI), uu(jM('radar')), lu(rI);
  for (
    var aI = [126, 25],
      oI = [
        [
          [0, 3.5],
          [7, 11.2],
          [15, 11.9],
          [30, 7],
          [42, 0.7],
          [52, 0.7],
          [56, 7.7],
          [59, 0.7],
          [64, 0.7],
          [64, 0],
          [5, 0],
          [0, 3.5],
        ],
        [
          [13, 16.1],
          [19, 14.7],
          [16, 21.7],
          [11, 23.1],
          [13, 16.1],
        ],
        [
          [12, 32.2],
          [14, 38.5],
          [15, 38.5],
          [13, 32.2],
          [12, 32.2],
        ],
        [
          [16, 47.6],
          [12, 53.2],
          [13, 53.2],
          [18, 47.6],
          [16, 47.6],
        ],
        [
          [6, 64.4],
          [8, 70],
          [9, 70],
          [8, 64.4],
          [6, 64.4],
        ],
        [
          [23, 82.6],
          [29, 79.8],
          [30, 79.8],
          [25, 82.6],
          [23, 82.6],
        ],
        [
          [37, 70.7],
          [43, 62.3],
          [44, 62.3],
          [39, 70.7],
          [37, 70.7],
        ],
        [
          [48, 51.1],
          [51, 45.5],
          [53, 45.5],
          [50, 51.1],
          [48, 51.1],
        ],
        [
          [51, 35],
          [51, 28.7],
          [53, 28.7],
          [53, 35],
          [51, 35],
        ],
        [
          [52, 22.4],
          [55, 17.5],
          [56, 17.5],
          [53, 22.4],
          [52, 22.4],
        ],
        [
          [58, 12.6],
          [62, 7],
          [63, 7],
          [60, 12.6],
          [58, 12.6],
        ],
        [
          [0, 3.5],
          [0, 93.1],
          [64, 93.1],
          [64, 0],
          [63, 0],
          [63, 92.4],
          [1, 92.4],
          [1, 3.5],
          [0, 3.5],
        ],
      ],
      sI = 0;
    sI < oI.length;
    sI++
  )
    for (var lI = 0; lI < oI[sI].length; lI++)
      (oI[sI][lI][0] /= 10.5), (oI[sI][lI][1] /= -14), (oI[sI][lI][0] += aI[0]), (oI[sI][lI][1] += aI[1]);
  var uI = function (t, e) {
      'china' === t &&
        e.push(
          new Fh(
            '南海诸岛',
            p(oI, function (t) {
              return { type: 'polygon', exterior: t };
            }),
            aI,
          ),
        );
    },
    hI = { 南海诸岛: [32, 80], 广东: [0, -10], 香港: [10, 5], 澳门: [-10, 10], 天津: [5, 5] },
    cI = function (t, e) {
      if ('china' === t) {
        var i = hI[e.name];
        if (i) {
          var n = e.center;
          (n[0] += i[0] / 10.5), (n[1] += -i[1] / 14);
        }
      }
    },
    dI = { Russia: [100, 60], 'United States': [-99, 38], 'United States of America': [-99, 38] },
    fI = function (t, e) {
      if ('world' === t) {
        var i = dI[e.name];
        if (i) {
          var n = e.center;
          (n[0] = i[0]), (n[1] = i[1]);
        }
      }
    },
    pI = [
      [
        [123.45165252685547, 25.73527164402261],
        [123.49731445312499, 25.73527164402261],
        [123.49731445312499, 25.750734064600884],
        [123.45165252685547, 25.750734064600884],
        [123.45165252685547, 25.73527164402261],
      ],
    ],
    gI = function (t, e) {
      'china' === t && '台湾' === e.name && e.geometries.push({ type: 'polygon', exterior: pI[0] });
    },
    mI = qn(),
    vI = {
      load: function (t, e) {
        var i = mI(e).parsed;
        if (i) return i;
        var n,
          r = e.specialAreas || {},
          a = e.geoJSON;
        try {
          n = a ? TS(a) : [];
        } catch (o) {
          throw new Error('Invalid geoJson format\n' + o.message);
        }
        return (
          f(n, function (e) {
            var i = e.name;
            cI(t, e), fI(t, e), gI(t, e);
            var n = r[i];
            n && e.transformTo(n.left, n.top, n.width, n.height);
          }),
          uI(t, n),
          (mI(e).parsed = { regions: n, boundingRect: Rd(n) })
        );
      },
    },
    yI = qn(),
    _I = {
      load: function (t, e) {
        var i = yI(e).originRoot;
        if (i) return { root: i, boundingRect: yI(e).boundingRect };
        var n = Bd(e);
        return (yI(e).originRoot = n.root), (yI(e).boundingRect = n.boundingRect), n;
      },
      makeGraphic: function (t, e, i) {
        var n = yI(e),
          r = n.rootMap || (n.rootMap = N()),
          a = r.get(i);
        if (a) return a;
        var o = n.originRoot,
          s = n.boundingRect;
        return n.originRootHostKey ? (a = Bd(e, s).root) : ((n.originRootHostKey = i), (a = o)), r.set(i, a);
      },
      removeGraphic: function (t, e, i) {
        var n = yI(e),
          r = n.rootMap;
        r && r.removeKey(i), i === n.originRootHostKey && (n.originRootHostKey = null);
      },
    },
    xI = { geoJSON: vI, svg: _I },
    wI = {
      load: function (t, e) {
        var i,
          n = [],
          r = N(),
          a = N(),
          o = Gd(t);
        return (
          f(o, function (o) {
            var s = xI[o.type].load(t, o);
            f(s.regions, function (t) {
              var i = t.name;
              e && e.hasOwnProperty(i) && (t = t.cloneShallow((i = e[i]))), n.push(t), r.set(i, t), a.set(i, t.center);
            });
            var l = s.boundingRect;
            l && (i ? i.union(l) : (i = l.clone()));
          }),
          { regions: n, regionsMap: r, nameCoordMap: a, boundingRect: i || new wi(0, 0, 0, 0) }
        );
      },
      makeGraphic: Nd('makeGraphic'),
      removeGraphic: Nd('removeGraphic'),
    },
    bI = Qx.extend({
      type: 'series.map',
      dependencies: ['geo'],
      layoutMode: 'box',
      needsDrawMap: !1,
      seriesGroup: [],
      getInitialData: function () {
        for (
          var t = BM(this, ['value']), e = t.mapDimension('value'), i = N(), n = [], r = [], a = 0, o = t.count();
          o > a;
          a++
        ) {
          var s = t.getName(a);
          i.set(s, !0), n.push({ name: s, value: t.get(e, a), selected: Fs(t, a, 'selected') });
        }
        var l = wI.load(this.getMapType(), this.option.nameMap);
        return (
          f(l.regions, function (t) {
            var e = t.name;
            i.get(e) || (n.push({ name: e }), r.push(e));
          }),
          this.updateSelectedMap(n),
          t.appendValues([], r),
          t
        );
      },
      getHostGeoModel: function () {
        var t = this.option.geoIndex;
        return null != t ? this.dependentModels.geo[t] : null;
      },
      getMapType: function () {
        return (this.getHostGeoModel() || this).option.map;
      },
      getRawValue: function (t) {
        var e = this.getData();
        return e.get(e.mapDimension('value'), t);
      },
      getRegionModel: function (t) {
        var e = this.getData();
        return e.getItemModel(e.indexOfName(t));
      },
      formatTooltip: function (t) {
        for (
          var e = this.getData(), i = Mo(this.getRawValue(t)), n = e.getName(t), r = this.seriesGroup, a = [], o = 0;
          o < r.length;
          o++
        ) {
          var s = r[o].originalData.indexOfName(n),
            l = e.mapDimension('value');
          isNaN(r[o].originalData.get(l, s)) || a.push(Co(r[o].name));
        }
        return a.join(', ') + '<br />' + Co(n + ' : ' + i);
      },
      getTooltipPosition: function (t) {
        if (null != t) {
          var e = this.getData().getName(t),
            i = this.coordinateSystem,
            n = i.getRegion(e);
          return n && i.dataToPoint(n.center);
        }
      },
      setZoom: function (t) {
        this.option.zoom = t;
      },
      setCenter: function (t) {
        this.option.center = t;
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'geo',
        map: '',
        left: 'center',
        top: 'center',
        aspectScale: 0.75,
        showLegendSymbol: !0,
        dataRangeHoverLink: !0,
        boundingCoords: null,
        center: null,
        zoom: 1,
        scaleLimit: null,
        label: { show: !1, color: '#000' },
        itemStyle: { borderWidth: 0.5, borderColor: '#444', areaColor: '#eee' },
        emphasis: { label: { show: !0, color: 'rgb(100,0,0)' }, itemStyle: { areaColor: 'rgba(255,215,0,0.8)' } },
      },
    });
  c(bI, NM);
  var SI = '\x00_ec_interaction_mutex';
  cu({ type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update' }, function () {}), c(Wd, Jg);
  var MI = { axisPointer: 1, tooltip: 1, brush: 1 };
  af.prototype = {
    constructor: af,
    draw: function (t, e, i, n) {
      var r = 'geo' === t.mainType,
        a = t.getData && t.getData();
      r &&
        e.eachComponent({ mainType: 'series', subType: 'map' }, function (e) {
          a || e.getHostGeoModel() !== t || (a = e.getData());
        });
      var o = t.coordinateSystem;
      this._updateBackground(o);
      var s = this._regionsGroup,
        l = this.group;
      o._roamTransformable.transform &&
        ((l.transform = o._roamTransformable.transform.slice()), l.decomposeTransform());
      var u = o._rawTransformable.scale,
        h = o._rawTransformable.position;
      s.removeAll();
      var c = ['itemStyle'],
        d = ['emphasis', 'itemStyle'],
        p = ['label'],
        g = ['emphasis', 'label'],
        m = N();
      f(o.regions, function (e) {
        var i = m.get(e.name) || m.set(e.name, new Wm()),
          n = new w_({ segmentIgnoreThreshold: 1, shape: { paths: [] } });
        i.add(n);
        var o,
          v = t.getRegionModel(e.name) || t,
          y = v.getModel(c),
          _ = v.getModel(d),
          x = ef(y),
          w = ef(_),
          b = v.getModel(p),
          S = v.getModel(g);
        if (a) {
          o = a.indexOfName(e.name);
          var M = a.getItemVisual(o, 'color', !0);
          M && (x.fill = M);
        }
        var I = function (t) {
          return [t[0] * u[0] + h[0], t[1] * u[1] + h[1]];
        };
        f(e.geometries, function (t) {
          if ('polygon' === t.type) {
            for (var e = [], i = 0; i < t.exterior.length; ++i) e.push(I(t.exterior[i]));
            n.shape.paths.push(new c_({ segmentIgnoreThreshold: 1, shape: { points: e } }));
            for (var i = 0; i < (t.interiors ? t.interiors.length : 0); ++i) {
              for (var r = t.interiors[i], e = [], a = 0; a < r.length; ++a) e.push(I(r[a]));
              n.shape.paths.push(new c_({ segmentIgnoreThreshold: 1, shape: { points: e } }));
            }
          }
        }),
          n.setStyle(x),
          (n.style.strokeNoScale = !0),
          (n.culling = !0);
        var C = b.get('show'),
          T = S.get('show'),
          D = a && isNaN(a.get(a.mapDimension('value'), o)),
          A = a && a.getItemLayout(o);
        if (r || (D && (C || T)) || (A && A.showLabel)) {
          var k,
            P = r ? e.name : o;
          (!a || o >= 0) && (k = t);
          var L = new n_({
            position: I(e.center.slice()),
            scale: [1 / l.scale[0], 1 / l.scale[1]],
            z2: 10,
            silent: !0,
          });
          Da(
            L.style,
            (L.hoverStyle = {}),
            b,
            S,
            { labelFetcher: k, labelDataIndex: P, defaultText: e.name, useInsideStyle: !1 },
            { textAlign: 'center', textVerticalAlign: 'middle' },
          ),
            i.add(L);
        }
        if (a) a.setItemGraphicEl(o, i);
        else {
          var v = t.getRegionModel(e.name);
          n.eventData = {
            componentType: 'geo',
            componentIndex: t.componentIndex,
            geoIndex: t.componentIndex,
            name: e.name,
            region: (v && v.option) || {},
          };
        }
        var O = i.__regions || (i.__regions = []);
        O.push(e), (i.highDownSilentOnTouch = !!t.get('selectedMode')), Ma(i, w), s.add(i);
      }),
        this._updateController(t, e, i),
        nf(this, t, s, i, n),
        rf(t, s);
    },
    remove: function () {
      this._regionsGroup.removeAll(),
        this._backgroundGroup.removeAll(),
        this._controller.dispose(),
        this._mapName && wI.removeGraphic(this._mapName, this.uid),
        (this._mapName = null),
        (this._controllerHost = {});
    },
    _updateBackground: function (t) {
      var e = t.map;
      this._mapName !== e &&
        f(
          wI.makeGraphic(e, this.uid),
          function (t) {
            this._backgroundGroup.add(t);
          },
          this,
        ),
        (this._mapName = e);
    },
    _updateController: function (t, e, i) {
      function n() {
        var e = { type: 'geoRoam', componentType: l };
        return (e[l + 'Id'] = t.id), e;
      }
      var r = t.coordinateSystem,
        a = this._controller,
        s = this._controllerHost;
      (s.zoomLimit = t.get('scaleLimit')), (s.zoom = r.getZoom()), a.enable(t.get('roam') || !1);
      var l = t.mainType;
      a.off('pan').on(
        'pan',
        function (t) {
          (this._mouseDownFlag = !1), Jd(s, t.dx, t.dy), i.dispatchAction(o(n(), { dx: t.dx, dy: t.dy }));
        },
        this,
      ),
        a.off('zoom').on(
          'zoom',
          function (t) {
            if (
              ((this._mouseDownFlag = !1),
              Qd(s, t.scale, t.originX, t.originY),
              i.dispatchAction(o(n(), { zoom: t.scale, originX: t.originX, originY: t.originY })),
              this._updateGroup)
            ) {
              var e = this.group.scale;
              this._regionsGroup.traverse(function (t) {
                'text' === t.type && t.attr('scale', [1 / e[0], 1 / e[1]]);
              });
            }
          },
          this,
        ),
        a.setPointerChecker(function (e, n, a) {
          return r.getViewRectAfterRoam().contain(n, a) && !tf(e, i, t);
        });
    },
  };
  var II = '__seriesMapHighDown',
    CI = '__seriesMapCallKey';
  wu({
    type: 'map',
    render: function (t, e, i, n) {
      if (!n || 'mapToggleSelect' !== n.type || n.from !== this.uid) {
        var r = this.group;
        if ((r.removeAll(), !t.getHostGeoModel())) {
          if (n && 'geoRoam' === n.type && 'series' === n.componentType && n.seriesId === t.id) {
            var a = this._mapDraw;
            a && r.add(a.group);
          } else if (t.needsDrawMap) {
            var a = this._mapDraw || new af(i, !0);
            r.add(a.group), a.draw(t, e, i, this, n), (this._mapDraw = a);
          } else this._mapDraw && this._mapDraw.remove(), (this._mapDraw = null);
          t.get('showLegendSymbol') && e.getComponent('legend') && this._renderSymbols(t, e, i);
        }
      }
    },
    remove: function () {
      this._mapDraw && this._mapDraw.remove(), (this._mapDraw = null), this.group.removeAll();
    },
    dispose: function () {
      this._mapDraw && this._mapDraw.remove(), (this._mapDraw = null);
    },
    _renderSymbols: function (t) {
      var e = t.originalData,
        i = this.group;
      e.each(e.mapDimension('value'), function (n, r) {
        if (!isNaN(n)) {
          var a = e.getItemLayout(r);
          if (a && a.point) {
            var s = a.point,
              l = a.offset,
              u = new r_({
                style: { fill: t.getData().getVisual('color') },
                shape: { cx: s[0] + 9 * l, cy: s[1], r: 3 },
                silent: !0,
                z2: 8 + (l ? 0 : A_ + 1),
              });
            if (!l) {
              var h = t.mainSeries.getData(),
                c = e.getName(r),
                d = h.indexOfName(c),
                f = e.getItemModel(r),
                p = f.getModel('label'),
                g = f.getModel('emphasis.label'),
                m = h.getItemGraphicEl(d),
                v = A(t.getFormattedLabel(d, 'normal'), c),
                y = A(t.getFormattedLabel(d, 'emphasis'), v),
                x = m[II],
                w = Math.random();
              if (!x) {
                x = m[II] = {};
                var b = _(of, !0),
                  S = _(of, !1);
                m.on('mouseover', b).on('mouseout', S).on('emphasis', b).on('normal', S);
              }
              (m[CI] = w),
                o(x, {
                  recordVersion: w,
                  circle: u,
                  labelModel: p,
                  hoverLabelModel: g,
                  emphasisText: y,
                  normalText: v,
                }),
                sf(x, !1);
            }
            i.add(u);
          }
        }
      });
    },
  }),
    cu({ type: 'geoRoam', event: 'geoRoam', update: 'updateTransform' }, function (t, e) {
      var i = t.componentType || 'series';
      e.eachComponent({ mainType: i, query: t }, function (e) {
        var n = e.coordinateSystem;
        if ('geo' === n.type) {
          var r = lf(n, t, e.get('scaleLimit'));
          e.setCenter && e.setCenter(r.center),
            e.setZoom && e.setZoom(r.zoom),
            'series' === i &&
              f(e.seriesGroup, function (t) {
                t.setCenter(r.center), t.setZoom(r.zoom);
              });
        }
      });
    });
  var TI = ae;
  c(uf, pm),
    (hf.prototype = {
      constructor: hf,
      type: 'view',
      dimensions: ['x', 'y'],
      setBoundingRect: function (t, e, i, n) {
        return (this._rect = new wi(t, e, i, n)), this._rect;
      },
      getBoundingRect: function () {
        return this._rect;
      },
      setViewRect: function (t, e, i, n) {
        this.transformTo(t, e, i, n), (this._viewRect = new wi(t, e, i, n));
      },
      transformTo: function (t, e, i, n) {
        var r = this.getBoundingRect(),
          a = this._rawTransformable;
        (a.transform = r.calculateTransform(new wi(t, e, i, n))), a.decomposeTransform(), this._updateTransform();
      },
      setCenter: function (t) {
        t && ((this._center = t), this._updateCenterAndZoom());
      },
      setZoom: function (t) {
        t = t || 1;
        var e = this.zoomLimit;
        e && (null != e.max && (t = Math.min(e.max, t)), null != e.min && (t = Math.max(e.min, t))),
          (this._zoom = t),
          this._updateCenterAndZoom();
      },
      getDefaultCenter: function () {
        var t = this.getBoundingRect(),
          e = t.x + t.width / 2,
          i = t.y + t.height / 2;
        return [e, i];
      },
      getCenter: function () {
        return this._center || this.getDefaultCenter();
      },
      getZoom: function () {
        return this._zoom || 1;
      },
      getRoamTransform: function () {
        return this._roamTransformable.getLocalTransform();
      },
      _updateCenterAndZoom: function () {
        var t = this._rawTransformable.getLocalTransform(),
          e = this._roamTransformable,
          i = this.getDefaultCenter(),
          n = this.getCenter(),
          r = this.getZoom();
        (n = ae([], n, t)),
          (i = ae([], i, t)),
          (e.origin = n),
          (e.position = [i[0] - n[0], i[1] - n[1]]),
          (e.scale = [r, r]),
          this._updateTransform();
      },
      _updateTransform: function () {
        var t = this._roamTransformable,
          e = this._rawTransformable;
        (e.parent = t),
          t.updateTransform(),
          e.updateTransform(),
          ke(this.transform || (this.transform = []), e.transform || De()),
          (this._rawTransform = e.getLocalTransform()),
          (this.invTransform = this.invTransform || []),
          Ee(this.invTransform, this.transform),
          this.decomposeTransform();
      },
      getViewRect: function () {
        return this._viewRect;
      },
      getViewRectAfterRoam: function () {
        var t = this.getBoundingRect().clone();
        return t.applyTransform(this.transform), t;
      },
      dataToPoint: function (t, e, i) {
        var n = e ? this._rawTransform : this.transform;
        return (i = i || []), n ? TI(i, t, n) : H(i, t);
      },
      pointToData: function (t) {
        var e = this.invTransform;
        return e ? TI([], t, e) : [t[0], t[1]];
      },
      convertToPixel: _(cf, 'dataToPoint'),
      convertFromPixel: _(cf, 'pointToData'),
      containPoint: function (t) {
        return this.getViewRectAfterRoam().contain(t[0], t[1]);
      },
    }),
    c(hf, pm),
    (df.prototype = {
      constructor: df,
      type: 'geo',
      dimensions: ['lng', 'lat'],
      containCoord: function (t) {
        for (var e = this.regions, i = 0; i < e.length; i++) if (e[i].contain(t)) return !0;
        return !1;
      },
      transformTo: function (t, e, i, n) {
        var r = this.getBoundingRect(),
          a = this._invertLongitute;
        (r = r.clone()), a && (r.y = -r.y - r.height);
        var o = this._rawTransformable;
        if (((o.transform = r.calculateTransform(new wi(t, e, i, n))), o.decomposeTransform(), a)) {
          var s = o.scale;
          s[1] = -s[1];
        }
        o.updateTransform(), this._updateTransform();
      },
      getRegion: function (t) {
        return this._regionsMap.get(t);
      },
      getRegionByCoord: function (t) {
        for (var e = this.regions, i = 0; i < e.length; i++) if (e[i].contain(t)) return e[i];
      },
      addGeoCoord: function (t, e) {
        this._nameCoordMap.set(t, e);
      },
      getGeoCoord: function (t) {
        return this._nameCoordMap.get(t);
      },
      getBoundingRect: function () {
        return this._rect;
      },
      dataToPoint: function (t, e, i) {
        return (
          'string' == typeof t && (t = this.getGeoCoord(t)), t ? hf.prototype.dataToPoint.call(this, t, e, i) : void 0
        );
      },
      convertToPixel: _(ff, 'dataToPoint'),
      convertFromPixel: _(ff, 'pointToData'),
    }),
    c(df, hf);
  var DI = {
    dimensions: df.prototype.dimensions,
    create: function (t, e) {
      var i = [];
      t.eachComponent('geo', function (t, n) {
        var r = t.get('map'),
          a = t.get('aspectScale'),
          o = !0,
          s = Rw.retrieveMap(r);
        s && s[0] && 'svg' === s[0].type ? (null == a && (a = 1), (o = !1)) : null == a && (a = 0.75);
        var l = new df(r + n, r, t.get('nameMap'), o);
        (l.aspectScale = a),
          (l.zoomLimit = t.get('scaleLimit')),
          i.push(l),
          gf(l, t),
          (t.coordinateSystem = l),
          (l.model = t),
          (l.resize = pf),
          l.resize(t, e);
      }),
        t.eachSeries(function (t) {
          var e = t.get('coordinateSystem');
          if ('geo' === e) {
            var n = t.get('geoIndex') || 0;
            t.coordinateSystem = i[n];
          }
        });
      var n = {};
      return (
        t.eachSeriesByType('map', function (t) {
          if (!t.getHostGeoModel()) {
            var e = t.getMapType();
            (n[e] = n[e] || []), n[e].push(t);
          }
        }),
        f(n, function (t, n) {
          var r = p(t, function (t) {
              return t.get('nameMap');
            }),
            o = new df(n, n, a(r));
          (o.zoomLimit = D.apply(
            null,
            p(t, function (t) {
              return t.get('scaleLimit');
            }),
          )),
            i.push(o),
            (o.resize = pf),
            (o.aspectScale = t[0].get('aspectScale')),
            o.resize(t[0], e),
            f(t, function (t) {
              (t.coordinateSystem = o), gf(o, t);
            });
        }),
        i
      );
    },
    getFilledRegions: function (t, e, i) {
      for (var n = (t || []).slice(), r = N(), a = 0; a < n.length; a++) r.set(n[a].name, n[a]);
      var o = wI.load(e, i);
      return (
        f(o.regions, function (t) {
          var e = t.name;
          !r.get(e) && n.push({ name: e });
        }),
        n
      );
    },
  };
  du('geo', DI);
  var AI = function (t) {
      var e = {};
      t.eachSeriesByType('map', function (i) {
        var n = i.getMapType();
        if (!i.getHostGeoModel() && !e[n]) {
          var r = {};
          f(i.seriesGroup, function (e) {
            var i = e.coordinateSystem,
              n = e.originalData;
            e.get('showLegendSymbol') &&
              t.getComponent('legend') &&
              n.each(n.mapDimension('value'), function (t, e) {
                var a = n.getName(e),
                  o = i.getRegion(a);
                if (o && !isNaN(t)) {
                  var s = r[a] || 0,
                    l = i.dataToPoint(o.center);
                  (r[a] = s + 1), n.setItemLayout(e, { point: l, offset: s });
                }
              });
          });
          var a = i.getData();
          a.each(function (t) {
            var e = a.getName(t),
              i = a.getItemLayout(t) || {};
            (i.showLabel = !r[e]), a.setItemLayout(t, i);
          }),
            (e[n] = !0);
        }
      });
    },
    kI = function (t) {
      t.eachSeriesByType('map', function (t) {
        var e = t.get('color'),
          i = t.getModel('itemStyle'),
          n = i.get('areaColor'),
          r = i.get('color') || e[t.seriesIndex % e.length];
        t.getData().setVisual({ areaColor: n, color: r });
      });
    },
    PI = function (t) {
      var e = {};
      t.eachSeriesByType('map', function (t) {
        var i = t.getHostGeoModel(),
          n = i ? 'o' + i.id : 'i' + t.getMapType();
        (e[n] = e[n] || []).push(t);
      }),
        f(e, function (t) {
          for (
            var e = mf(
                p(t, function (t) {
                  return t.getData();
                }),
                t[0].get('mapValueCalculation'),
              ),
              i = 0;
            i < t.length;
            i++
          )
            t[i].originalData = t[i].getData();
          for (var i = 0; i < t.length; i++)
            (t[i].seriesGroup = t),
              (t[i].needsDrawMap = 0 === i && !t[i].getHostGeoModel()),
              t[i].setData(e.cloneShallow()),
              (t[i].mainSeries = t[0]);
        });
    },
    LI = function (t) {
      var e = [];
      f(t.series, function (t) {
        t && 'map' === t.type && (e.push(t), (t.map = t.map || t.mapType), s(t, t.mapLocation));
      });
    };
  pu(AI),
    gu(kI),
    uu(nb.PROCESSOR.STATISTIC, PI),
    lu(LI),
    VM('map', [
      { type: 'mapToggleSelect', event: 'mapselectchanged', method: 'toggleSelected' },
      { type: 'mapSelect', event: 'mapselected', method: 'select' },
      { type: 'mapUnSelect', event: 'mapunselected', method: 'unSelect' },
    ]);
  var OI = 'undefined' == typeof Uint32Array ? Array : Uint32Array,
    zI = 'undefined' == typeof Float64Array ? Array : Float64Array,
    EI = Qx.extend({
      type: 'series.lines',
      dependencies: ['grid', 'polar'],
      visualColorAccessPath: 'lineStyle.color',
      init: function (t) {
        (t.data = t.data || []), vf(t);
        var e = this._processFlatCoordsArray(t.data);
        (this._flatCoords = e.flatCoords),
          (this._flatCoordsOffset = e.flatCoordsOffset),
          e.flatCoords && (t.data = new Float32Array(e.count)),
          EI.superApply(this, 'init', arguments);
      },
      mergeOption: function (t) {
        if (((t.data = t.data || []), vf(t), t.data)) {
          var e = this._processFlatCoordsArray(t.data);
          (this._flatCoords = e.flatCoords),
            (this._flatCoordsOffset = e.flatCoordsOffset),
            e.flatCoords && (t.data = new Float32Array(e.count));
        }
        EI.superApply(this, 'mergeOption', arguments);
      },
      appendData: function (t) {
        var e = this._processFlatCoordsArray(t.data);
        e.flatCoords &&
          (this._flatCoords
            ? ((this._flatCoords = F(this._flatCoords, e.flatCoords)),
              (this._flatCoordsOffset = F(this._flatCoordsOffset, e.flatCoordsOffset)))
            : ((this._flatCoords = e.flatCoords), (this._flatCoordsOffset = e.flatCoordsOffset)),
          (t.data = new Float32Array(e.count))),
          this.getRawData().appendData(t.data);
      },
      _getCoordsFromItemModel: function (t) {
        var e = this.getData().getItemModel(t),
          i = e.option instanceof Array ? e.option : e.getShallow('coords');
        if (Cg && !(i instanceof Array && i.length > 0 && i[0] instanceof Array))
          throw new Error('Invalid coords ' + JSON.stringify(i) + '. Lines must have 2d coords array in data item.');
        return i;
      },
      getLineCoordsCount: function (t) {
        return this._flatCoordsOffset ? this._flatCoordsOffset[2 * t + 1] : this._getCoordsFromItemModel(t).length;
      },
      getLineCoords: function (t, e) {
        if (this._flatCoordsOffset) {
          for (var i = this._flatCoordsOffset[2 * t], n = this._flatCoordsOffset[2 * t + 1], r = 0; n > r; r++)
            (e[r] = e[r] || []), (e[r][0] = this._flatCoords[i + 2 * r]), (e[r][1] = this._flatCoords[i + 2 * r + 1]);
          return n;
        }
        for (var a = this._getCoordsFromItemModel(t), r = 0; r < a.length; r++)
          (e[r] = e[r] || []), (e[r][0] = a[r][0]), (e[r][1] = a[r][1]);
        return a.length;
      },
      _processFlatCoordsArray: function (t) {
        var e = 0;
        if ((this._flatCoords && (e = this._flatCoords.length), 'number' == typeof t[0])) {
          for (var i = t.length, n = new OI(i), r = new zI(i), a = 0, o = 0, s = 0, l = 0; i > l; ) {
            s++;
            var u = t[l++];
            (n[o++] = a + e), (n[o++] = u);
            for (var h = 0; u > h; h++) {
              var c = t[l++],
                d = t[l++];
              if (((r[a++] = c), (r[a++] = d), l > i && Cg)) throw new Error('Invalid data format.');
            }
          }
          return { flatCoordsOffset: new Uint32Array(n.buffer, 0, o), flatCoords: r, count: s };
        }
        return { flatCoordsOffset: null, flatCoords: null, count: t.length };
      },
      getInitialData: function (t) {
        if (Cg) {
          var e = ds.get(t.coordinateSystem);
          if (!e) throw new Error('Unkown coordinate system ' + t.coordinateSystem);
        }
        var i = new Rb(['value'], this);
        return (
          (i.hasItemOption = !1),
          i.initData(t.data, [], function (t, e, n, r) {
            if (t instanceof Array) return 0 / 0;
            i.hasItemOption = !0;
            var a = t.value;
            return null != a ? (a instanceof Array ? a[r] : a) : void 0;
          }),
          i
        );
      },
      formatTooltip: function (t) {
        var e = this.getData(),
          i = e.getItemModel(t),
          n = i.get('name');
        if (n) return n;
        var r = i.get('fromName'),
          a = i.get('toName'),
          o = [];
        return null != r && o.push(r), null != a && o.push(a), Co(o.join(' > '));
      },
      preventIncremental: function () {
        return !!this.get('effect.show');
      },
      getProgressive: function () {
        var t = this.option.progressive;
        return null == t ? (this.option.large ? 1e4 : this.get('progressive')) : t;
      },
      getProgressiveThreshold: function () {
        var t = this.option.progressiveThreshold;
        return null == t ? (this.option.large ? 2e4 : this.get('progressiveThreshold')) : t;
      },
      defaultOption: {
        coordinateSystem: 'geo',
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        hoverAnimation: !0,
        xAxisIndex: 0,
        yAxisIndex: 0,
        symbol: ['none', 'none'],
        symbolSize: [10, 10],
        geoIndex: 0,
        effect: { show: !1, period: 4, constantSpeed: 0, symbol: 'circle', symbolSize: 3, loop: !0, trailLength: 0.2 },
        large: !1,
        largeThreshold: 2e3,
        polyline: !1,
        clip: !0,
        label: { show: !1, position: 'end' },
        lineStyle: { opacity: 0.5 },
      },
    }),
    RI = v_.prototype,
    BI = __.prototype,
    NI = ea({
      type: 'ec-line',
      style: { stroke: '#000', fill: null },
      shape: { x1: 0, y1: 0, x2: 0, y2: 0, percent: 1, cpx1: null, cpy1: null },
      buildPath: function (t, e) {
        this[yf(e) ? '_buildPathLine' : '_buildPathCurve'](t, e);
      },
      _buildPathLine: RI.buildPath,
      _buildPathCurve: BI.buildPath,
      pointAt: function (t) {
        return this[yf(this.shape) ? '_pointAtLine' : '_pointAtCurve'](t);
      },
      _pointAtLine: RI.pointAt,
      _pointAtCurve: BI.pointAt,
      tangentAt: function (t) {
        var e = this.shape,
          i = yf(e) ? [e.x2 - e.x1, e.y2 - e.y1] : this._tangentAtCurve(t);
        return te(i, i);
      },
      _tangentAtCurve: BI.tangentAt,
    }),
    FI = ['fromSymbol', 'toSymbol'],
    GI = Mf.prototype;
  (GI.beforeUpdate = Sf),
    (GI._createLine = function (t, e, i) {
      var n = t.hostModel,
        r = t.getItemLayout(e),
        a = wf(r);
      (a.shape.percent = 0), Va(a, { shape: { percent: 1 } }, n, e), this.add(a);
      var o = new n_({ name: 'label', lineLabelOriginalOpacity: 1 });
      this.add(o),
        f(
          FI,
          function (i) {
            var n = xf(i, t, e);
            this.add(n), (this[_f(i)] = t.getItemVisual(e, i));
          },
          this,
        ),
        this._updateCommonStl(t, e, i);
    }),
    (GI.updateData = function (t, e, i) {
      var n = t.hostModel,
        r = this.childOfName('line'),
        a = t.getItemLayout(e),
        o = { shape: {} };
      bf(o.shape, a),
        Ga(r, o, n, e),
        f(
          FI,
          function (i) {
            var n = t.getItemVisual(e, i),
              r = _f(i);
            if (this[r] !== n) {
              this.remove(this.childOfName(i));
              var a = xf(i, t, e);
              this.add(a);
            }
            this[r] = n;
          },
          this,
        ),
        this._updateCommonStl(t, e, i);
    }),
    (GI._updateCommonStl = function (t, e, i) {
      var n = t.hostModel,
        r = this.childOfName('line'),
        a = i && i.lineStyle,
        o = i && i.hoverLineStyle,
        l = i && i.labelModel,
        u = i && i.hoverLabelModel;
      if (!i || t.hasItemOption) {
        var h = t.getItemModel(e);
        (a = h.getModel('lineStyle').getLineStyle()),
          (o = h.getModel('emphasis.lineStyle').getLineStyle()),
          (l = h.getModel('label')),
          (u = h.getModel('emphasis.label'));
      }
      var c = t.getItemVisual(e, 'color'),
        d = k(t.getItemVisual(e, 'opacity'), a.opacity, 1);
      r.useStyle(s({ strokeNoScale: !0, fill: 'none', stroke: c, opacity: d }, a)),
        (r.hoverStyle = o),
        f(
          FI,
          function (t) {
            var e = this.childOfName(t);
            e && (e.setColor(c), e.setStyle({ opacity: d }));
          },
          this,
        );
      var p,
        g,
        m = l.getShallow('show'),
        v = u.getShallow('show'),
        y = this.childOfName('label');
      if ((m || v) && ((p = c || '#000'), (g = n.getFormattedLabel(e, 'normal', t.dataType)), null == g)) {
        var _ = n.getRawValue(e);
        g = null == _ ? t.getName(e) : isFinite(_) ? lo(_) : _;
      }
      var x = m ? g : null,
        w = v ? A(n.getFormattedLabel(e, 'emphasis', t.dataType), g) : null,
        b = y.style;
      (null != x || null != w) &&
        (ka(y.style, l, { text: x }, { autoColor: p }),
        (y.__textAlign = b.textAlign),
        (y.__verticalAlign = b.textVerticalAlign),
        (y.__position = l.get('position') || 'middle')),
        (y.hoverStyle =
          null != w
            ? {
                text: w,
                textFill: u.getTextColor(!0),
                fontStyle: u.getShallow('fontStyle'),
                fontWeight: u.getShallow('fontWeight'),
                fontSize: u.getShallow('fontSize'),
                fontFamily: u.getShallow('fontFamily'),
              }
            : { text: null }),
        (y.ignore = !m && !v),
        Ma(this);
    }),
    (GI.highlight = function () {
      this.trigger('emphasis');
    }),
    (GI.downplay = function () {
      this.trigger('normal');
    }),
    (GI.updateLayout = function (t, e) {
      this.setLinePoints(t.getItemLayout(e));
    }),
    (GI.setLinePoints = function (t) {
      var e = this.childOfName('line');
      bf(e.shape, t), e.dirty();
    }),
    h(Mf, Wm);
  var VI = If.prototype;
  (VI.isPersistent = function () {
    return !0;
  }),
    (VI.updateData = function (t) {
      var e = this,
        i = e.group,
        n = e._lineData;
      (e._lineData = t), n || i.removeAll();
      var r = Df(t);
      t.diff(n)
        .add(function (i) {
          Cf(e, t, i, r);
        })
        .update(function (i, a) {
          Tf(e, n, t, a, i, r);
        })
        .remove(function (t) {
          i.remove(n.getItemGraphicEl(t));
        })
        .execute();
    }),
    (VI.updateLayout = function () {
      var t = this._lineData;
      t &&
        t.eachItemGraphicEl(function (e, i) {
          e.updateLayout(t, i);
        }, this);
    }),
    (VI.incrementalPrepareUpdate = function (t) {
      (this._seriesScope = Df(t)), (this._lineData = null), this.group.removeAll();
    }),
    (VI.incrementalUpdate = function (t, e) {
      function i(t) {
        t.isGroup || (t.incremental = t.useHoverLayer = !0);
      }
      for (var n = t.start; n < t.end; n++) {
        var r = e.getItemLayout(n);
        if (kf(r)) {
          var a = new this._ctor(e, n, this._seriesScope);
          a.traverse(i), this.group.add(a), e.setItemGraphicEl(n, a);
        }
      }
    }),
    (VI.remove = function () {
      this._clearIncremental(), (this._incremental = null), this.group.removeAll();
    }),
    (VI._clearIncremental = function () {
      var t = this._incremental;
      t && t.clearDisplaybles();
    });
  var HI = Pf.prototype;
  (HI.createLine = function (t, e, i) {
    return new Mf(t, e, i);
  }),
    (HI._updateEffectSymbol = function (t, e) {
      var i = t.getItemModel(e),
        n = i.getModel('effect'),
        r = n.get('symbolSize'),
        a = n.get('symbol');
      x(r) || (r = [r, r]);
      var o = n.get('color') || t.getItemVisual(e, 'color'),
        s = this.childAt(1);
      this._symbolType !== a &&
        (this.remove(s), (s = Oh(a, -0.5, -0.5, 1, 1, o)), (s.z2 = 100), (s.culling = !0), this.add(s)),
        s &&
          (s.setStyle('shadowColor', o),
          s.setStyle(n.getItemStyle(['color'])),
          s.attr('scale', r),
          s.setColor(o),
          s.attr('scale', r),
          (this._symbolType = a),
          this._updateEffectAnimation(t, n, e));
    }),
    (HI._updateEffectAnimation = function (t, e, i) {
      var n = this.childAt(1);
      if (n) {
        var r = this,
          a = t.getItemLayout(i),
          o = 1e3 * e.get('period'),
          s = e.get('loop'),
          l = e.get('constantSpeed'),
          u = D(e.get('delay'), function (e) {
            return ((e / t.count()) * o) / 3;
          }),
          h = 'function' == typeof u;
        if (
          ((n.ignore = !0),
          this.updateAnimationPoints(n, a),
          l > 0 && (o = (this.getLineLength(n) / l) * 1e3),
          o !== this._period || s !== this._loop)
        ) {
          n.stopAnimation();
          var c = u;
          h && (c = u(i)), n.__t > 0 && (c = -o * n.__t), (n.__t = 0);
          var d = n
            .animate('', s)
            .when(o, { __t: 1 })
            .delay(c)
            .during(function () {
              r.updateSymbolPosition(n);
            });
          s ||
            d.done(function () {
              r.remove(n);
            }),
            d.start();
        }
        (this._period = o), (this._loop = s);
      }
    }),
    (HI.getLineLength = function (t) {
      return jg(t.__p1, t.__cp1) + jg(t.__cp1, t.__p2);
    }),
    (HI.updateAnimationPoints = function (t, e) {
      (t.__p1 = e[0]), (t.__p2 = e[1]), (t.__cp1 = e[2] || [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2]);
    }),
    (HI.updateData = function (t, e, i) {
      this.childAt(0).updateData(t, e, i), this._updateEffectSymbol(t, e);
    }),
    (HI.updateSymbolPosition = function (t) {
      var e = t.__p1,
        i = t.__p2,
        n = t.__cp1,
        r = t.__t,
        a = t.position,
        o = mr,
        s = vr;
      (a[0] = o(e[0], n[0], i[0], r)), (a[1] = o(e[1], n[1], i[1], r));
      var l = s(e[0], n[0], i[0], r),
        u = s(e[1], n[1], i[1], r);
      (t.rotation = -Math.atan2(u, l) - Math.PI / 2), (t.ignore = !1);
    }),
    (HI.updateLayout = function (t, e) {
      this.childAt(0).updateLayout(t, e);
      var i = t.getItemModel(e).getModel('effect');
      this._updateEffectAnimation(t, i, e);
    }),
    h(Pf, Wm);
  var WI = Lf.prototype;
  (WI._createPolyline = function (t, e, i) {
    var n = t.getItemLayout(e),
      r = new d_({ shape: { points: n } });
    this.add(r), this._updateCommonStl(t, e, i);
  }),
    (WI.updateData = function (t, e, i) {
      var n = t.hostModel,
        r = this.childAt(0),
        a = { shape: { points: t.getItemLayout(e) } };
      Ga(r, a, n, e), this._updateCommonStl(t, e, i);
    }),
    (WI._updateCommonStl = function (t, e, i) {
      var n = this.childAt(0),
        r = t.getItemModel(e),
        a = t.getItemVisual(e, 'color'),
        o = i && i.lineStyle,
        l = i && i.hoverLineStyle;
      (!i || t.hasItemOption) &&
        ((o = r.getModel('lineStyle').getLineStyle()), (l = r.getModel('emphasis.lineStyle').getLineStyle())),
        n.useStyle(s({ strokeNoScale: !0, fill: 'none', stroke: a }, o)),
        (n.hoverStyle = l),
        Ma(this);
    }),
    (WI.updateLayout = function (t, e) {
      var i = this.childAt(0);
      i.setShape('points', t.getItemLayout(e));
    }),
    h(Lf, Wm);
  var UI = Of.prototype;
  (UI.createLine = function (t, e, i) {
    return new Lf(t, e, i);
  }),
    (UI.updateAnimationPoints = function (t, e) {
      this._points = e;
      for (var i = [0], n = 0, r = 1; r < e.length; r++) {
        var a = e[r - 1],
          o = e[r];
        (n += jg(a, o)), i.push(n);
      }
      if (0 !== n) {
        for (var r = 0; r < i.length; r++) i[r] /= n;
        (this._offsets = i), (this._length = n);
      }
    }),
    (UI.getLineLength = function () {
      return this._length;
    }),
    (UI.updateSymbolPosition = function (t) {
      var e = t.__t,
        i = this._points,
        n = this._offsets,
        r = i.length;
      if (n) {
        var a,
          o = this._lastFrame;
        if (e < this._lastFramePercent) {
          var s = Math.min(o + 1, r - 1);
          for (a = s; a >= 0 && !(n[a] <= e); a--);
          a = Math.min(a, r - 2);
        } else {
          for (var a = o; r > a && !(n[a] > e); a++);
          a = Math.min(a - 1, r - 2);
        }
        re(t.position, i[a], i[a + 1], (e - n[a]) / (n[a + 1] - n[a]));
        var l = i[a + 1][0] - i[a][0],
          u = i[a + 1][1] - i[a][1];
        (t.rotation = -Math.atan2(u, l) - Math.PI / 2),
          (this._lastFrame = a),
          (this._lastFramePercent = e),
          (t.ignore = !1);
      }
    }),
    h(Of, Pf);
  var XI = ea({
      shape: { polyline: !1, curveness: 0, segs: [] },
      buildPath: function (t, e) {
        var i = e.segs,
          n = e.curveness;
        if (e.polyline)
          for (var r = 0; r < i.length; ) {
            var a = i[r++];
            if (a > 0) {
              t.moveTo(i[r++], i[r++]);
              for (var o = 1; a > o; o++) t.lineTo(i[r++], i[r++]);
            }
          }
        else
          for (var r = 0; r < i.length; ) {
            var s = i[r++],
              l = i[r++],
              u = i[r++],
              h = i[r++];
            if ((t.moveTo(s, l), n > 0)) {
              var c = (s + u) / 2 - (l - h) * n,
                d = (l + h) / 2 - (u - s) * n;
              t.quadraticCurveTo(c, d, u, h);
            } else t.lineTo(u, h);
          }
      },
      findDataIndex: function () {
        var t = this.shape,
          e = t.segs,
          i = t.curveness;
        if (t.polyline)
          for (var n = 0, r = 0; r < e.length; ) {
            var a = e[r++];
            if (a > 0)
              for (var o = e[r++], s = e[r++], l = 1; a > l; l++) {
                var u = e[r++],
                  h = e[r++];
                if (Tr(o, s, u, h)) return n;
              }
            n++;
          }
        else
          for (var n = 0, r = 0; r < e.length; ) {
            var o = e[r++],
              s = e[r++],
              u = e[r++],
              h = e[r++];
            if (i > 0) {
              var c = (o + u) / 2 - (s - h) * i,
                d = (s + h) / 2 - (u - o) * i;
              if (Ar(o, s, c, d, u, h)) return n;
            } else if (Tr(o, s, u, h)) return n;
            n++;
          }
        return -1;
      },
    }),
    YI = zf.prototype;
  (YI.isPersistent = function () {
    return !this._incremental;
  }),
    (YI.updateData = function (t) {
      this.group.removeAll();
      var e = new XI({ rectHover: !0, cursor: 'default' });
      e.setShape({ segs: t.getLayout('linesPoints') }),
        this._setCommon(e, t),
        this.group.add(e),
        (this._incremental = null);
    }),
    (YI.incrementalPrepareUpdate = function (t) {
      this.group.removeAll(),
        this._clearIncremental(),
        t.count() > 5e5
          ? (this._incremental || (this._incremental = new ta({ silent: !0 })), this.group.add(this._incremental))
          : (this._incremental = null);
    }),
    (YI.incrementalUpdate = function (t, e) {
      var i = new XI();
      i.setShape({ segs: e.getLayout('linesPoints') }),
        this._setCommon(i, e, !!this._incremental),
        this._incremental
          ? this._incremental.addDisplayable(i, !0)
          : ((i.rectHover = !0), (i.cursor = 'default'), (i.__startIndex = t.start), this.group.add(i));
    }),
    (YI.remove = function () {
      this._clearIncremental(), (this._incremental = null), this.group.removeAll();
    }),
    (YI._setCommon = function (t, e, i) {
      var n = e.hostModel;
      t.setShape({ polyline: n.get('polyline'), curveness: n.get('lineStyle.curveness') }),
        t.useStyle(n.getModel('lineStyle').getLineStyle()),
        (t.style.strokeNoScale = !0);
      var r = e.getVisual('color');
      r && t.setStyle('stroke', r),
        t.setStyle('fill'),
        i ||
          ((t.seriesIndex = n.seriesIndex),
          t.on('mousemove', function (e) {
            t.dataIndex = null;
            var i = t.findDataIndex(e.offsetX, e.offsetY);
            i > 0 && (t.dataIndex = i + t.__startIndex);
          }));
    }),
    (YI._clearIncremental = function () {
      var t = this._incremental;
      t && t.clearDisplaybles();
    });
  var ZI = {
    seriesType: 'lines',
    plan: iw(),
    reset: function (t) {
      function e(e, a) {
        var o = [];
        if (r) {
          var s,
            l = e.end - e.start;
          if (n) {
            for (var u = 0, h = e.start; h < e.end; h++) u += t.getLineCoordsCount(h);
            s = new Float32Array(l + 2 * u);
          } else s = new Float32Array(4 * l);
          for (var c = 0, d = [], h = e.start; h < e.end; h++) {
            var f = t.getLineCoords(h, o);
            n && (s[c++] = f);
            for (var p = 0; f > p; p++) (d = i.dataToPoint(o[p], !1, d)), (s[c++] = d[0]), (s[c++] = d[1]);
          }
          a.setLayout('linesPoints', s);
        } else
          for (var h = e.start; h < e.end; h++) {
            var g = a.getItemModel(h),
              f = t.getLineCoords(h, o),
              m = [];
            if (n) for (var v = 0; f > v; v++) m.push(i.dataToPoint(o[v]));
            else {
              (m[0] = i.dataToPoint(o[0])), (m[1] = i.dataToPoint(o[1]));
              var y = g.get('lineStyle.curveness');
              +y &&
                (m[2] = [
                  (m[0][0] + m[1][0]) / 2 - (m[0][1] - m[1][1]) * y,
                  (m[0][1] + m[1][1]) / 2 - (m[1][0] - m[0][0]) * y,
                ]);
            }
            a.setItemLayout(h, m);
          }
      }
      var i = t.coordinateSystem,
        n = t.get('polyline'),
        r = t.pipelineContext.large;
      return { progress: e };
    },
  };
  wu({
    type: 'lines',
    init: function () {},
    render: function (t, e, i) {
      var n = t.getData(),
        r = this._updateLineDraw(n, t),
        a = t.get('zlevel'),
        o = t.get('effect.trailLength'),
        s = i.getZr(),
        l = 'svg' === s.painter.getType();
      if (
        (l || s.painter.getLayer(a).clear(!0),
        null == this._lastZlevel || l || s.configLayer(this._lastZlevel, { motionBlur: !1 }),
        this._showEffect(t) && o)
      ) {
        if (Cg) {
          var u = !1;
          e.eachSeries(function (e) {
            e !== t && e.get('zlevel') === a && (u = !0);
          }),
            u && console.warn('Lines with trail effect should have an individual zlevel');
        }
        l || s.configLayer(a, { motionBlur: !0, lastFrameAlpha: Math.max(Math.min(o / 10 + 0.9, 1), 0) });
      }
      r.updateData(n);
      var h = t.get('clip', !0) && _c(t.coordinateSystem, !1, t);
      h ? this.group.setClipPath(h) : this.group.removeClipPath(), (this._lastZlevel = a), (this._finished = !0);
    },
    incrementalPrepareRender: function (t, e, i) {
      var n = t.getData(),
        r = this._updateLineDraw(n, t);
      r.incrementalPrepareUpdate(n), this._clearLayer(i), (this._finished = !1);
    },
    incrementalRender: function (t, e) {
      this._lineDraw.incrementalUpdate(t, e.getData()), (this._finished = t.end === e.getData().count());
    },
    updateTransform: function (t, e, i) {
      var n = t.getData(),
        r = t.pipelineContext;
      if (!this._finished || r.large || r.progressiveRender) return { update: !0 };
      var a = ZI.reset(t);
      a.progress && a.progress({ start: 0, end: n.count() }, n), this._lineDraw.updateLayout(), this._clearLayer(i);
    },
    _updateLineDraw: function (t, e) {
      var i = this._lineDraw,
        n = this._showEffect(e),
        r = !!e.get('polyline'),
        a = e.pipelineContext,
        o = a.large;
      return (
        Cg && n && o && console.warn('Large lines not support effect'),
        (i && n === this._hasEffet && r === this._isPolyline && o === this._isLargeDraw) ||
          (i && i.remove(),
          (i = this._lineDraw = o ? new zf() : new If(r ? (n ? Of : Lf) : n ? Pf : Mf)),
          (this._hasEffet = n),
          (this._isPolyline = r),
          (this._isLargeDraw = o),
          this.group.removeAll()),
        this.group.add(i.group),
        i
      );
    },
    _showEffect: function (t) {
      return !!t.get('effect.show');
    },
    _clearLayer: function (t) {
      var e = t.getZr(),
        i = 'svg' === e.painter.getType();
      i || null == this._lastZlevel || e.painter.getLayer(this._lastZlevel).clear(!0);
    },
    remove: function (t, e) {
      this._lineDraw && this._lineDraw.remove(), (this._lineDraw = null), this._clearLayer(e);
    },
    dispose: function () {},
  });
  var jI = 'lineStyle.opacity'.split('.'),
    qI = {
      seriesType: 'lines',
      reset: function (t) {
        function e(t, e) {
          var i = t.getItemModel(e),
            n = Ef(i.getShallow('symbol', !0)),
            r = Ef(i.getShallow('symbolSize', !0)),
            a = i.get(jI);
          n[0] && t.setItemVisual(e, 'fromSymbol', n[0]),
            n[1] && t.setItemVisual(e, 'toSymbol', n[1]),
            r[0] && t.setItemVisual(e, 'fromSymbolSize', r[0]),
            r[1] && t.setItemVisual(e, 'toSymbolSize', r[1]),
            t.setItemVisual(e, 'opacity', a);
        }
        var i = Ef(t.get('symbol')),
          n = Ef(t.get('symbolSize')),
          r = t.getData();
        return (
          r.setVisual('fromSymbol', i && i[0]),
          r.setVisual('toSymbol', i && i[1]),
          r.setVisual('fromSymbolSize', n && n[0]),
          r.setVisual('toSymbolSize', n && n[1]),
          r.setVisual('opacity', t.get(jI)),
          { dataEach: r.hasItemOption ? e : null }
        );
      },
    };
  pu(ZI), gu(qI);
  {
    var KI = US.extend({
        type: 'series.pictorialBar',
        dependencies: ['grid'],
        defaultOption: {
          symbol: 'circle',
          symbolSize: null,
          symbolRotate: null,
          symbolPosition: null,
          symbolOffset: null,
          symbolMargin: null,
          symbolRepeat: !1,
          symbolRepeatDirection: 'end',
          symbolClip: !1,
          symbolBoundingData: null,
          symbolPatternSize: 400,
          barGap: '-100%',
          progressive: 0,
          hoverAnimation: !1,
        },
        getInitialData: function (t) {
          return (t.stack = null), KI.superApply(this, 'getInitialData', arguments);
        },
      }),
      $I = ['itemStyle', 'borderWidth'],
      JI = [
        { xy: 'x', wh: 'width', index: 0, posDesc: ['left', 'right'] },
        { xy: 'y', wh: 'height', index: 1, posDesc: ['top', 'bottom'] },
      ],
      QI = new r_();
    wu({
      type: 'pictorialBar',
      render: function (t, e, i) {
        var n = this.group,
          r = t.getData(),
          a = this._data,
          o = t.coordinateSystem,
          s = o.getBaseAxis(),
          l = !!s.isHorizontal(),
          u = o.grid.getRect(),
          h = {
            ecSize: { width: i.getWidth(), height: i.getHeight() },
            seriesModel: t,
            coordSys: o,
            coordSysExtent: [
              [u.x, u.x + u.width],
              [u.y, u.y + u.height],
            ],
            isHorizontal: l,
            valueDim: JI[+l],
            categoryDim: JI[1 - l],
          };
        return (
          r
            .diff(a)
            .add(function (t) {
              if (r.hasValue(t)) {
                var e = Zf(r, t),
                  i = Rf(r, t, e, h),
                  a = $f(r, h, i);
                r.setItemGraphicEl(t, a), n.add(a), np(a, h, i);
              }
            })
            .update(function (t, e) {
              var i = a.getItemGraphicEl(e);
              if (!r.hasValue(t)) return void n.remove(i);
              var o = Zf(r, t),
                s = Rf(r, t, o, h),
                l = tp(r, s);
              i && l !== i.__pictorialShapeStr && (n.remove(i), r.setItemGraphicEl(t, null), (i = null)),
                i ? Jf(i, h, s) : (i = $f(r, h, s, !0)),
                r.setItemGraphicEl(t, i),
                (i.__pictorialSymbolMeta = s),
                n.add(i),
                np(i, h, s);
            })
            .remove(function (t) {
              var e = a.getItemGraphicEl(t);
              e && Qf(a, t, e.__pictorialSymbolMeta.animationModel, e);
            })
            .execute(),
          (this._data = r),
          this.group
        );
      },
      dispose: G,
      remove: function (t) {
        var e = this.group,
          i = this._data;
        t.get('animation')
          ? i &&
            i.eachItemGraphicEl(function (e) {
              Qf(i, e.dataIndex, t, e);
            })
          : e.removeAll();
      },
    });
  }
  pu(_(mh, 'pictorialBar')), gu(LM('pictorialBar', 'roundRect'));
  var tC = cx.extend({
    type: 'geo',
    coordinateSystem: null,
    layoutMode: 'box',
    init: function (t) {
      cx.prototype.init.apply(this, arguments), Vn(t, 'label', ['show']);
    },
    optionUpdated: function () {
      var t = this.option,
        e = this;
      (t.regions = DI.getFilledRegions(t.regions, t.map, t.nameMap)),
        (this._optionModelMap = g(
          t.regions || [],
          function (t, i) {
            return i.name && t.set(i.name, new Qa(i, e)), t;
          },
          N(),
        )),
        this.updateSelectedMap(t.regions);
    },
    defaultOption: {
      zlevel: 0,
      z: 0,
      show: !0,
      left: 'center',
      top: 'center',
      aspectScale: null,
      silent: !1,
      map: '',
      boundingCoords: null,
      center: null,
      zoom: 1,
      scaleLimit: null,
      label: { show: !1, color: '#000' },
      itemStyle: { borderWidth: 0.5, borderColor: '#444', color: '#eee' },
      emphasis: { label: { show: !0, color: 'rgb(100,0,0)' }, itemStyle: { color: 'rgba(255,215,0,0.8)' } },
      regions: [],
    },
    getRegionModel: function (t) {
      return this._optionModelMap.get(t) || new Qa(null, this, this.ecModel);
    },
    getFormattedLabel: function (t, e) {
      var i = this.getRegionModel(t),
        n = i.get('label' + ('normal' === e ? '.' : e + '.') + 'formatter'),
        r = { name: t };
      return 'function' == typeof n
        ? ((r.status = e), n(r))
        : 'string' == typeof n
        ? n.replace('{a}', null != t ? t : '')
        : void 0;
    },
    setZoom: function (t) {
      this.option.zoom = t;
    },
    setCenter: function (t) {
      this.option.center = t;
    },
  });
  c(tC, NM),
    _u({
      type: 'geo',
      init: function (t, e) {
        var i = new af(e, !0);
        (this._mapDraw = i), this.group.add(i.group);
      },
      render: function (t, e, i, n) {
        if (!n || 'geoToggleSelect' !== n.type || n.from !== this.uid) {
          var r = this._mapDraw;
          t.get('show') ? r.draw(t, e, i, this, n) : this._mapDraw.group.removeAll(),
            (this.group.silent = t.get('silent'));
        }
      },
      dispose: function () {
        this._mapDraw && this._mapDraw.remove();
      },
    }),
    ap('toggleSelected', { type: 'geoToggleSelect', event: 'geoselectchanged' }),
    ap('select', { type: 'geoSelect', event: 'geoselected' }),
    ap('unSelect', { type: 'geoUnSelect', event: 'geounselected' }),
    yu({
      type: 'title',
      layoutMode: { type: 'box', ignoreSize: !0 },
      defaultOption: {
        zlevel: 0,
        z: 6,
        show: !0,
        text: '',
        target: 'blank',
        subtext: '',
        subtarget: 'blank',
        left: 0,
        top: 0,
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        textStyle: { fontSize: 18, fontWeight: 'bolder', color: '#333' },
        subtextStyle: { color: '#aaa' },
      },
    }),
    _u({
      type: 'title',
      render: function (t, e, i) {
        if ((this.group.removeAll(), t.get('show'))) {
          var n = this.group,
            r = t.getModel('textStyle'),
            a = t.getModel('subtextStyle'),
            o = t.get('textAlign'),
            s = A(t.get('textBaseline'), t.get('textVerticalAlign')),
            l = new n_({
              style: ka({}, r, { text: t.get('text'), textFill: r.getTextColor() }, { disableBox: !0 }),
              z2: 10,
            }),
            u = l.getBoundingRect(),
            h = t.get('subtext'),
            c = new n_({
              style: ka(
                {},
                a,
                { text: h, textFill: a.getTextColor(), y: u.height + t.get('itemGap'), textVerticalAlign: 'top' },
                { disableBox: !0 },
              ),
              z2: 10,
            }),
            d = t.get('link'),
            f = t.get('sublink'),
            p = t.get('triggerEvent', !0);
          (l.silent = !d && !p),
            (c.silent = !f && !p),
            d &&
              l.on('click', function () {
                window.open(d, '_' + t.get('target'));
              }),
            f &&
              c.on('click', function () {
                window.open(f, '_' + t.get('subtarget'));
              }),
            (l.eventData = c.eventData = p ? { componentType: 'title', componentIndex: t.componentIndex } : null),
            n.add(l),
            h && n.add(c);
          var g = n.getBoundingRect(),
            m = t.getBoxLayoutParams();
          (m.width = g.width), (m.height = g.height);
          var v = Ro(m, { width: i.getWidth(), height: i.getHeight() }, t.get('padding'));
          o ||
            ((o = t.get('left') || t.get('right')),
            'middle' === o && (o = 'center'),
            'right' === o ? (v.x += v.width) : 'center' === o && (v.x += v.width / 2)),
            s ||
              ((s = t.get('top') || t.get('bottom')),
              'center' === s && (s = 'middle'),
              'bottom' === s ? (v.y += v.height) : 'middle' === s && (v.y += v.height / 2),
              (s = s || 'top')),
            n.attr('position', [v.x, v.y]);
          var y = { textAlign: o, textVerticalAlign: s };
          l.setStyle(y), c.setStyle(y), (g = n.getBoundingRect());
          var _ = v.margin,
            x = t.getItemStyle(['color', 'opacity']);
          x.fill = t.get('backgroundColor');
          var w = new g_({
            shape: {
              x: g.x - _[3],
              y: g.y - _[0],
              width: g.width + _[1] + _[3],
              height: g.height + _[0] + _[2],
              r: t.get('borderRadius'),
            },
            style: x,
            subPixelOptimize: !0,
            silent: !0,
          });
          n.add(w);
        }
      },
    });
  var eC = cw.legend.selector,
    iC = { all: { type: 'all', title: n(eC.all) }, inverse: { type: 'inverse', title: n(eC.inverse) } },
    nC = yu({
      type: 'legend.plain',
      dependencies: ['series'],
      layoutMode: { type: 'box', ignoreSize: !0 },
      init: function (t, e, i) {
        this.mergeDefaultAndTheme(t, i), (t.selected = t.selected || {}), this._updateSelector(t);
      },
      mergeOption: function (t) {
        nC.superCall(this, 'mergeOption', t), this._updateSelector(t);
      },
      _updateSelector: function (t) {
        var e = t.selector;
        e === !0 && (e = t.selector = ['all', 'inverse']),
          x(e) &&
            f(e, function (t, i) {
              b(t) && (t = { type: t }), (e[i] = r(t, iC[t.type]));
            });
      },
      optionUpdated: function () {
        this._updateData(this.ecModel);
        var t = this._data;
        if (t[0] && 'single' === this.get('selectedMode')) {
          for (var e = !1, i = 0; i < t.length; i++) {
            var n = t[i].get('name');
            if (this.isSelected(n)) {
              this.select(n), (e = !0);
              break;
            }
          }
          !e && this.select(t[0].get('name'));
        }
      },
      _updateData: function (t) {
        var e = [],
          i = [];
        t.eachRawSeries(function (n) {
          var r = n.name;
          i.push(r);
          var a;
          if (n.legendDataProvider) {
            var o = n.legendDataProvider(),
              s = o.mapArray(o.getName);
            t.isSeriesFiltered(n) || (i = i.concat(s)), s.length ? (e = e.concat(s)) : (a = !0);
          } else a = !0;
          a && Yn(n) && e.push(n.name);
        }),
          (this._availableNames = i);
        var n = this.get('data') || e,
          r = p(
            n,
            function (t) {
              return ('string' == typeof t || 'number' == typeof t) && (t = { name: t }), new Qa(t, this, this.ecModel);
            },
            this,
          );
        this._data = r;
      },
      getData: function () {
        return this._data;
      },
      select: function (t) {
        var e = this.option.selected,
          i = this.get('selectedMode');
        if ('single' === i) {
          var n = this._data;
          f(n, function (t) {
            e[t.get('name')] = !1;
          });
        }
        e[t] = !0;
      },
      unSelect: function (t) {
        'single' !== this.get('selectedMode') && (this.option.selected[t] = !1);
      },
      toggleSelected: function (t) {
        var e = this.option.selected;
        e.hasOwnProperty(t) || (e[t] = !0), this[e[t] ? 'unSelect' : 'select'](t);
      },
      allSelect: function () {
        var t = this._data,
          e = this.option.selected;
        f(t, function (t) {
          e[t.get('name', !0)] = !0;
        });
      },
      inverseSelect: function () {
        var t = this._data,
          e = this.option.selected;
        f(t, function (t) {
          var i = t.get('name', !0);
          e.hasOwnProperty(i) || (e[i] = !0), (e[i] = !e[i]);
        });
      },
      isSelected: function (t) {
        var e = this.option.selected;
        return !(e.hasOwnProperty(t) && !e[t]) && u(this._availableNames, t) >= 0;
      },
      getOrient: function () {
        return 'vertical' === this.get('orient') ? { index: 1, name: 'vertical' } : { index: 0, name: 'horizontal' };
      },
      defaultOption: {
        zlevel: 0,
        z: 4,
        show: !0,
        orient: 'horizontal',
        left: 'center',
        top: 0,
        align: 'auto',
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        borderRadius: 0,
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        itemWidth: 25,
        itemHeight: 14,
        inactiveColor: '#ccc',
        inactiveBorderColor: '#ccc',
        itemStyle: { borderWidth: 0 },
        textStyle: { color: '#333' },
        selectedMode: !0,
        selector: !1,
        selectorLabel: {
          show: !0,
          borderRadius: 10,
          padding: [3, 5, 3, 5],
          fontSize: 12,
          fontFamily: ' sans-serif',
          color: '#666',
          borderWidth: 1,
          borderColor: '#666',
        },
        emphasis: { selectorLabel: { show: !0, color: '#eee', backgroundColor: '#666' } },
        selectorPosition: 'auto',
        selectorItemGap: 7,
        selectorButtonGap: 10,
        tooltip: { show: !1 },
      },
    });
  cu('legendToggleSelect', 'legendselectchanged', _(op, 'toggleSelected')),
    cu('legendAllSelect', 'legendselectall', _(op, 'allSelect')),
    cu('legendInverseSelect', 'legendinverseselect', _(op, 'inverseSelect')),
    cu('legendSelect', 'legendselected', _(op, 'select')),
    cu('legendUnSelect', 'legendunselected', _(op, 'unSelect'));
  var rC = _,
    aC = f,
    oC = Wm,
    sC = _u({
      type: 'legend.plain',
      newlineDisabled: !1,
      init: function () {
        this.group.add((this._contentGroup = new oC())),
          this._backgroundEl,
          this.group.add((this._selectorGroup = new oC())),
          (this._isFirstRender = !0);
      },
      getContentGroup: function () {
        return this._contentGroup;
      },
      getSelectorGroup: function () {
        return this._selectorGroup;
      },
      render: function (t, e, i) {
        var n = this._isFirstRender;
        if (((this._isFirstRender = !1), this.resetInner(), t.get('show', !0))) {
          var r = t.get('align'),
            a = t.get('orient');
          (r && 'auto' !== r) || (r = 'right' === t.get('left') && 'vertical' === a ? 'right' : 'left');
          var o = t.get('selector', !0),
            l = t.get('selectorPosition', !0);
          !o || (l && 'auto' !== l) || (l = 'horizontal' === a ? 'end' : 'start'),
            this.renderInner(r, t, e, i, o, a, l);
          var u = t.getBoxLayoutParams(),
            h = { width: i.getWidth(), height: i.getHeight() },
            c = t.get('padding'),
            d = Ro(u, h, c),
            f = this.layoutInner(t, r, d, n, o, l),
            p = Ro(s({ width: f.width, height: f.height }, u), h, c);
          this.group.attr('position', [p.x - f.x, p.y - f.y]), this.group.add((this._backgroundEl = sp(f, t)));
        }
      },
      resetInner: function () {
        this.getContentGroup().removeAll(),
          this._backgroundEl && this.group.remove(this._backgroundEl),
          this.getSelectorGroup().removeAll();
      },
      renderInner: function (t, e, i, n, r, a, o) {
        var s = this.getContentGroup(),
          l = N(),
          u = e.get('selectedMode'),
          h = [];
        i.eachRawSeries(function (t) {
          !t.get('legendHoverLink') && h.push(t.id);
        }),
          aC(
            e.getData(),
            function (r, a) {
              var o = r.get('name');
              if (!this.newlineDisabled && ('' === o || '\n' === o)) return void s.add(new oC({ newline: !0 }));
              var c = i.getSeriesByName(o)[0];
              if (!l.get(o)) {
                if (c) {
                  var d = c.getData(),
                    f = d.getVisual('color'),
                    p = d.getVisual('borderColor');
                  'function' == typeof f && (f = f(c.getDataParams(0))),
                    'function' == typeof p && (p = p(c.getDataParams(0)));
                  var g = d.getVisual('legendSymbol') || 'roundRect',
                    m = d.getVisual('symbol'),
                    v = this._createItem(o, a, r, e, g, m, t, f, p, u);
                  v
                    .on('click', rC(up, o, n))
                    .on('mouseover', rC(hp, c.name, null, n, h))
                    .on('mouseout', rC(cp, c.name, null, n, h)),
                    l.set(o, !0);
                } else
                  i.eachRawSeries(function (i) {
                    if (!l.get(o) && i.legendDataProvider) {
                      var s = i.legendDataProvider(),
                        c = s.indexOfName(o);
                      if (0 > c) return;
                      var d = s.getItemVisual(c, 'color'),
                        f = s.getItemVisual(c, 'borderColor'),
                        p = 'roundRect',
                        g = this._createItem(o, a, r, e, p, null, t, d, f, u);
                      g
                        .on('click', rC(up, o, n))
                        .on('mouseover', rC(hp, null, o, n, h))
                        .on('mouseout', rC(cp, null, o, n, h)),
                        l.set(o, !0);
                    }
                  }, this);
                Cg &&
                  (l.get(o) ||
                    console.warn(o + ' series not exists. Legend data should be same with series name or data name.'));
              }
            },
            this,
          ),
          r && this._createSelector(r, e, n, a, o);
      },
      _createSelector: function (t, e, i) {
        function n(t) {
          var n = t.type,
            a = new n_({
              style: { x: 0, y: 0, align: 'center', verticalAlign: 'middle' },
              onclick: function () {
                i.dispatchAction({ type: 'all' === n ? 'legendAllSelect' : 'legendInverseSelect' });
              },
            });
          r.add(a);
          var o = e.getModel('selectorLabel'),
            s = e.getModel('emphasis.selectorLabel');
          Da(a.style, (a.hoverStyle = {}), o, s, { defaultText: t.title, isRectText: !1 }), Ma(a);
        }
        var r = this.getSelectorGroup();
        aC(t, function (t) {
          n(t);
        });
      },
      _createItem: function (t, e, i, n, r, a, s, l, u, h) {
        var c = n.get('itemWidth'),
          d = n.get('itemHeight'),
          f = n.get('inactiveColor'),
          p = n.get('inactiveBorderColor'),
          g = n.get('symbolKeepAspect'),
          m = n.getModel('itemStyle'),
          v = n.isSelected(t),
          y = new oC(),
          _ = i.getModel('textStyle'),
          x = i.get('icon'),
          w = i.getModel('tooltip'),
          b = w.parentModel;
        r = x || r;
        var S = Oh(r, 0, 0, c, d, v ? l : f, null == g ? !0 : g);
        if ((y.add(lp(S, r, m, u, p, v)), !x && a && (a !== r || 'none' === a))) {
          var M = 0.8 * d;
          'none' === a && (a = 'circle');
          var I = Oh(a, (c - M) / 2, (d - M) / 2, M, M, v ? l : f, null == g ? !0 : g);
          y.add(lp(I, a, m, u, p, v));
        }
        var C = 'left' === s ? c + 5 : -5,
          T = s,
          D = n.get('formatter'),
          A = t;
        'string' == typeof D && D
          ? (A = D.replace('{name}', null != t ? t : ''))
          : 'function' == typeof D && (A = D(t)),
          y.add(
            new n_({
              style: ka({}, _, {
                text: A,
                x: C,
                y: d / 2,
                textFill: v ? _.getTextColor() : f,
                textAlign: T,
                textVerticalAlign: 'middle',
              }),
            }),
          );
        var k = new g_({
          shape: y.getBoundingRect(),
          invisible: !0,
          tooltip: w.get('show')
            ? o(
                {
                  content: t,
                  formatter:
                    b.get('formatter', !0) ||
                    function () {
                      return t;
                    },
                  formatterParams: { componentType: 'legend', legendIndex: n.componentIndex, name: t, $vars: ['name'] },
                },
                w.option,
              )
            : null,
        });
        return (
          y.add(k),
          y.eachChild(function (t) {
            t.silent = !0;
          }),
          (k.silent = !h),
          this.getContentGroup().add(y),
          Ma(y),
          (y.__legendDataIndex = e),
          y
        );
      },
      layoutInner: function (t, e, i, n, r, a) {
        var o = this.getContentGroup(),
          s = this.getSelectorGroup();
        lx(t.get('orient'), o, t.get('itemGap'), i.width, i.height);
        var l = o.getBoundingRect(),
          u = [-l.x, -l.y];
        if (r) {
          lx('horizontal', s, t.get('selectorItemGap', !0));
          var h = s.getBoundingRect(),
            c = [-h.x, -h.y],
            d = t.get('selectorButtonGap', !0),
            f = t.getOrient().index,
            p = 0 === f ? 'width' : 'height',
            g = 0 === f ? 'height' : 'width',
            m = 0 === f ? 'y' : 'x';
          'end' === a ? (c[f] += l[p] + d) : (u[f] += h[p] + d),
            (c[1 - f] += l[g] / 2 - h[g] / 2),
            s.attr('position', c),
            o.attr('position', u);
          var v = { x: 0, y: 0 };
          return (v[p] = l[p] + d + h[p]), (v[g] = Math.max(l[g], h[g])), (v[m] = Math.min(0, h[m] + c[1 - f])), v;
        }
        return o.attr('position', u), this.group.getBoundingRect();
      },
      remove: function () {
        this.getContentGroup().removeAll(), (this._isFirstRender = !0);
      },
    }),
    lC = function (t) {
      var e = t.findComponents({ mainType: 'legend' });
      e &&
        e.length &&
        t.filterSeries(function (t) {
          for (var i = 0; i < e.length; i++) if (!e[i].isSelected(t.name)) return !1;
          return !0;
        });
    };
  uu(nb.PROCESSOR.SERIES_FILTER, lC),
    cx.registerSubTypeDefaulter('legend', function () {
      return 'plain';
    });
  var uC = nC.extend({
      type: 'legend.scroll',
      setScrollDataIndex: function (t) {
        this.option.scrollDataIndex = t;
      },
      defaultOption: {
        scrollDataIndex: 0,
        pageButtonItemGap: 5,
        pageButtonGap: null,
        pageButtonPosition: 'end',
        pageFormatter: '{current}/{total}',
        pageIcons: {
          horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],
          vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z'],
        },
        pageIconColor: '#2f4554',
        pageIconInactiveColor: '#aaa',
        pageIconSize: 15,
        pageTextStyle: { color: '#333' },
        animationDurationUpdate: 800,
      },
      init: function (t, e, i, n) {
        var r = No(t);
        uC.superCall(this, 'init', t, e, i, n), dp(this, t, r);
      },
      mergeOption: function (t, e) {
        uC.superCall(this, 'mergeOption', t, e), dp(this, this.option, t);
      },
    }),
    hC = Wm,
    cC = ['width', 'height'],
    dC = ['x', 'y'],
    fC = sC.extend({
      type: 'legend.scroll',
      newlineDisabled: !0,
      init: function () {
        fC.superCall(this, 'init'),
          (this._currentIndex = 0),
          this.group.add((this._containerGroup = new hC())),
          this._containerGroup.add(this.getContentGroup()),
          this.group.add((this._controllerGroup = new hC())),
          this._showController;
      },
      resetInner: function () {
        fC.superCall(this, 'resetInner'),
          this._controllerGroup.removeAll(),
          this._containerGroup.removeClipPath(),
          (this._containerGroup.__rectSize = null);
      },
      renderInner: function (t, e, i, n, r, a, o) {
        function s(t, i) {
          var r = t + 'DataIndex',
            a = ja(
              e.get('pageIcons', !0)[e.getOrient().name][i],
              { onclick: y(l._pageGo, l, r, e, n) },
              { x: -h[0] / 2, y: -h[1] / 2, width: h[0], height: h[1] },
            );
          (a.name = t), u.add(a);
        }
        var l = this;
        fC.superCall(this, 'renderInner', t, e, i, n, r, a, o);
        var u = this._controllerGroup,
          h = e.get('pageIconSize', !0);
        x(h) || (h = [h, h]), s('pagePrev', 0);
        var c = e.getModel('pageTextStyle');
        u.add(
          new n_({
            name: 'pageText',
            style: { textFill: c.getTextColor(), font: c.getFont(), textVerticalAlign: 'middle', textAlign: 'center' },
            silent: !0,
          }),
        ),
          s('pageNext', 1);
      },
      layoutInner: function (t, e, i, r, a, o) {
        var s = this.getSelectorGroup(),
          l = t.getOrient().index,
          u = cC[l],
          h = dC[l],
          c = cC[1 - l],
          d = dC[1 - l];
        a && lx('horizontal', s, t.get('selectorItemGap', !0));
        var f = t.get('selectorButtonGap', !0),
          p = s.getBoundingRect(),
          g = [-p.x, -p.y],
          m = n(i);
        a && (m[u] = i[u] - p[u] - f);
        var v = this._layoutContentAndController(t, r, m, l, u, c, d);
        if (a) {
          if ('end' === o) g[l] += v[u] + f;
          else {
            var y = p[u] + f;
            (g[l] -= y), (v[h] -= y);
          }
          (v[u] += p[u] + f),
            (g[1 - l] += v[d] + v[c] / 2 - p[c] / 2),
            (v[c] = Math.max(v[c], p[c])),
            (v[d] = Math.min(v[d], p[d] + g[1 - l])),
            s.attr('position', g);
        }
        return v;
      },
      _layoutContentAndController: function (t, e, i, n, r, a, o) {
        var s = this.getContentGroup(),
          l = this._containerGroup,
          u = this._controllerGroup;
        lx(t.get('orient'), s, t.get('itemGap'), n ? i.width : null, n ? null : i.height),
          lx('horizontal', u, t.get('pageButtonItemGap', !0));
        var h = s.getBoundingRect(),
          c = u.getBoundingRect(),
          d = (this._showController = h[r] > i[r]),
          f = [-h.x, -h.y];
        e || (f[n] = s.position[n]);
        var p = [0, 0],
          g = [-c.x, -c.y],
          m = A(t.get('pageButtonGap', !0), t.get('itemGap', !0));
        if (d) {
          var v = t.get('pageButtonPosition', !0);
          'end' === v ? (g[n] += i[r] - c[r]) : (p[n] += c[r] + m);
        }
        (g[1 - n] += h[a] / 2 - c[a] / 2), s.attr('position', f), l.attr('position', p), u.attr('position', g);
        var y = { x: 0, y: 0 };
        if (
          ((y[r] = d ? i[r] : h[r]),
          (y[a] = Math.max(h[a], c[a])),
          (y[o] = Math.min(0, c[o] + g[1 - n])),
          (l.__rectSize = i[r]),
          d)
        ) {
          var _ = { x: 0, y: 0 };
          (_[r] = Math.max(i[r] - c[r] - m, 0)),
            (_[a] = y[a]),
            l.setClipPath(new g_({ shape: _ })),
            (l.__rectSize = _[r]);
        } else
          u.eachChild(function (t) {
            t.attr({ invisible: !0, silent: !0 });
          });
        var x = this._getPageInfo(t);
        return (
          null != x.pageIndex && Ga(s, { position: x.contentPosition }, d ? t : !1), this._updatePageInfoView(t, x), y
        );
      },
      _pageGo: function (t, e, i) {
        var n = this._getPageInfo(e)[t];
        null != n && i.dispatchAction({ type: 'legendScroll', scrollDataIndex: n, legendId: e.id });
      },
      _updatePageInfoView: function (t, e) {
        var i = this._controllerGroup;
        f(['pagePrev', 'pageNext'], function (n) {
          var r = null != e[n + 'DataIndex'],
            a = i.childOfName(n);
          a &&
            (a.setStyle('fill', r ? t.get('pageIconColor', !0) : t.get('pageIconInactiveColor', !0)),
            (a.cursor = r ? 'pointer' : 'default'));
        });
        var n = i.childOfName('pageText'),
          r = t.get('pageFormatter'),
          a = e.pageIndex,
          o = null != a ? a + 1 : 0,
          s = e.pageCount;
        n &&
          r &&
          n.setStyle('text', b(r) ? r.replace('{current}', o).replace('{total}', s) : r({ current: o, total: s }));
      },
      _getPageInfo: function (t) {
        function e(t) {
          if (t) {
            var e = t.getBoundingRect(),
              i = e[l] + t.position[o];
            return { s: i, e: i + e[s], i: t.__legendDataIndex };
          }
        }
        function i(t, e) {
          return t.e >= e && t.s <= e + a;
        }
        var n = t.get('scrollDataIndex', !0),
          r = this.getContentGroup(),
          a = this._containerGroup.__rectSize,
          o = t.getOrient().index,
          s = cC[o],
          l = dC[o],
          u = this._findTargetItemIndex(n),
          h = r.children(),
          c = h[u],
          d = h.length,
          f = d ? 1 : 0,
          p = {
            contentPosition: r.position.slice(),
            pageCount: f,
            pageIndex: f - 1,
            pagePrevDataIndex: null,
            pageNextDataIndex: null,
          };
        if (!c) return p;
        var g = e(c);
        p.contentPosition[o] = -g.s;
        for (var m = u + 1, v = g, y = g, _ = null; d >= m; ++m)
          (_ = e(h[m])),
            ((!_ && y.e > v.s + a) || (_ && !i(_, v.s))) &&
              ((v = y.i > v.i ? y : _),
              v && (null == p.pageNextDataIndex && (p.pageNextDataIndex = v.i), ++p.pageCount)),
            (y = _);
        for (var m = u - 1, v = g, y = g, _ = null; m >= -1; --m)
          (_ = e(h[m])),
            (_ && i(y, _.s)) ||
              !(v.i < y.i) ||
              ((y = v), null == p.pagePrevDataIndex && (p.pagePrevDataIndex = v.i), ++p.pageCount, ++p.pageIndex),
            (v = _);
        return p;
      },
      _findTargetItemIndex: function (t) {
        var e,
          i,
          n = this.getContentGroup();
        return (
          this._showController &&
            n.eachChild(function (n, r) {
              var a = n.__legendDataIndex;
              null == i && null != a && (i = r), a === t && (e = r);
            }),
          null != e ? e : i
        );
      },
    });
  cu('legendScroll', 'legendscroll', function (t, e) {
    var i = t.scrollDataIndex;
    null != i &&
      e.eachComponent({ mainType: 'legend', subType: 'scroll', query: t }, function (t) {
        t.setScrollDataIndex(i);
      });
  });
  var pC = function (t, e) {
      var i,
        n = [],
        r = t.seriesIndex;
      if (null == r || !(i = e.getSeriesByIndex(r))) return { point: [] };
      var a = i.getData(),
        o = jn(a, t);
      if (null == o || 0 > o || x(o)) return { point: [] };
      var s = a.getItemGraphicEl(o),
        l = i.coordinateSystem;
      if (i.getTooltipPosition) n = i.getTooltipPosition(o) || [];
      else if (l && l.dataToPoint)
        n =
          l.dataToPoint(
            a.getValues(
              p(l.dimensions, function (t) {
                return a.mapDimension(t);
              }),
              o,
              !0,
            ),
          ) || [];
      else if (s) {
        var u = s.getBoundingRect().clone();
        u.applyTransform(s.transform), (n = [u.x + u.width / 2, u.y + u.height / 2]);
      }
      return { point: n, el: s };
    },
    gC = f,
    mC = _,
    vC = qn(),
    yC = function (t, e, i) {
      var n = t.currTrigger,
        r = [t.x, t.y],
        a = t,
        o = t.dispatchAction || y(i.dispatchAction, i),
        s = e.getComponent('axisPointer').coordSysAxesInfo;
      if (s) {
        bp(r) && (r = pC({ seriesIndex: a.seriesIndex, dataIndex: a.dataIndex }, e).point);
        var l = bp(r),
          u = a.axesInfo,
          h = s.axesInfo,
          c = 'leave' === n || bp(r),
          d = {},
          f = {},
          p = { list: [], map: {} },
          g = { showPointer: mC(gp, f), showTooltip: mC(mp, p) };
        gC(s.coordSysMap, function (t, e) {
          var i = l || t.containPoint(r);
          gC(s.coordSysAxesInfo[e], function (t) {
            var e = t.axis,
              n = xp(u, t);
            if (!c && i && (!u || n)) {
              var a = n && n.value;
              null != a || l || (a = e.pointToData(r)), null != a && fp(t, a, g, !1, d);
            }
          });
        });
        var m = {};
        return (
          gC(h, function (t, e) {
            var i = t.linkGroup;
            i &&
              !f[e] &&
              gC(i.axesInfo, function (e, n) {
                var r = f[n];
                if (e !== t && r) {
                  var a = r.value;
                  i.mapper && (a = t.axis.scale.parse(i.mapper(a, wp(e), wp(t)))), (m[t.key] = a);
                }
              });
          }),
          gC(m, function (t, e) {
            fp(h[e], t, g, !0, d);
          }),
          vp(f, h, d),
          yp(p, r, t, o),
          _p(h, o, i),
          d
        );
      }
    },
    _C =
      (yu({
        type: 'axisPointer',
        coordSysAxesInfo: null,
        defaultOption: {
          show: 'auto',
          triggerOn: null,
          zlevel: 0,
          z: 50,
          type: 'line',
          snap: !1,
          triggerTooltip: !0,
          value: null,
          status: null,
          link: [],
          animation: null,
          animationDurationUpdate: 200,
          lineStyle: { color: '#aaa', width: 1, type: 'solid' },
          shadowStyle: { color: 'rgba(150,150,150,0.3)' },
          label: {
            show: !0,
            formatter: null,
            precision: 'auto',
            margin: 3,
            color: '#fff',
            padding: [5, 7, 5, 7],
            backgroundColor: 'auto',
            borderColor: null,
            borderWidth: 0,
            shadowBlur: 3,
            shadowColor: '#aaa',
          },
          handle: {
            show: !1,
            icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',
            size: 45,
            margin: 50,
            color: '#333',
            shadowBlur: 3,
            shadowColor: '#aaa',
            shadowOffsetX: 0,
            shadowOffsetY: 2,
            throttle: 40,
          },
        },
      }),
      qn()),
    xC = f,
    wC = _u({
      type: 'axisPointer',
      render: function (t, e, i) {
        var n = e.getComponent('tooltip'),
          r = t.get('triggerOn') || (n && n.get('triggerOn')) || 'mousemove|click';
        Sp('axisPointer', i, function (t, e, i) {
          'none' !== r &&
            ('leave' === t || r.indexOf(t) >= 0) &&
            i({ type: 'updateAxisPointer', currTrigger: t, x: e && e.offsetX, y: e && e.offsetY });
        });
      },
      remove: function (t, e) {
        Ap(e.getZr(), 'axisPointer'), wC.superApply(this._model, 'remove', arguments);
      },
      dispose: function (t, e) {
        Ap('axisPointer', e), wC.superApply(this._model, 'dispose', arguments);
      },
    }),
    bC = qn(),
    SC = n,
    MC = y;
  (kp.prototype = {
    _group: null,
    _lastGraphicKey: null,
    _handle: null,
    _dragging: !1,
    _lastValue: null,
    _lastStatus: null,
    _payloadInfo: null,
    animationThreshold: 15,
    render: function (t, e, i, n) {
      var r = e.get('value'),
        a = e.get('status');
      if (
        ((this._axisModel = t),
        (this._axisPointerModel = e),
        (this._api = i),
        n || this._lastValue !== r || this._lastStatus !== a)
      ) {
        (this._lastValue = r), (this._lastStatus = a);
        var o = this._group,
          s = this._handle;
        if (!a || 'hide' === a) return o && o.hide(), void (s && s.hide());
        o && o.show(), s && s.show();
        var l = {};
        this.makeElOption(l, r, t, e, i);
        var u = l.graphicKey;
        u !== this._lastGraphicKey && this.clear(i), (this._lastGraphicKey = u);
        var h = (this._moveAnimation = this.determineAnimation(t, e));
        if (o) {
          var c = _(Pp, e, h);
          this.updatePointerEl(o, l, c, e), this.updateLabelEl(o, l, c, e);
        } else
          (o = this._group = new Wm()),
            this.createPointerEl(o, l, t, e),
            this.createLabelEl(o, l, t, e),
            i.getZr().add(o);
        Ep(o, e, !0), this._renderHandle(r);
      }
    },
    remove: function (t) {
      this.clear(t);
    },
    dispose: function (t) {
      this.clear(t);
    },
    determineAnimation: function (t, e) {
      var i = e.get('animation'),
        n = t.axis,
        r = 'category' === n.type,
        a = e.get('snap');
      if (!a && !r) return !1;
      if ('auto' === i || null == i) {
        var o = this.animationThreshold;
        if (r && n.getBandWidth() > o) return !0;
        if (a) {
          var s = Hc(t).seriesDataCount,
            l = n.getExtent();
          return Math.abs(l[0] - l[1]) / s > o;
        }
        return !1;
      }
      return i === !0;
    },
    makeElOption: function () {},
    createPointerEl: function (t, e) {
      var i = e.pointer;
      if (i) {
        var n = (bC(t).pointerEl = new G_[i.type](SC(e.pointer)));
        t.add(n);
      }
    },
    createLabelEl: function (t, e, i, n) {
      if (e.label) {
        var r = (bC(t).labelEl = new g_(SC(e.label)));
        t.add(r), Op(r, n);
      }
    },
    updatePointerEl: function (t, e, i) {
      var n = bC(t).pointerEl;
      n && e.pointer && (n.setStyle(e.pointer.style), i(n, { shape: e.pointer.shape }));
    },
    updateLabelEl: function (t, e, i, n) {
      var r = bC(t).labelEl;
      r && (r.setStyle(e.label.style), i(r, { shape: e.label.shape, position: e.label.position }), Op(r, n));
    },
    _renderHandle: function (t) {
      if (!this._dragging && this.updateHandleTransform) {
        var e = this._axisPointerModel,
          i = this._api.getZr(),
          n = this._handle,
          r = e.getModel('handle'),
          a = e.get('status');
        if (!r.get('show') || !a || 'hide' === a) return n && i.remove(n), void (this._handle = null);
        var o;
        this._handle ||
          ((o = !0),
          (n = this._handle =
            ja(r.get('icon'), {
              cursor: 'move',
              draggable: !0,
              onmousemove: function (t) {
                rm(t.event);
              },
              onmousedown: MC(this._onHandleDragMove, this, 0, 0),
              drift: MC(this._onHandleDragMove, this),
              ondragend: MC(this._onHandleDragEnd, this),
            })),
          i.add(n)),
          Ep(n, e, !1);
        var s = [
          'color',
          'borderColor',
          'borderWidth',
          'opacity',
          'shadowColor',
          'shadowBlur',
          'shadowOffsetX',
          'shadowOffsetY',
        ];
        n.setStyle(r.getItemStyle(null, s));
        var l = r.get('size');
        x(l) || (l = [l, l]),
          n.attr('scale', [l[0] / 2, l[1] / 2]),
          rl(this, '_doDispatchAxisPointer', r.get('throttle') || 0, 'fixRate'),
          this._moveHandleToValue(t, o);
      }
    },
    _moveHandleToValue: function (t, e) {
      Pp(
        this._axisPointerModel,
        !e && this._moveAnimation,
        this._handle,
        zp(this.getHandleTransform(t, this._axisModel, this._axisPointerModel)),
      );
    },
    _onHandleDragMove: function (t, e) {
      var i = this._handle;
      if (i) {
        this._dragging = !0;
        var n = this.updateHandleTransform(zp(i), [t, e], this._axisModel, this._axisPointerModel);
        (this._payloadInfo = n),
          i.stopAnimation(),
          i.attr(zp(n)),
          (bC(i).lastProp = null),
          this._doDispatchAxisPointer();
      }
    },
    _doDispatchAxisPointer: function () {
      var t = this._handle;
      if (t) {
        var e = this._payloadInfo,
          i = this._axisModel;
        this._api.dispatchAction({
          type: 'updateAxisPointer',
          x: e.cursorPoint[0],
          y: e.cursorPoint[1],
          tooltipOption: e.tooltipOption,
          axesInfo: [{ axisDim: i.axis.dim, axisIndex: i.componentIndex }],
        });
      }
    },
    _onHandleDragEnd: function () {
      this._dragging = !1;
      var t = this._handle;
      if (t) {
        var e = this._axisPointerModel.get('value');
        this._moveHandleToValue(e), this._api.dispatchAction({ type: 'hideTip' });
      }
    },
    getHandleTransform: null,
    updateHandleTransform: null,
    clear: function (t) {
      (this._lastValue = null), (this._lastStatus = null);
      var e = t.getZr(),
        i = this._group,
        n = this._handle;
      e &&
        i &&
        ((this._lastGraphicKey = null),
        i && e.remove(i),
        n && e.remove(n),
        (this._group = null),
        (this._handle = null),
        (this._payloadInfo = null));
    },
    doClear: function () {},
    buildLabel: function (t, e, i) {
      return (i = i || 0), { x: t[i], y: t[1 - i], width: e[i], height: e[1 - i] };
    },
  }),
    (kp.prototype.constructor = kp),
    nr(kp);
  var IC = kp.extend({
      makeElOption: function (t, e, i, n, r) {
        var a = i.axis,
          o = a.grid,
          s = n.get('type'),
          l = Up(o, a).getOtherAxis(a).getGlobalExtent(),
          u = a.toGlobalCoord(a.dataToCoord(e, !0));
        if (s && 'none' !== s) {
          var h = Rp(n),
            c = CC[s](a, u, l);
          (c.style = h), (t.graphicKey = c.type), (t.pointer = c);
        }
        var d = jc(o.model, i);
        Vp(e, t, d, i, n, r);
      },
      getHandleTransform: function (t, e, i) {
        var n = jc(e.axis.grid.model, e, { labelInside: !1 });
        return (
          (n.labelMargin = i.get('handle.margin')),
          { position: Gp(e.axis, t, n), rotation: n.rotation + (n.labelDirection < 0 ? Math.PI : 0) }
        );
      },
      updateHandleTransform: function (t, e, i) {
        var n = i.axis,
          r = n.grid,
          a = n.getGlobalExtent(!0),
          o = Up(r, n).getOtherAxis(n).getGlobalExtent(),
          s = 'x' === n.dim ? 0 : 1,
          l = t.position;
        (l[s] += e[s]), (l[s] = Math.min(a[1], l[s])), (l[s] = Math.max(a[0], l[s]));
        var u = (o[1] + o[0]) / 2,
          h = [u, u];
        h[s] = l[s];
        var c = [{ verticalAlign: 'middle' }, { align: 'center' }];
        return { position: l, rotation: t.rotation, cursorPoint: h, tooltipOption: c[s] };
      },
    }),
    CC = {
      line: function (t, e, i) {
        var n = Hp([e, i[0]], [e, i[1]], Xp(t));
        return { type: 'Line', subPixelOptimize: !0, shape: n };
      },
      shadow: function (t, e, i) {
        var n = Math.max(1, t.getBandWidth()),
          r = i[1] - i[0];
        return { type: 'Rect', shape: Wp([e - n / 2, i[0]], [n, r], Xp(t)) };
      },
    };
  hM.registerAxisPointerClass('CartesianAxisPointer', IC),
    lu(function (t) {
      if (t) {
        (!t.axisPointer || 0 === t.axisPointer.length) && (t.axisPointer = {});
        var e = t.axisPointer.link;
        e && !x(e) && (t.axisPointer.link = [e]);
      }
    }),
    uu(nb.PROCESSOR.STATISTIC, function (t, e) {
      t.getComponent('axisPointer').coordSysAxesInfo = Ec(t, e);
    }),
    cu({ type: 'updateAxisPointer', event: 'updateAxisPointer', update: ':updateAxisPointer' }, yC),
    yu({
      type: 'tooltip',
      dependencies: ['axisPointer'],
      defaultOption: {
        zlevel: 0,
        z: 60,
        show: !0,
        showContent: !0,
        trigger: 'item',
        triggerOn: 'mousemove|click',
        alwaysShowContent: !1,
        displayMode: 'single',
        renderMode: 'auto',
        confine: !1,
        showDelay: 0,
        hideDelay: 100,
        transitionDuration: 0.4,
        enterable: !1,
        backgroundColor: 'rgba(50,50,50,0.7)',
        borderColor: '#333',
        borderRadius: 4,
        borderWidth: 0,
        padding: 5,
        extraCssText: '',
        axisPointer: {
          type: 'line',
          axis: 'auto',
          animation: 'auto',
          animationDurationUpdate: 200,
          animationEasingUpdate: 'exponentialOut',
          crossStyle: { color: '#999', width: 1, type: 'dashed', textStyle: {} },
        },
        textStyle: { color: '#fff', fontSize: 14 },
      },
    });
  var TC = f,
    DC = Io,
    AC = ['', '-webkit-', '-moz-', '-o-'],
    kC = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';
  (qp.prototype = {
    constructor: qp,
    _enterable: !0,
    update: function () {
      var t = this._container,
        e = t.currentStyle || document.defaultView.getComputedStyle(t),
        i = t.style;
      'absolute' !== i.position && 'absolute' !== e.position && (i.position = 'relative');
    },
    show: function (t) {
      clearTimeout(this._hideTimeout);
      var e = this.el;
      (e.style.cssText = kC + jp(t) + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (t.get('extraCssText') || '')),
        (e.style.display = e.innerHTML ? 'block' : 'none'),
        (e.style.pointerEvents = this._enterable ? 'auto' : 'none'),
        (this._show = !0);
    },
    setContent: function (t) {
      this.el.innerHTML = null == t ? '' : t;
    },
    setEnterable: function (t) {
      this._enterable = t;
    },
    getSize: function () {
      var t = this.el;
      return [t.clientWidth, t.clientHeight];
    },
    moveTo: function (t, e) {
      var i,
        n = this._zr;
      n && n.painter && (i = n.painter.getViewportRootOffset()) && ((t += i.offsetLeft), (e += i.offsetTop));
      var r = this.el.style;
      (r.left = t + 'px'), (r.top = e + 'px'), (this._x = t), (this._y = e);
    },
    hide: function () {
      (this.el.style.display = 'none'), (this._show = !1);
    },
    hideLater: function (t) {
      !this._show ||
        (this._inContent && this._enterable) ||
        (t
          ? ((this._hideDelay = t), (this._show = !1), (this._hideTimeout = setTimeout(y(this.hide, this), t)))
          : this.hide());
    },
    isShow: function () {
      return this._show;
    },
    getOuterSize: function () {
      var t = this.el.clientWidth,
        e = this.el.clientHeight;
      if (document.defaultView && document.defaultView.getComputedStyle) {
        var i = document.defaultView.getComputedStyle(this.el);
        i &&
          ((t += parseInt(i.borderLeftWidth, 10) + parseInt(i.borderRightWidth, 10)),
          (e += parseInt(i.borderTopWidth, 10) + parseInt(i.borderBottomWidth, 10)));
      }
      return { width: t, height: e };
    },
  }),
    (Kp.prototype = {
      constructor: Kp,
      _enterable: !0,
      update: function () {},
      show: function () {
        this._hideTimeout && clearTimeout(this._hideTimeout), this.el.attr('show', !0), (this._show = !0);
      },
      setContent: function (t, e, i) {
        this.el && this._zr.remove(this.el);
        for (var n = {}, r = t, a = '{marker', o = '|}', s = r.indexOf(a); s >= 0; ) {
          var l = r.indexOf(o),
            u = r.substr(s + a.length, l - s - a.length);
          (n['marker' + u] =
            u.indexOf('sub') > -1
              ? { textWidth: 4, textHeight: 4, textBorderRadius: 2, textBackgroundColor: e[u], textOffset: [3, 0] }
              : { textWidth: 10, textHeight: 10, textBorderRadius: 5, textBackgroundColor: e[u] }),
            (r = r.substr(l + 1)),
            (s = r.indexOf('{marker'));
        }
        (this.el = new n_({
          style: {
            rich: n,
            text: t,
            textLineHeight: 20,
            textBackgroundColor: i.get('backgroundColor'),
            textBorderRadius: i.get('borderRadius'),
            textFill: i.get('textStyle.color'),
            textPadding: i.get('padding'),
          },
          z: i.get('z'),
        })),
          this._zr.add(this.el);
        var h = this;
        this.el.on('mouseover', function () {
          h._enterable && (clearTimeout(h._hideTimeout), (h._show = !0)), (h._inContent = !0);
        }),
          this.el.on('mouseout', function () {
            h._enterable && h._show && h.hideLater(h._hideDelay), (h._inContent = !1);
          });
      },
      setEnterable: function (t) {
        this._enterable = t;
      },
      getSize: function () {
        var t = this.el.getBoundingRect();
        return [t.width, t.height];
      },
      moveTo: function (t, e) {
        this.el && this.el.attr('position', [t, e]);
      },
      hide: function () {
        this.el && this.el.hide(), (this._show = !1);
      },
      hideLater: function (t) {
        !this._show ||
          (this._inContent && this._enterable) ||
          (t
            ? ((this._hideDelay = t), (this._show = !1), (this._hideTimeout = setTimeout(y(this.hide, this), t)))
            : this.hide());
      },
      isShow: function () {
        return this._show;
      },
      getOuterSize: function () {
        var t = this.getSize();
        return { width: t[0], height: t[1] };
      },
    });
  var PC = y,
    LC = f,
    OC = so,
    zC = new g_({ shape: { x: -1, y: -1, width: 2, height: 2 } });
  _u({
    type: 'tooltip',
    init: function (t, e) {
      if (!kg.node) {
        var i = t.getComponent('tooltip'),
          n = i.get('renderMode');
        this._renderMode = tr(n);
        var r;
        'html' === this._renderMode
          ? ((r = new qp(e.getDom(), e)), (this._newLine = '<br/>'))
          : ((r = new Kp(e)), (this._newLine = '\n')),
          (this._tooltipContent = r);
      }
    },
    render: function (t, e, i) {
      if (!kg.node) {
        this.group.removeAll(),
          (this._tooltipModel = t),
          (this._ecModel = e),
          (this._api = i),
          (this._lastDataByCoordSys = null),
          (this._alwaysShowContent = t.get('alwaysShowContent'));
        var n = this._tooltipContent;
        n.update(), n.setEnterable(t.get('enterable')), this._initGlobalListener(), this._keepShow();
      }
    },
    _initGlobalListener: function () {
      var t = this._tooltipModel,
        e = t.get('triggerOn');
      Sp(
        'itemTooltip',
        this._api,
        PC(function (t, i, n) {
          'none' !== e && (e.indexOf(t) >= 0 ? this._tryShow(i, n) : 'leave' === t && this._hide(n));
        }, this),
      );
    },
    _keepShow: function () {
      var t = this._tooltipModel,
        e = this._ecModel,
        i = this._api;
      if (null != this._lastX && null != this._lastY && 'none' !== t.get('triggerOn')) {
        var n = this;
        clearTimeout(this._refreshUpdateTimeout),
          (this._refreshUpdateTimeout = setTimeout(function () {
            !i.isDisposed() && n.manuallyShowTip(t, e, i, { x: n._lastX, y: n._lastY });
          }));
      }
    },
    manuallyShowTip: function (t, e, i, n) {
      if (n.from !== this.uid && !kg.node) {
        var r = Jp(n, i);
        this._ticket = '';
        var a = n.dataByCoordSys;
        if (n.tooltip && null != n.x && null != n.y) {
          var o = zC;
          (o.position = [n.x, n.y]),
            o.update(),
            (o.tooltip = n.tooltip),
            this._tryShow({ offsetX: n.x, offsetY: n.y, target: o }, r);
        } else if (a)
          this._tryShow(
            {
              offsetX: n.x,
              offsetY: n.y,
              position: n.position,
              event: {},
              dataByCoordSys: n.dataByCoordSys,
              tooltipOption: n.tooltipOption,
            },
            r,
          );
        else if (null != n.seriesIndex) {
          if (this._manuallyAxisShowTip(t, e, i, n)) return;
          var s = pC(n, e),
            l = s.point[0],
            u = s.point[1];
          null != l &&
            null != u &&
            this._tryShow({ offsetX: l, offsetY: u, position: n.position, target: s.el, event: {} }, r);
        } else
          null != n.x &&
            null != n.y &&
            (i.dispatchAction({ type: 'updateAxisPointer', x: n.x, y: n.y }),
            this._tryShow(
              {
                offsetX: n.x,
                offsetY: n.y,
                position: n.position,
                target: i.getZr().findHover(n.x, n.y).target,
                event: {},
              },
              r,
            ));
      }
    },
    manuallyHideTip: function (t, e, i, n) {
      var r = this._tooltipContent;
      !this._alwaysShowContent && this._tooltipModel && r.hideLater(this._tooltipModel.get('hideDelay')),
        (this._lastX = this._lastY = null),
        n.from !== this.uid && this._hide(Jp(n, i));
    },
    _manuallyAxisShowTip: function (t, e, i, n) {
      var r = n.seriesIndex,
        a = n.dataIndex,
        o = e.getComponent('axisPointer').coordSysAxesInfo;
      if (null != r && null != a && null != o) {
        var s = e.getSeriesByIndex(r);
        if (s) {
          var l = s.getData(),
            t = $p([l.getItemModel(a), s, (s.coordinateSystem || {}).model, t]);
          if ('axis' === t.get('trigger'))
            return (
              i.dispatchAction({ type: 'updateAxisPointer', seriesIndex: r, dataIndex: a, position: n.position }), !0
            );
        }
      }
    },
    _tryShow: function (t, e) {
      var i = t.target,
        n = this._tooltipModel;
      if (n) {
        (this._lastX = t.offsetX), (this._lastY = t.offsetY);
        var r = t.dataByCoordSys;
        r && r.length
          ? this._showAxisTooltip(r, t)
          : i && null != i.dataIndex
          ? ((this._lastDataByCoordSys = null), this._showSeriesItemTooltip(t, i, e))
          : i && i.tooltip
          ? ((this._lastDataByCoordSys = null), this._showComponentItemTooltip(t, i, e))
          : ((this._lastDataByCoordSys = null), this._hide(e));
      }
    },
    _showOrMove: function (t, e) {
      var i = t.get('showDelay');
      (e = y(e, this)), clearTimeout(this._showTimout), i > 0 ? (this._showTimout = setTimeout(e, i)) : e();
    },
    _showAxisTooltip: function (t, e) {
      var i = this._ecModel,
        n = this._tooltipModel,
        a = [e.offsetX, e.offsetY],
        o = [],
        s = [],
        l = $p([e.tooltipOption, n]),
        u = this._renderMode,
        h = this._newLine,
        c = {};
      LC(
        t,
        function (t) {
          LC(t.dataByAxis, function (t) {
            var e = i.getComponent(t.axisDim + 'Axis', t.axisIndex),
              n = t.value,
              a = [];
            if (e && null != n) {
              var l = Fp(n, e.axis, i, t.seriesDataIndices, t.valueLabelOpt);
              f(t.seriesDataIndices, function (o) {
                var h = i.getSeriesByIndex(o.seriesIndex),
                  d = o.dataIndexInside,
                  f = h && h.getDataParams(d);
                if (
                  ((f.axisDim = t.axisDim),
                  (f.axisIndex = t.axisIndex),
                  (f.axisType = t.axisType),
                  (f.axisId = t.axisId),
                  (f.axisValue = Th(e.axis, n)),
                  (f.axisValueLabel = l),
                  f)
                ) {
                  s.push(f);
                  var p,
                    g = h.formatTooltip(d, !0, null, u);
                  if (S(g)) {
                    p = g.html;
                    var m = g.markers;
                    r(c, m);
                  } else p = g;
                  a.push(p);
                }
              });
              var d = l;
              o.push('html' !== u ? a.join(h) : (d ? Co(d) + h : '') + a.join(h));
            }
          });
        },
        this,
      ),
        o.reverse(),
        (o = o.join(this._newLine + this._newLine));
      var d = e.position;
      this._showOrMove(l, function () {
        this._updateContentNotChangedOnAxis(t)
          ? this._updatePosition(l, d, a[0], a[1], this._tooltipContent, s)
          : this._showTooltipContent(l, o, s, Math.random(), a[0], a[1], d, void 0, c);
      });
    },
    _showSeriesItemTooltip: function (t, e, i) {
      var n = this._ecModel,
        r = e.seriesIndex,
        a = n.getSeriesByIndex(r),
        o = e.dataModel || a,
        s = e.dataIndex,
        l = e.dataType,
        u = o.getData(),
        h = $p([u.getItemModel(s), o, a && (a.coordinateSystem || {}).model, this._tooltipModel]),
        c = h.get('trigger');
      if (null == c || 'item' === c) {
        var d,
          f,
          p = o.getDataParams(s, l),
          g = o.formatTooltip(s, !1, l, this._renderMode);
        S(g) ? ((d = g.html), (f = g.markers)) : ((d = g), (f = null));
        var m = 'item_' + o.name + '_' + s;
        this._showOrMove(h, function () {
          this._showTooltipContent(h, d, p, m, t.offsetX, t.offsetY, t.position, t.target, f);
        }),
          i({ type: 'showTip', dataIndexInside: s, dataIndex: u.getRawIndex(s), seriesIndex: r, from: this.uid });
      }
    },
    _showComponentItemTooltip: function (t, e, i) {
      var n = e.tooltip;
      if ('string' == typeof n) {
        var r = n;
        n = { content: r, formatter: r };
      }
      var a = new Qa(n, this._tooltipModel, this._ecModel),
        o = a.get('content'),
        s = Math.random();
      this._showOrMove(a, function () {
        this._showTooltipContent(a, o, a.get('formatterParams') || {}, s, t.offsetX, t.offsetY, t.position, e);
      }),
        i({ type: 'showTip', from: this.uid });
    },
    _showTooltipContent: function (t, e, i, n, r, a, o, s, l) {
      if (((this._ticket = ''), t.get('showContent') && t.get('show'))) {
        var u = this._tooltipContent,
          h = t.get('formatter');
        o = o || t.get('position');
        var c = e;
        if (h && 'string' == typeof h) c = To(h, i, !0);
        else if ('function' == typeof h) {
          var d = PC(function (e, n) {
            e === this._ticket && (u.setContent(n, l, t), this._updatePosition(t, o, r, a, u, i, s));
          }, this);
          (this._ticket = n), (c = h(i, n, d));
        }
        u.setContent(c, l, t), u.show(t), this._updatePosition(t, o, r, a, u, i, s);
      }
    },
    _updatePosition: function (t, e, i, n, r, a, o) {
      var s = this._api.getWidth(),
        l = this._api.getHeight();
      e = e || t.get('position');
      var u = r.getSize(),
        h = t.get('align'),
        c = t.get('verticalAlign'),
        d = o && o.getBoundingRect().clone();
      if (
        (o && d.applyTransform(o.transform),
        'function' == typeof e && (e = e([i, n], a, r.el, d, { viewSize: [s, l], contentSize: u.slice() })),
        x(e))
      )
        (i = OC(e[0], s)), (n = OC(e[1], l));
      else if (S(e)) {
        (e.width = u[0]), (e.height = u[1]);
        var f = Ro(e, { width: s, height: l });
        (i = f.x), (n = f.y), (h = null), (c = null);
      } else if ('string' == typeof e && o) {
        var p = eg(e, d, u);
        (i = p[0]), (n = p[1]);
      } else {
        var p = Qp(i, n, r, s, l, h ? null : 20, c ? null : 20);
        (i = p[0]), (n = p[1]);
      }
      if (
        (h && (i -= ig(h) ? u[0] / 2 : 'right' === h ? u[0] : 0),
        c && (n -= ig(c) ? u[1] / 2 : 'bottom' === c ? u[1] : 0),
        t.get('confine'))
      ) {
        var p = tg(i, n, r, s, l);
        (i = p[0]), (n = p[1]);
      }
      r.moveTo(i, n);
    },
    _updateContentNotChangedOnAxis: function (t) {
      var e = this._lastDataByCoordSys,
        i = !!e && e.length === t.length;
      return (
        i &&
          LC(e, function (e, n) {
            var r = e.dataByAxis || {},
              a = t[n] || {},
              o = a.dataByAxis || [];
            (i &= r.length === o.length),
              i &&
                LC(r, function (t, e) {
                  var n = o[e] || {},
                    r = t.seriesDataIndices || [],
                    a = n.seriesDataIndices || [];
                  (i &=
                    t.value === n.value && t.axisType === n.axisType && t.axisId === n.axisId && r.length === a.length),
                    i &&
                      LC(r, function (t, e) {
                        var n = a[e];
                        i &= t.seriesIndex === n.seriesIndex && t.dataIndex === n.dataIndex;
                      });
                });
          }),
        (this._lastDataByCoordSys = t),
        !!i
      );
    },
    _hide: function (t) {
      (this._lastDataByCoordSys = null), t({ type: 'hideTip', from: this.uid });
    },
    dispose: function (t, e) {
      kg.node || (this._tooltipContent.hide(), Ap('itemTooltip', e));
    },
  }),
    cu({ type: 'showTip', event: 'showTip', update: 'tooltip:manuallyShowTip' }, function () {}),
    cu({ type: 'hideTip', event: 'hideTip', update: 'tooltip:manuallyHideTip' }, function () {});
  var EC = Mo,
    RC = Co,
    BC = yu({
      type: 'marker',
      dependencies: ['series', 'grid', 'polar', 'geo'],
      init: function (t, e, i) {
        if (Cg && 'marker' === this.type)
          throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');
        this.mergeDefaultAndTheme(t, i), this._mergeOption(t, i, !1, !0);
      },
      isAnimationEnabled: function () {
        if (kg.node) return !1;
        var t = this.__hostSeries;
        return this.getShallow('animation') && t && t.isAnimationEnabled();
      },
      mergeOption: function (t, e) {
        this._mergeOption(t, e, !1, !1);
      },
      _mergeOption: function (t, e, i, n) {
        var r = this.constructor,
          a = this.mainType + 'Model';
        i ||
          e.eachSeries(function (t) {
            var i = t.get(this.mainType, !0),
              s = t[a];
            return i && i.data
              ? (s
                  ? s._mergeOption(i, e, !0)
                  : (n && ng(i),
                    f(i.data, function (t) {
                      t instanceof Array ? (ng(t[0]), ng(t[1])) : ng(t);
                    }),
                    (s = new r(i, this, e)),
                    o(s, { mainType: this.mainType, seriesIndex: t.seriesIndex, name: t.name, createdBySelf: !0 }),
                    (s.__hostSeries = t)),
                void (t[a] = s))
              : void (t[a] = null);
          }, this);
      },
      formatTooltip: function (t) {
        var e = this.getData(),
          i = this.getRawValue(t),
          n = x(i) ? p(i, EC).join(', ') : EC(i),
          r = e.getName(t),
          a = RC(this.name);
        return (
          (null != i || r) && (a += '<br />'),
          r && ((a += RC(r)), null != i && (a += ' : ')),
          null != i && (a += RC(n)),
          a
        );
      },
      getData: function () {
        return this._data;
      },
      setData: function (t) {
        this._data = t;
      },
    });
  c(BC, qx),
    BC.extend({
      type: 'markPoint',
      defaultOption: {
        zlevel: 0,
        z: 5,
        symbol: 'pin',
        symbolSize: 50,
        tooltip: { trigger: 'item' },
        label: { show: !0, position: 'inside' },
        itemStyle: { borderWidth: 2 },
        emphasis: { label: { show: !0 } },
      },
    });
  var NC = u,
    FC = _,
    GC = { min: FC(og, 'min'), max: FC(og, 'max'), average: FC(og, 'average') },
    VC = _u({
      type: 'marker',
      init: function () {
        this.markerGroupMap = N();
      },
      render: function (t, e, i) {
        var n = this.markerGroupMap;
        n.each(function (t) {
          t.__keep = !1;
        });
        var r = this.type + 'Model';
        e.eachSeries(function (t) {
          var n = t[r];
          n && this.renderSeries(t, n, e, i);
        }, this),
          n.each(function (t) {
            !t.__keep && this.group.remove(t.group);
          }, this);
      },
      renderSeries: function () {},
    });
  VC.extend({
    type: 'markPoint',
    updateTransform: function (t, e, i) {
      e.eachSeries(function (t) {
        var e = t.markPointModel;
        e && (fg(e.getData(), t, i), this.markerGroupMap.get(t.id).updateLayout(e));
      }, this);
    },
    renderSeries: function (t, e, i, n) {
      var r = t.coordinateSystem,
        a = t.id,
        o = t.getData(),
        s = this.markerGroupMap,
        l = s.get(a) || s.set(a, new Qc()),
        u = pg(r, t, e);
      e.setData(u),
        fg(e.getData(), t, n),
        u.each(function (t) {
          var i = u.getItemModel(t),
            n = i.getShallow('symbol'),
            r = i.getShallow('symbolSize'),
            a = w(n),
            s = w(r);
          if (a || s) {
            var l = e.getRawValue(t),
              h = e.getDataParams(t);
            a && (n = n(l, h)), s && (r = r(l, h));
          }
          u.setItemVisual(t, { symbol: n, symbolSize: r, color: i.get('itemStyle.color') || o.getVisual('color') });
        }),
        l.updateData(u),
        this.group.add(l.group),
        u.eachItemGraphicEl(function (t) {
          t.traverse(function (t) {
            t.dataModel = e;
          });
        }),
        (l.__keep = !0),
        (l.group.silent = e.get('silent') || t.get('silent'));
    },
  }),
    lu(function (t) {
      t.markPoint = t.markPoint || {};
    }),
    BC.extend({
      type: 'markLine',
      defaultOption: {
        zlevel: 0,
        z: 5,
        symbol: ['circle', 'arrow'],
        symbolSize: [8, 16],
        precision: 2,
        tooltip: { trigger: 'item' },
        label: { show: !0, position: 'end' },
        lineStyle: { type: 'dashed' },
        emphasis: { label: { show: !0 }, lineStyle: { width: 3 } },
        animationEasing: 'linear',
      },
    });
  var HC = function (t, e, i, a) {
    var s = t.getData(),
      l = a.type;
    if (
      !x(a) &&
      ('min' === l || 'max' === l || 'average' === l || 'median' === l || null != a.xAxis || null != a.yAxis)
    ) {
      var u, h;
      if (null != a.yAxis || null != a.xAxis) (u = e.getAxis(null != a.yAxis ? 'y' : 'x')), (h = D(a.yAxis, a.xAxis));
      else {
        var c = lg(a, s, e, t);
        u = c.valueAxis;
        var d = $u(s, c.valueDataDim);
        h = dg(s, d, l);
      }
      var f = 'x' === u.dim ? 0 : 1,
        p = 1 - f,
        g = n(a),
        m = {};
      (g.type = null), (g.coord = []), (m.coord = []), (g.coord[p] = -1 / 0), (m.coord[p] = 1 / 0);
      var v = i.get('precision');
      v >= 0 && 'number' == typeof h && (h = +h.toFixed(Math.min(v, 20))),
        (g.coord[f] = m.coord[f] = h),
        (a = [g, m, { type: l, valueIndex: a.valueIndex, value: h }]);
    }
    return (
      (a = [sg(t, a[0]), sg(t, a[1]), o({}, a[2])]), (a[2].type = a[2].type || ''), r(a[2], a[0]), r(a[2], a[1]), a
    );
  };
  VC.extend({
    type: 'markLine',
    updateTransform: function (t, e, i) {
      e.eachSeries(function (t) {
        var e = t.markLineModel;
        if (e) {
          var n = e.getData(),
            r = e.__from,
            a = e.__to;
          r.each(function (e) {
            yg(r, e, !0, t, i), yg(a, e, !1, t, i);
          }),
            n.each(function (t) {
              n.setItemLayout(t, [r.getItemLayout(t), a.getItemLayout(t)]);
            }),
            this.markerGroupMap.get(t.id).updateLayout();
        }
      }, this);
    },
    renderSeries: function (t, e, i, n) {
      function r(e, i, r) {
        var a = e.getItemModel(i);
        yg(e, i, r, t, n),
          e.setItemVisual(i, {
            symbolSize: a.get('symbolSize') || g[r ? 0 : 1],
            symbol: a.get('symbol', !0) || p[r ? 0 : 1],
            color: a.get('itemStyle.color') || s.getVisual('color'),
          });
      }
      var a = t.coordinateSystem,
        o = t.id,
        s = t.getData(),
        l = this.markerGroupMap,
        u = l.get(o) || l.set(o, new If());
      this.group.add(u.group);
      var h = _g(a, t, e),
        c = h.from,
        d = h.to,
        f = h.line;
      (e.__from = c), (e.__to = d), e.setData(f);
      var p = e.get('symbol'),
        g = e.get('symbolSize');
      x(p) || (p = [p, p]),
        'number' == typeof g && (g = [g, g]),
        h.from.each(function (t) {
          r(c, t, !0), r(d, t, !1);
        }),
        f.each(function (t) {
          var e = f.getItemModel(t).get('lineStyle.color');
          f.setItemVisual(t, { color: e || c.getItemVisual(t, 'color') }),
            f.setItemLayout(t, [c.getItemLayout(t), d.getItemLayout(t)]),
            f.setItemVisual(t, {
              fromSymbolSize: c.getItemVisual(t, 'symbolSize'),
              fromSymbol: c.getItemVisual(t, 'symbol'),
              toSymbolSize: d.getItemVisual(t, 'symbolSize'),
              toSymbol: d.getItemVisual(t, 'symbol'),
            });
        }),
        u.updateData(f),
        h.line.eachItemGraphicEl(function (t) {
          t.traverse(function (t) {
            t.dataModel = e;
          });
        }),
        (u.__keep = !0),
        (u.group.silent = e.get('silent') || t.get('silent'));
    },
  }),
    lu(function (t) {
      t.markLine = t.markLine || {};
    }),
    BC.extend({
      type: 'markArea',
      defaultOption: {
        zlevel: 0,
        z: 1,
        tooltip: { trigger: 'item' },
        animation: !1,
        label: { show: !0, position: 'top' },
        itemStyle: { borderWidth: 0 },
        emphasis: { label: { show: !0, position: 'top' } },
      },
    });
  var WC = function (t, e, i, n) {
      var r = sg(t, n[0]),
        o = sg(t, n[1]),
        s = D,
        l = r.coord,
        u = o.coord;
      (l[0] = s(l[0], -1 / 0)), (l[1] = s(l[1], -1 / 0)), (u[0] = s(u[0], 1 / 0)), (u[1] = s(u[1], 1 / 0));
      var h = a([{}, r, o]);
      return (h.coord = [r.coord, o.coord]), (h.x0 = r.x), (h.y0 = r.y), (h.x1 = o.x), (h.y1 = o.y), h;
    },
    UC = [
      ['x0', 'y0'],
      ['x1', 'y0'],
      ['x1', 'y1'],
      ['x0', 'y1'],
    ];
  VC.extend({
    type: 'markArea',
    updateTransform: function (t, e, i) {
      e.eachSeries(function (t) {
        var e = t.markAreaModel;
        if (e) {
          var n = e.getData();
          n.each(function (e) {
            var r = p(UC, function (r) {
              return Sg(n, e, r, t, i);
            });
            n.setItemLayout(e, r);
            var a = n.getItemGraphicEl(e);
            a.setShape('points', r);
          });
        }
      }, this);
    },
    renderSeries: function (t, e, i, n) {
      var r = t.coordinateSystem,
        a = t.id,
        o = t.getData(),
        l = this.markerGroupMap,
        u = l.get(a) || l.set(a, { group: new Wm() });
      this.group.add(u.group), (u.__keep = !0);
      var h = Mg(r, t, e);
      e.setData(h),
        h.each(function (e) {
          h.setItemLayout(
            e,
            p(UC, function (i) {
              return Sg(h, e, i, t, n);
            }),
          ),
            h.setItemVisual(e, { color: o.getVisual('color') });
        }),
        h
          .diff(u.__data)
          .add(function (t) {
            var e = new c_({ shape: { points: h.getItemLayout(t) } });
            h.setItemGraphicEl(t, e), u.group.add(e);
          })
          .update(function (t, i) {
            var n = u.__data.getItemGraphicEl(i);
            Ga(n, { shape: { points: h.getItemLayout(t) } }, e, t), u.group.add(n), h.setItemGraphicEl(t, n);
          })
          .remove(function (t) {
            var e = u.__data.getItemGraphicEl(t);
            u.group.remove(e);
          })
          .execute(),
        h.eachItemGraphicEl(function (t, i) {
          var n = h.getItemModel(i),
            r = n.getModel('label'),
            a = n.getModel('emphasis.label'),
            o = h.getItemVisual(i, 'color');
          t.useStyle(s(n.getModel('itemStyle').getItemStyle(), { fill: ni(o, 0.4), stroke: o })),
            (t.hoverStyle = n.getModel('emphasis.itemStyle').getItemStyle()),
            Da(t.style, t.hoverStyle, r, a, {
              labelFetcher: e,
              labelDataIndex: i,
              defaultText: h.getName(i) || '',
              isRectText: !0,
              autoColor: o,
            }),
            Ma(t, {}),
            (t.dataModel = e);
        }),
        (u.__data = h),
        (u.group.silent = e.get('silent') || t.get('silent'));
    },
  }),
    lu(function (t) {
      t.markArea = t.markArea || {};
    }),
    (t.version = Ww),
    (t.dependencies = Uw),
    (t.PRIORITY = nb),
    (t.init = eu),
    (t.connect = iu),
    (t.disConnect = nu),
    (t.disconnect = Sb),
    (t.dispose = ru),
    (t.getInstanceByDom = au),
    (t.getInstanceById = ou),
    (t.registerTheme = su),
    (t.registerPreprocessor = lu),
    (t.registerProcessor = uu),
    (t.registerPostUpdate = hu),
    (t.registerAction = cu),
    (t.registerCoordinateSystem = du),
    (t.getCoordinateSystemDimensions = fu),
    (t.registerLayout = pu),
    (t.registerVisual = gu),
    (t.registerLoading = vu),
    (t.extendComponentModel = yu),
    (t.extendComponentView = _u),
    (t.extendSeriesModel = xu),
    (t.extendChartView = wu),
    (t.setCanvasCreator = bu),
    (t.registerMap = Su),
    (t.getMap = Mu),
    (t.dataTool = Mb),
    (t.zrender = Gv),
    (t.number = $_),
    (t.format = rx),
    (t.throttle = nl),
    (t.helper = IS),
    (t.matrix = cm),
    (t.vector = Kg),
    (t.color = km),
    (t.parseGeoJSON = TS),
    (t.parseGeoJson = PS),
    (t.util = LS),
    (t.graphic = OS),
    (t.List = Rb),
    (t.Model = Qa),
    (t.Axis = kS),
    (t.env = kg);
});
